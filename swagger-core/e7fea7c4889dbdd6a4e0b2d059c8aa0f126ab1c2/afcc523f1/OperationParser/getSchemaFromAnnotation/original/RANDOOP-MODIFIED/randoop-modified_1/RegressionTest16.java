import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest16 {

    public static boolean debug = false;

    @Test
    public void test08001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08001");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Comparable<java.lang.String> strComparable6 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(strComparable6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test08002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08002");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.properties(strMap33);
        java.lang.Boolean boolean35 = strComparableSchema10.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test08003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08003");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema21 = schema2.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean22 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = strComparableSchema23.getExternalDocs();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema23.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema28.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = strComparableSchema28.getProperties();
        io.swagger.oas.models.media.Schema schema42 = schema26.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = schema42.getExtensions();
        java.math.BigDecimal bigDecimal44 = null;
        schema42.setMinimum(bigDecimal44);
        schema42.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean48 = schema42.getUniqueItems();
        schema42.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        boolean boolean51 = schema2.equals((java.lang.Object) schema42);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(externalDocumentation24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test08004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08004");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        strComparableSchema14.setDefault((java.lang.Object) strComparableSchema17);
        java.lang.Boolean boolean22 = strComparableSchema17.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.lang.String[] strArray41 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        strComparableSchema24.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.Integer int45 = strComparableSchema24.getMaxLength();
        strComparableSchema24.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema24.$ref("#/components/schemas/");
        strComparableSchema24.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal52 = null;
        strComparableSchema24.setMinimum(bigDecimal52);
        strComparableSchema24.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema24.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.XML xML59 = schema58.getXml();
        java.lang.Integer int60 = schema58.getMaxProperties();
        schema58.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(xML59);
        org.junit.Assert.assertNull(int60);
    }

    @Test
    public void test08005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08005");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = strComparableSchema25.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableSchema25.getDefault();
        java.lang.Integer int28 = strComparableSchema25.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema25.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema2.not(schema36);
        schema36.setPattern("no description");
        io.swagger.oas.models.media.Schema schema41 = schema36.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = schema41.getExternalDocs();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList43 = schema41.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNull(strComparable27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(externalDocumentation42);
        org.junit.Assert.assertNull(strComparableList43);
    }

    @Test
    public void test08006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08006");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        boolean boolean15 = serverListOptional14.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional14.orElse(serverList16);
        io.swagger.oas.models.servers.Server[] serverArray18 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList19 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList19, serverArray18);
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        io.swagger.oas.annotations.servers.Server[] serverArray23 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray23);
        boolean boolean25 = serverListOptional24.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList27 = serverListOptional24.orElse(serverList26);
        io.swagger.oas.models.servers.Server[] serverArray28 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList29 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList29, serverArray28);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional24.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        java.util.List<io.swagger.oas.models.servers.Server> serverList32 = serverListOptional1.orElse(serverList31);
        boolean boolean33 = serverListOptional1.isPresent();
        java.lang.String str34 = serverListOptional1.toString();
        boolean boolean35 = serverListOptional1.isPresent();
        boolean boolean36 = serverListOptional1.isPresent();
        java.lang.String str37 = serverListOptional1.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serverList21);
        org.junit.Assert.assertNotNull(serverList22);
        org.junit.Assert.assertNotNull(serverArray23);
        org.junit.Assert.assertNotNull(serverListOptional24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(serverList27);
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNotNull(serverList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Optional.empty" + "'", str34, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Optional.empty" + "'", str37, "Optional.empty");
    }

    @Test
    public void test08007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08007");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema8.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        schema34.setExternalDocs(externalDocumentation35);
        schema34.setPattern("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = schema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema40 = schema9.example((java.lang.Object) externalDocumentation39);
        java.lang.Integer int41 = schema40.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
    }

    @Test
    public void test08008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08008");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test08009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08009");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.math.BigDecimal bigDecimal6 = null;
        schema5.setMinimum(bigDecimal6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.uniqueItems((java.lang.Boolean) false);
        schema13.setDescription("");
        schema13.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        schema13.setExternalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema21 = schema13.$ref("no description");
        io.swagger.oas.models.media.Schema schema22 = schema5.example((java.lang.Object) "no description");
        java.lang.String str23 = schema22.getType();
        schema22.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema22.maximum(bigDecimal26);
        schema27.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test08010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08010");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray24 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        schema18.setExample((java.lang.Object) tagSetOptional25);
        io.swagger.oas.models.media.Schema schema28 = schema18.format("#/components/schemas/");
        strComparableSchema0.setAdditionalProperties(schema18);
        schema18.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema18.discriminator(discriminator32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.String str40 = strComparableSchema34.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional48 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.required((java.util.List<java.lang.String>) strList46);
        strComparableSchema34.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema52.setDescription("hi!");
        java.math.BigDecimal bigDecimal60 = null;
        strComparableSchema52.setMaximum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema52.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList64 = strComparableSchema52.getRequired();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema34.required(strList64);
        io.swagger.oas.models.media.Schema schema66 = schema18.required(strList64);
        schema18.setExclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema18.minimum(bigDecimal69);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.externalDocs(externalDocumentation71);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test08011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08011");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        schema4.setTitle("Optional.empty");
        java.lang.String str7 = schema4.getPattern();
        java.math.BigDecimal bigDecimal8 = schema4.getMultipleOf();
        io.swagger.oas.models.media.Schema schema10 = schema4.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema4.getNot();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
    }

    @Test
    public void test08012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08012");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema0.getEnum();
        java.lang.Boolean boolean21 = strComparableSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        strComparableSchema0.setType("no description");
        java.lang.Boolean boolean26 = strComparableSchema0.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test08013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08013");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.properties(strMap28);
        java.lang.Integer int30 = schema29.getMinProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList34 = strComparableSchema33.getRequired();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema33.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal48 = strComparableSchema37.getMultipleOf();
        java.lang.String str49 = strComparableSchema37.get$ref();
        java.lang.String[] strArray54 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        strComparableSchema37.setRequired((java.util.List<java.lang.String>) strList55);
        java.lang.Integer int58 = strComparableSchema37.getMaxLength();
        strComparableSchema37.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema33.setDescription("");
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema33.multipleOf(bigDecimal64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = strComparableSchema66.getExternalDocs();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema66.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        strComparableSchema71.setDescription("hi!");
        strComparableSchema71.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema71.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = strComparableSchema71.getProperties();
        io.swagger.oas.models.media.Schema schema85 = schema69.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema71);
        java.lang.Boolean boolean86 = schema85.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator87 = null;
        schema85.setDiscriminator(discriminator87);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap89 = schema85.getProperties();
        io.swagger.oas.models.media.Schema schema90 = strComparableSchema33.properties(strMap89);
        schema32.setProperties(strMap89);
        schema32.setExclusiveMinimum((java.lang.Boolean) false);
        schema32.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(externalDocumentation67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(boolean86);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test08014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08014");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = schema13.getMaximum();
        java.lang.Boolean boolean15 = schema13.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema17 = schema13.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        schema17.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema17.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test08015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08015");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "hi!", "Optional.empty", "no description", "," };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.lang.String[]> strArrayOptional10 = java.util.Optional.ofNullable(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(strArrayOptional10);
        org.junit.Assert.assertNotNull(tagSetOptional11);
        org.junit.Assert.assertNotNull(tagSetOptional12);
        org.junit.Assert.assertNotNull(tagSetOptional13);
        org.junit.Assert.assertNotNull(tagSetOptional14);
    }

    @Test
    public void test08016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08016");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        java.lang.String str11 = schema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = schema10.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean14 = schema13.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema13.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema18 = schema16.description("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: Optional.empty\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test08017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08017");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMaxProperties();
        schema9.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema schema15 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema17.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.maximum(bigDecimal20);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test08018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08018");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setDeprecated((java.lang.Boolean) true);
        schema6.setExclusiveMinimum((java.lang.Boolean) false);
        schema6.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema6.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test08019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08019");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema16.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema16.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.String str56 = strComparableSchema50.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema50.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema49.required((java.util.List<java.lang.String>) strList62);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional67 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema0.required((java.util.List<java.lang.String>) strList62);
        java.math.BigDecimal bigDecimal69 = strComparableSchema0.getMaximum();
        java.lang.Boolean boolean70 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strCollectionOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(bigDecimal69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test08020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08020");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema16.writeOnly((java.lang.Boolean) false);
        java.lang.String str19 = schema18.getDescription();
        schema18.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int22 = schema18.getMinLength();
        java.lang.Boolean boolean23 = schema18.getNullable();
        java.lang.Boolean boolean24 = schema18.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + false + "'", boolean24, false);
    }

    @Test
    public void test08021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08021");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        java.lang.Integer int28 = strComparableSchema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema6.maxLength((java.lang.Integer) 10);
        strComparableSchema2.setExample((java.lang.Object) strComparableSchema6);
        java.lang.Boolean boolean34 = strComparableSchema6.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema6.minItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.maximum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema38.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.annotations.servers.Server server42 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray43 = new io.swagger.oas.annotations.servers.Server[] { server42 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional44 = io.swagger.jaxrs2.OperationParser.getServers(serverArray43);
        boolean boolean45 = serverListOptional44.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.lang.String str52 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema46.getNot();
        boolean boolean54 = serverListOptional44.equals((java.lang.Object) schema53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema53.properties(strMap55);
        io.swagger.oas.models.media.Schema schema58 = schema53.uniqueItems((java.lang.Boolean) false);
        schema58.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema62 = schema58.deprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        io.swagger.oas.models.media.Schema schema65 = schema40.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema62);
        schema40.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(serverArray43);
        org.junit.Assert.assertNotNull(serverListOptional44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test08022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08022");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Integer int3 = schema2.getMaxLength();
        schema2.setWriteOnly((java.lang.Boolean) false);
        schema2.setFormat("*/*");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema2.minProperties((java.lang.Integer) 0);
        schema2.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema2.getExternalDocs();
        io.swagger.oas.models.media.Schema schema18 = schema2.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = schema18.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
    }

    @Test
    public void test08023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08023");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = strComparableSchema25.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableSchema25.getDefault();
        java.lang.Integer int28 = strComparableSchema25.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema25.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema2.not(schema36);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        strComparableSchema2.setDiscriminator(discriminator38);
        strComparableSchema2.setWriteOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean42 = strComparableSchema2.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNull(strComparable27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + true + "'", boolean42, true);
    }

    @Test
    public void test08024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08024");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema17 = schema15.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str20 = schema15.getDescription();
        io.swagger.oas.models.media.Schema schema22 = schema15.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema15.name("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str25 = schema24.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str25, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test08025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08025");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema17.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        java.math.BigDecimal bigDecimal34 = null;
        strComparableSchema26.setMaximum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal47 = strComparableSchema36.getMultipleOf();
        java.lang.String str48 = strComparableSchema36.get$ref();
        java.lang.String[] strArray53 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        strComparableSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema26.required((java.util.List<java.lang.String>) strList54);
        strComparableSchema22.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strList54);
        io.swagger.oas.models.media.Schema schema59 = schema21.required((java.util.List<java.lang.String>) strList54);
        java.lang.String str60 = schema21.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema62 = schema21.getNot();
        schema62.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Optional.empty" + "'", str60, "Optional.empty");
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test08026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08026");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        strComparableSchema0.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test08027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08027");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        strComparableSchema0.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = strComparableSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema24.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal38 = strComparableSchema27.getMultipleOf();
        java.lang.String str39 = strComparableSchema27.get$ref();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema27.maximum(bigDecimal40);
        io.swagger.oas.models.media.Discriminator discriminator42 = strComparableSchema27.getDiscriminator();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema44.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.setMinLength((java.lang.Integer) 100);
        java.lang.String str57 = strComparableSchema47.getDescription();
        schema44.setNot((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = null;
        strComparableSchema61.setExtensions(strMap65);
        strComparableSchema61.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int69 = strComparableSchema61.getMaxItems();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema61.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str73 = strComparableSchema72.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema74.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema72.not((io.swagger.oas.models.media.Schema) strComparableSchema74);
        strComparableSchema72.setDescription("hi!");
        java.math.BigDecimal bigDecimal80 = null;
        strComparableSchema72.setMaximum(bigDecimal80);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema72.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList84 = strComparableSchema72.getRequired();
        io.swagger.oas.models.media.Schema schema85 = schema71.required(strList84);
        strComparableSchema47.setRequired(strList84);
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema90 = strComparableSchema47.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal91 = strComparableSchema47.getMaximum();
        java.lang.String str92 = strComparableSchema47.getDescription();
        schema26.setNot((io.swagger.oas.models.media.Schema) strComparableSchema47);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(bigDecimal91);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str92, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test08028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08028");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema4.description("");
        java.lang.Integer int7 = schema4.getMaxItems();
        io.swagger.oas.models.media.Schema schema9 = schema4.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal10 = schema9.getMultipleOf();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = schema9.getEnum();
        java.lang.Boolean boolean12 = schema9.getUniqueItems();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(strComparableList11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test08029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08029");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.xml(xML6);
        schema7.setMaxItems((java.lang.Integer) (-1));
        schema7.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal12 = schema7.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema13.setNullable((java.lang.Boolean) false);
        java.lang.String str26 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema13.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = strComparableSchema30.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = strComparableSchema35.getProperties();
        io.swagger.oas.models.media.Schema schema49 = schema33.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.lang.Boolean boolean50 = strComparableSchema35.getDeprecated();
        io.swagger.oas.models.media.Schema schema51 = schema28.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema schema52 = schema7.not(schema28);
        java.lang.Integer int53 = schema28.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.writeOnly((java.lang.Boolean) false);
        schema57.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema57.title("#/components/schemas/");
        schema61.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema61.minimum(bigDecimal64);
        io.swagger.oas.models.media.Schema schema66 = schema28.addProperties("", schema65);
        java.lang.Boolean boolean67 = schema65.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
    }

    @Test
    public void test08030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08030");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.writeOnly((java.lang.Boolean) false);
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema3.additionalProperties(schema6);
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        schema12.set$ref("");
        schema12.setUniqueItems((java.lang.Boolean) true);
        schema12.setMaxItems((java.lang.Integer) 100);
        java.lang.Integer int19 = schema12.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test08031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08031");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        strComparableSchema2.setProperties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema10.setNullable((java.lang.Boolean) false);
        java.lang.String str23 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema10.name("");
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema10.setMinimum(bigDecimal26);
        java.lang.Boolean boolean28 = strComparableSchema10.getReadOnly();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema10.description("*/*");
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema10.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList33 = strComparableSchema10.getRequired();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema2.required(strList33);
        strComparableSchema2.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test08032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08032");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema37.getNot();
        io.swagger.oas.models.media.Schema schema40 = schema38.type("no description");
        java.lang.Integer int41 = schema40.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
    }

    @Test
    public void test08033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08033");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.type("");
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test08034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08034");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        java.lang.Boolean boolean12 = schema5.getNullable();
        java.lang.Boolean boolean13 = schema5.getWriteOnly();
        io.swagger.oas.models.media.Schema schema15 = schema5.$ref("no description");
        io.swagger.oas.models.media.Schema schema17 = schema15.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.multipleOf(bigDecimal18);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test08035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08035");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.format("*/*");
        schema19.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str22 = schema19.getName();
        schema19.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test08036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08036");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        java.lang.String str20 = strComparableSchema0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test08037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08037");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.XML xML6 = null;
        strComparableSchema0.setXml(xML6);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.discriminator(discriminator8);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str12 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal34 = strComparableSchema23.getMultipleOf();
        java.lang.String str35 = strComparableSchema23.get$ref();
        java.lang.String[] strArray40 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        strComparableSchema23.setRequired((java.util.List<java.lang.String>) strList41);
        schema22.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        schema22.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema48 = schema22.format("Optional.empty");
        strComparableSchema0.setExample((java.lang.Object) "Optional.empty");
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test08038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08038");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = schema17.getMinimum();
        java.lang.Integer int21 = schema17.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema24.setMaxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal30 = strComparableSchema24.getMinimum();
        strComparableSchema24.setMinItems((java.lang.Integer) 10);
        schema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        schema17.setExternalDocs(externalDocumentation34);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal30);
    }

    @Test
    public void test08039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08039");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        io.swagger.oas.models.media.Schema schema14 = schema11.maxProperties((java.lang.Integer) 0);
        schema14.setDescription("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Integer int17 = schema14.getMaxItems();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test08040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08040");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.writeOnly((java.lang.Boolean) false);
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema3.additionalProperties(schema6);
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        schema12.set$ref("");
        schema12.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.lang.String[] strArray34 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        strComparableSchema17.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = strComparableSchema17.getMaxLength();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema17.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema17.maxItems((java.lang.Integer) 100);
        strComparableSchema17.setDeprecated((java.lang.Boolean) true);
        strComparableSchema17.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal47 = null;
        strComparableSchema17.setMaximum(bigDecimal47);
        boolean boolean49 = schema12.equals((java.lang.Object) bigDecimal47);
        java.math.BigDecimal bigDecimal50 = schema12.getMinimum();
        java.math.BigDecimal bigDecimal51 = null;
        schema12.setMaximum(bigDecimal51);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(bigDecimal50);
    }

    @Test
    public void test08041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08041");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.maximum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.type("Optional.empty");
        java.lang.Integer int10 = schema9.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test08042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08042");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = schema3.addRequiredItem("hi!");
        java.lang.String str6 = schema3.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.properties(strMap8);
        java.lang.Integer int10 = schema9.getMaxLength();
        schema9.setWriteOnly((java.lang.Boolean) false);
        schema9.setFormat("*/*");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.minimum(bigDecimal15);
        schema3.setNot(schema9);
        java.lang.Class<?> wildcardClass18 = schema9.getClass();
        java.util.Optional<java.lang.reflect.AnnotatedElement> annotatedElementOptional19 = java.util.Optional.of((java.lang.reflect.AnnotatedElement) wildcardClass18);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional.empty" + "'", str6, "Optional.empty");
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(annotatedElementOptional19);
    }

    @Test
    public void test08043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08043");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.description("hi!");
        java.lang.Boolean boolean17 = strComparableSchema0.getNullable();
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema0.setMaximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation22);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test08044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08044");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema11.minLength((java.lang.Integer) 10);
        schema11.setMaxProperties((java.lang.Integer) 0);
        java.lang.String str19 = schema11.get$ref();
        java.math.BigDecimal bigDecimal20 = schema11.getMinimum();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema11.getExtensions();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(strMap21);
    }

    @Test
    public void test08045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08045");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int23 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.multipleOf(bigDecimal26);
        io.swagger.oas.annotations.servers.Server[] serverArray28 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional29 = io.swagger.jaxrs2.OperationParser.getServers(serverArray28);
        java.lang.String str30 = serverListOptional29.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray31 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional32 = io.swagger.jaxrs2.OperationParser.getServers(serverArray31);
        boolean boolean33 = serverListOptional32.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList34 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList35 = serverListOptional32.orElse(serverList34);
        io.swagger.oas.models.servers.Server[] serverArray36 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList37 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList37, serverArray36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional32.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList37);
        java.util.List<io.swagger.oas.models.servers.Server> serverList40 = serverListOptional29.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList37);
        io.swagger.oas.annotations.servers.Server[] serverArray41 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional42 = io.swagger.jaxrs2.OperationParser.getServers(serverArray41);
        boolean boolean43 = serverListOptional42.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList44 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList45 = serverListOptional42.orElse(serverList44);
        io.swagger.oas.models.servers.Server[] serverArray46 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList47 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList47, serverArray46);
        java.util.List<io.swagger.oas.models.servers.Server> serverList49 = serverListOptional42.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList47);
        java.util.List<io.swagger.oas.models.servers.Server> serverList50 = serverListOptional29.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema51.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema51.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str74 = strComparableSchema73.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema75.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema73.not((io.swagger.oas.models.media.Schema) strComparableSchema75);
        strComparableSchema73.setDescription("hi!");
        strComparableSchema73.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema67.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema73);
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema85.multipleOf(bigDecimal86);
        io.swagger.oas.models.media.Schema schema88 = schema60.not(schema87);
        java.math.BigDecimal bigDecimal89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema88.minimum(bigDecimal89);
        boolean boolean91 = serverListOptional29.equals((java.lang.Object) bigDecimal89);
        java.lang.String str92 = serverListOptional29.toString();
        schema25.setExample((java.lang.Object) serverListOptional29);
        io.swagger.oas.models.media.Schema schema95 = schema25.deprecated((java.lang.Boolean) true);
        java.lang.Object obj96 = schema25.getExample();
        schema25.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertNotNull(serverListOptional29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Optional.empty" + "'", str30, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray31);
        org.junit.Assert.assertNotNull(serverListOptional32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(serverList35);
        org.junit.Assert.assertNotNull(serverArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(serverList39);
        org.junit.Assert.assertNotNull(serverList40);
        org.junit.Assert.assertNotNull(serverArray41);
        org.junit.Assert.assertNotNull(serverListOptional42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(serverList45);
        org.junit.Assert.assertNotNull(serverArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(serverList49);
        org.junit.Assert.assertNotNull(serverList50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Optional.empty" + "'", str92, "Optional.empty");
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "Optional.empty");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "Optional.empty");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "Optional.empty");
    }

    @Test
    public void test08046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08046");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        schema30.setExample((java.lang.Object) tagSetOptional37);
        java.lang.Object obj40 = null;
        schema30.addExtension("*/*", obj40);
        java.lang.String str42 = schema30.getDescription();
        java.lang.String str43 = schema30.getType();
        java.lang.String str44 = schema30.getName();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema2.addProperties("*/*", schema30);
        java.math.BigDecimal bigDecimal46 = schema45.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema schema49 = schema45.name(",");
        schema45.setDescription("");
        io.swagger.oas.models.media.Schema schema53 = schema45.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test08047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08047");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema38 = schema36.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.externalDocs(externalDocumentation39);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test08048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08048");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema5.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal33 = strComparableSchema22.getMultipleOf();
        java.lang.String str34 = strComparableSchema22.get$ref();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema22.maximum(bigDecimal35);
        io.swagger.oas.models.media.Discriminator discriminator37 = strComparableSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema22.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema39.minProperties((java.lang.Integer) 0);
        schema21.setNot(schema39);
        io.swagger.oas.models.media.Schema schema44 = schema21.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema44.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema46.nullable((java.lang.Boolean) true);
        java.lang.String str49 = schema46.getPattern();
        io.swagger.oas.models.media.Schema schema51 = schema46.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test08049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08049");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int23 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema27.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema31 = schema27.deprecated((java.lang.Boolean) false);
        schema27.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test08050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08050");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema25.setExtensions(strMap29);
        strComparableSchema25.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.minimum(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = strComparableSchema25.getMinimum();
        io.swagger.oas.models.media.Schema schema36 = schema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema0.setDefault((java.lang.Object) schema36);
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema36.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema39.maxProperties((java.lang.Integer) 1);
        schema39.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema45 = schema39.pattern("#/components/schemas/");
        schema45.setPattern("*/*");
        java.lang.Integer int48 = schema45.getMaxItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int48);
    }

    @Test
    public void test08051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08051");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.lang.Integer int8 = strComparableSchema0.getMinItems();
        strComparableSchema0.set$ref(",");
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.lang.String[] strArray34 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        strComparableSchema17.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = strComparableSchema17.getMaxLength();
        java.lang.Integer int39 = strComparableSchema17.getMaxProperties();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema17.minProperties((java.lang.Integer) 100);
        schema41.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = schema41.getNot();
        strComparableSchema0.setNot(schema44);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test08052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08052");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        schema2.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.maximum(bigDecimal11);
        java.util.List<java.lang.String> strList13 = schema12.getRequired();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.maximum(bigDecimal14);
        schema12.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test08053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08053");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.name("*/*");
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema18.description("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int21 = schema18.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test08054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08054");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        java.lang.Integer int39 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.lang.String str46 = strComparableSchema40.get$ref();
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional54 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema40.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = schema38.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema58 = schema56.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema58.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema58.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema58.minimum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema58.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test08055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08055");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        schema45.setExample((java.lang.Object) "Optional.empty");
        schema45.setNullable((java.lang.Boolean) true);
        schema45.setPattern("");
        java.math.BigDecimal bigDecimal52 = null;
        schema45.setMaximum(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = schema45.readOnly((java.lang.Boolean) true);
        schema45.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test08056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08056");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        schema46.setExtensions(strMap61);
        java.math.BigDecimal bigDecimal63 = null;
        schema46.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        strComparableSchema65.setDescription("hi!");
        strComparableSchema65.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema65.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        strComparableSchema65.setExternalDocs(externalDocumentation77);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema65.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema81 = schema46.example((java.lang.Object) schema80);
        io.swagger.oas.models.media.Schema schema82 = schema46.getNot();
        java.lang.Integer int83 = schema82.getMinLength();
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema82.multipleOf(bigDecimal84);
        java.math.BigDecimal bigDecimal86 = schema85.getMinimum();
        io.swagger.oas.models.media.Schema schema88 = schema85.maxProperties((java.lang.Integer) (-1));
        java.lang.Integer int89 = schema85.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(bigDecimal86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int89);
    }

    @Test
    public void test08057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08057");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema0.setMinimum(bigDecimal28);
        strComparableSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal32 = null;
        strComparableSchema0.setMinimum(bigDecimal32);
        strComparableSchema0.setMaxLength((java.lang.Integer) 100);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema0.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test08058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08058");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.additionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema37 = schema35.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = strComparableSchema39.getExternalDocs();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema39.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema44.setDescription("hi!");
        strComparableSchema44.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema44.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = strComparableSchema44.getProperties();
        io.swagger.oas.models.media.Schema schema58 = schema42.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        schema58.setProperties(strMap59);
        io.swagger.oas.models.media.Schema schema62 = schema58.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        schema58.setExternalDocs(externalDocumentation63);
        io.swagger.oas.models.media.Schema schema65 = schema35.addProperties("no description", schema58);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema58.multipleOf(bigDecimal66);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test08059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08059");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.deprecated((java.lang.Boolean) false);
        java.lang.Integer int13 = schema10.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test08060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08060");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema40.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = schema40.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML45 = schema44.getXml();
        java.lang.Boolean boolean46 = schema44.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(xML45);
        org.junit.Assert.assertNull(boolean46);
    }

    @Test
    public void test08061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08061");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.additionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema37 = schema35.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = strComparableSchema39.getExternalDocs();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema39.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema44.setDescription("hi!");
        strComparableSchema44.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema44.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = strComparableSchema44.getProperties();
        io.swagger.oas.models.media.Schema schema58 = schema42.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        schema58.setProperties(strMap59);
        io.swagger.oas.models.media.Schema schema62 = schema58.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        schema58.setExternalDocs(externalDocumentation63);
        io.swagger.oas.models.media.Schema schema65 = schema35.addProperties("no description", schema58);
        java.lang.Integer int66 = schema35.getMaxItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
    }

    @Test
    public void test08062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08062");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Integer int3 = schema2.getMaxLength();
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int6 = schema2.getMaxItems();
        io.swagger.oas.models.media.Schema schema8 = schema2.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean9 = schema2.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal10 = schema2.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(bigDecimal10);
    }

    @Test
    public void test08063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08063");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema17.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema24.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema24.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema30.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = strComparableSchema30.getProperties();
        java.lang.Boolean boolean44 = strComparableSchema30.getReadOnly();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema30.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean47 = schema46.getReadOnly();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema46.multipleOf(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema46.addRequiredItem("#/components/schemas/");
        boolean boolean52 = schema24.equals((java.lang.Object) schema46);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test08064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08064");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        strComparableSchema54.setExtensions(strMap58);
        strComparableSchema54.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int62 = strComparableSchema54.getMaxItems();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema54.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        strComparableSchema65.setDescription("hi!");
        java.math.BigDecimal bigDecimal73 = null;
        strComparableSchema65.setMaximum(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema65.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList77 = strComparableSchema65.getRequired();
        io.swagger.oas.models.media.Schema schema78 = schema64.required(strList77);
        schema78.setDeprecated((java.lang.Boolean) false);
        schema51.setNot(schema78);
        java.lang.Integer int82 = schema51.getMaxLength();
        io.swagger.oas.models.media.Schema schema83 = schema51.getNot();
        java.math.BigDecimal bigDecimal84 = schema51.getMinimum();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(bigDecimal84);
    }

    @Test
    public void test08065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08065");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.xml(xML6);
        java.lang.String str8 = strComparableSchema0.getFormat();
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.maximum(bigDecimal9);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        strComparableSchema0.setDiscriminator(discriminator11);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test08066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08066");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.pattern("#/components/schemas/");
        java.lang.Boolean boolean19 = strComparableSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.minimum(bigDecimal20);
        schema21.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema21.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test08067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08067");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        strComparableSchema0.setDescription("");
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMaximum(bigDecimal12);
        java.util.List<java.lang.String> strList14 = schema11.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test08068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08068");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema25 = schema24.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema27 = schema24.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema27.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema31 = schema27.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal32 = schema27.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema27.discriminator(discriminator33);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test08069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08069");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.maximum(bigDecimal39);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema25.xml(xML41);
        io.swagger.oas.models.media.Schema schema44 = schema42.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test08070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08070");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        java.lang.Boolean boolean7 = strComparableSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal8 = strComparableSchema0.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(bigDecimal8);
    }

    @Test
    public void test08071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08071");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema16.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema31.setDescription("hi!");
        strComparableSchema31.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema21.externalDocs(externalDocumentation44);
        java.lang.Object obj46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.example(obj46);
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.discriminator(discriminator48);
        schema18.setAdditionalProperties(schema49);
        io.swagger.oas.models.media.Schema schema52 = schema49.readOnly((java.lang.Boolean) true);
        schema49.setMaxLength((java.lang.Integer) 10);
        schema49.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test08072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08072");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema33.setDescription("hi!");
        strComparableSchema33.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal44 = strComparableSchema33.getMultipleOf();
        java.lang.String str45 = strComparableSchema33.get$ref();
        java.lang.String[] strArray50 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        strComparableSchema33.setRequired((java.util.List<java.lang.String>) strList51);
        java.lang.Integer int54 = strComparableSchema33.getMaxLength();
        java.lang.Integer int55 = strComparableSchema33.getMaxProperties();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema33.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str59 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema58.setDescription("hi!");
        strComparableSchema58.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal69 = strComparableSchema58.getMultipleOf();
        java.lang.String str70 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema schema71 = schema57.example((java.lang.Object) strComparableSchema58);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema58.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList81 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean82 = strComparableList81.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean83 = strComparableList81.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean84 = strComparableList81.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean85 = strComparableList81.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean86 = strComparableList81.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean87 = strComparableList81.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean88 = strComparableList81.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema73.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList81);
        java.lang.Boolean boolean90 = schema73.getNullable();
        io.swagger.oas.models.media.Schema schema92 = schema73.pattern("no description");
        java.lang.Integer int93 = schema73.getMaxProperties();
        io.swagger.oas.models.media.Schema schema95 = schema73.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema97 = schema95.maxItems((java.lang.Integer) 100);
        strComparableSchema10.setNot(schema97);
        java.lang.String str99 = strComparableSchema10.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(bigDecimal69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(boolean90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(int93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test08073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08073");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray23 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        schema17.setExample((java.lang.Object) tagSetOptional24);
        java.lang.Object obj27 = null;
        schema17.addExtension("*/*", obj27);
        java.lang.String str29 = schema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        java.lang.Boolean boolean38 = schema33.getUniqueItems();
        schema17.addExtension("Optional.empty", (java.lang.Object) boolean38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema17.getExtensions();
        schema10.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema schema43 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema43.exclusiveMinimum((java.lang.Boolean) true);
        schema45.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = schema45.addRequiredItem(",");
        schema45.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test08074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08074");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean3 = strComparableSchema0.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.discriminator(discriminator4);
        strComparableSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.properties(strMap9);
        java.lang.Boolean boolean11 = schema10.getUniqueItems();
        schema10.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        schema10.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema10.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = strComparableSchema18.getExternalDocs();
        java.lang.Integer int20 = strComparableSchema18.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema18.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema24 = schema22.description("");
        java.lang.Integer int25 = schema22.getMaxItems();
        io.swagger.oas.models.media.Schema schema27 = schema22.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal28 = schema27.getMultipleOf();
        schema10.setAdditionalProperties(schema27);
        schema27.setTitle("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema32.setNullable((java.lang.Boolean) false);
        java.lang.String str45 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema32.name("");
        io.swagger.oas.models.media.Schema schema49 = schema47.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = schema47.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.lang.String str58 = strComparableSchema52.get$ref();
        java.lang.String[] strArray63 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional66 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema52.required((java.util.List<java.lang.String>) strList64);
        strComparableSchema52.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.not((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema70.setDescription("hi!");
        java.math.BigDecimal bigDecimal78 = null;
        strComparableSchema70.setMaximum(bigDecimal78);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema70.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList82 = strComparableSchema70.getRequired();
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema52.required(strList82);
        io.swagger.oas.models.media.Schema schema84 = schema51.required(strList82);
        io.swagger.oas.models.media.Schema schema85 = schema27.required(strList82);
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema0.required(strList82);
        schema86.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test08075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08075");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getExclusiveMinimum();
        schema2.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test08076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08076");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean13 = strComparableSchema7.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strComparableSchema7.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema16 = schema6.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.uniqueItems((java.lang.Boolean) false);
        schema22.setDescription("");
        schema22.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        schema22.setExternalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema22.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = strComparableSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = schema22.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema7.additionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema36 = schema34.name("");
        io.swagger.oas.models.media.Schema schema38 = schema36.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.discriminator(discriminator39);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test08077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08077");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        schema33.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema33.$ref("no description");
        java.lang.Integer int38 = schema37.getMinLength();
        io.swagger.oas.models.media.Schema schema40 = schema37.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test08078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08078");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean9 = schema6.getNullable();
        schema6.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean12 = schema6.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + true + "'", boolean12, true);
    }

    @Test
    public void test08079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08079");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.type("#/components/schemas/");
        schema21.setMaxItems((java.lang.Integer) 1);
        schema21.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test08080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08080");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        strComparableSchema0.setProperties(strMap3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        schema10.set$ref(",");
        schema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema10.getTitle();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test08081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08081");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str5 = schema2.getTitle();
        io.swagger.oas.models.media.Schema schema7 = schema2.minProperties((java.lang.Integer) 0);
        schema7.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test08082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08082");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        java.lang.String str5 = serverListOptional4.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        boolean boolean8 = serverListOptional7.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList9 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList10 = serverListOptional7.orElse(serverList9);
        io.swagger.oas.models.servers.Server[] serverArray11 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList12 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList12, serverArray11);
        java.util.List<io.swagger.oas.models.servers.Server> serverList14 = serverListOptional7.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList12);
        java.util.List<io.swagger.oas.models.servers.Server> serverList15 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList12);
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = serverListOptional1.orElse(serverList15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        strComparableSchema19.setExtensions(strMap23);
        strComparableSchema19.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int27 = strComparableSchema19.getMaxItems();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema19.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        java.math.BigDecimal bigDecimal38 = null;
        strComparableSchema30.setMaximum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema30.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList42 = strComparableSchema30.getRequired();
        io.swagger.oas.models.media.Schema schema43 = schema29.required(strList42);
        boolean boolean44 = serverListOptional1.equals((java.lang.Object) strList42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = strComparableSchema45.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        strComparableSchema45.setProperties(strMap48);
        java.lang.Boolean boolean50 = strComparableSchema45.getExclusiveMaximum();
        boolean boolean51 = serverListOptional1.equals((java.lang.Object) strComparableSchema45);
        boolean boolean52 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        java.math.BigDecimal bigDecimal61 = null;
        strComparableSchema53.setMaximum(bigDecimal61);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema53.writeOnly((java.lang.Boolean) false);
        boolean boolean65 = serverListOptional1.equals((java.lang.Object) false);
        io.swagger.oas.annotations.servers.Server[] serverArray66 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional67 = io.swagger.jaxrs2.OperationParser.getServers(serverArray66);
        java.util.Optional<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalOptional68 = java.util.Optional.of(serverListOptional67);
        io.swagger.oas.annotations.servers.Server[] serverArray69 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional70 = io.swagger.jaxrs2.OperationParser.getServers(serverArray69);
        java.lang.String str71 = serverListOptional70.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray72 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional73 = io.swagger.jaxrs2.OperationParser.getServers(serverArray72);
        java.lang.String str74 = serverListOptional73.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray75 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional76 = io.swagger.jaxrs2.OperationParser.getServers(serverArray75);
        boolean boolean77 = serverListOptional76.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList78 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList79 = serverListOptional76.orElse(serverList78);
        io.swagger.oas.models.servers.Server[] serverArray80 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList81 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList81, serverArray80);
        java.util.List<io.swagger.oas.models.servers.Server> serverList83 = serverListOptional76.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList81);
        java.util.List<io.swagger.oas.models.servers.Server> serverList84 = serverListOptional73.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList81);
        java.util.List<io.swagger.oas.models.servers.Server> serverList85 = serverListOptional70.orElse(serverList84);
        java.util.List<io.swagger.oas.models.servers.Server> serverList86 = serverListOptional67.orElse(serverList84);
        java.util.List<io.swagger.oas.models.servers.Server> serverList87 = serverListOptional1.orElse(serverList84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList88 = serverListOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Optional.empty" + "'", str5, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(serverList10);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(serverList14);
        org.junit.Assert.assertNotNull(serverList15);
        org.junit.Assert.assertNotNull(serverList16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(serverArray66);
        org.junit.Assert.assertNotNull(serverListOptional67);
        org.junit.Assert.assertNotNull(serverListOptionalOptional68);
        org.junit.Assert.assertNotNull(serverArray69);
        org.junit.Assert.assertNotNull(serverListOptional70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Optional.empty" + "'", str71, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray72);
        org.junit.Assert.assertNotNull(serverListOptional73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Optional.empty" + "'", str74, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray75);
        org.junit.Assert.assertNotNull(serverListOptional76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(serverList79);
        org.junit.Assert.assertNotNull(serverArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(serverList83);
        org.junit.Assert.assertNotNull(serverList84);
        org.junit.Assert.assertNotNull(serverList85);
        org.junit.Assert.assertNotNull(serverList86);
        org.junit.Assert.assertNotNull(serverList87);
    }

    @Test
    public void test08083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08083");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.name("hi!");
        strComparableSchema6.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        schema33.setFormat("#/components/schemas/");
        java.util.List<java.lang.String> strList40 = schema33.getRequired();
        boolean boolean41 = strComparableSchema6.equals((java.lang.Object) schema33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema6.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        schema43.setDiscriminator(discriminator44);
        schema43.setMinLength((java.lang.Integer) 0);
        java.lang.Boolean boolean48 = schema43.getNullable();
        io.swagger.oas.annotations.servers.Server[] serverArray50 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional51 = io.swagger.jaxrs2.OperationParser.getServers(serverArray50);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional52 = java.util.Optional.ofNullable(serverArray50);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional53 = io.swagger.jaxrs2.OperationParser.getServers(serverArray50);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional54 = io.swagger.jaxrs2.OperationParser.getServers(serverArray50);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional55 = io.swagger.jaxrs2.OperationParser.getServers(serverArray50);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional56 = io.swagger.jaxrs2.OperationParser.getServers(serverArray50);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional57 = io.swagger.jaxrs2.OperationParser.getServers(serverArray50);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional58 = io.swagger.jaxrs2.OperationParser.getServers(serverArray50);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional59 = io.swagger.jaxrs2.OperationParser.getServers(serverArray50);
        schema43.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) serverListOptional59);
        boolean boolean61 = serverListOptional59.isPresent();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(serverArray50);
        org.junit.Assert.assertNotNull(serverListOptional51);
        org.junit.Assert.assertNotNull(serverArrayOptional52);
        org.junit.Assert.assertNotNull(serverListOptional53);
        org.junit.Assert.assertNotNull(serverListOptional54);
        org.junit.Assert.assertNotNull(serverListOptional55);
        org.junit.Assert.assertNotNull(serverListOptional56);
        org.junit.Assert.assertNotNull(serverListOptional57);
        org.junit.Assert.assertNotNull(serverListOptional58);
        org.junit.Assert.assertNotNull(serverListOptional59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test08084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08084");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML14 = null;
        strComparableSchema0.setXml(xML14);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test08085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08085");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.lang.String str12 = serverListOptional4.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        java.lang.String str15 = serverListOptional14.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray16 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray16);
        boolean boolean18 = serverListOptional17.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList19 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList20 = serverListOptional17.orElse(serverList19);
        io.swagger.oas.models.servers.Server[] serverArray21 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList22 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList22, serverArray21);
        java.util.List<io.swagger.oas.models.servers.Server> serverList24 = serverListOptional17.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        io.swagger.oas.annotations.servers.Server[] serverArray26 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional27 = io.swagger.jaxrs2.OperationParser.getServers(serverArray26);
        java.lang.String str28 = serverListOptional27.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray29 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional30 = io.swagger.jaxrs2.OperationParser.getServers(serverArray29);
        boolean boolean31 = serverListOptional30.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList32 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList33 = serverListOptional30.orElse(serverList32);
        io.swagger.oas.models.servers.Server[] serverArray34 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList35 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList35, serverArray34);
        java.util.List<io.swagger.oas.models.servers.Server> serverList37 = serverListOptional30.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList35);
        java.util.List<io.swagger.oas.models.servers.Server> serverList38 = serverListOptional27.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList35);
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList35);
        java.util.List<io.swagger.oas.models.servers.Server> serverList40 = serverListOptional4.orElse(serverList39);
        java.util.List<io.swagger.oas.models.servers.Server> serverList41 = serverListOptional2.orElse(serverList40);
        java.lang.Object obj42 = null;
        boolean boolean43 = serverListOptional2.equals(obj42);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Optional.empty" + "'", str12, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Optional.empty" + "'", str15, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray16);
        org.junit.Assert.assertNotNull(serverListOptional17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serverList20);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(serverList24);
        org.junit.Assert.assertNotNull(serverList25);
        org.junit.Assert.assertNotNull(serverArray26);
        org.junit.Assert.assertNotNull(serverListOptional27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Optional.empty" + "'", str28, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray29);
        org.junit.Assert.assertNotNull(serverListOptional30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(serverList33);
        org.junit.Assert.assertNotNull(serverArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(serverList37);
        org.junit.Assert.assertNotNull(serverList38);
        org.junit.Assert.assertNotNull(serverList39);
        org.junit.Assert.assertNotNull(serverList40);
        org.junit.Assert.assertNotNull(serverList41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test08086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08086");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        java.lang.Boolean boolean4 = schema2.getDeprecated();
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.minimum(bigDecimal5);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema6.setDiscriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema6.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean12 = schema11.getReadOnly();
        schema11.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test08087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08087");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema44.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setNullable((java.lang.Boolean) false);
        java.lang.String str60 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema47.name("");
        java.math.BigDecimal bigDecimal63 = null;
        strComparableSchema47.setMinimum(bigDecimal63);
        java.lang.Boolean boolean65 = strComparableSchema47.getReadOnly();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema47.description("*/*");
        boolean boolean68 = schema46.equals((java.lang.Object) strComparableSchema47);
        java.math.BigDecimal bigDecimal69 = null;
        schema46.setMultipleOf(bigDecimal69);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test08088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08088");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal27 = strComparableSchema2.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
    }

    @Test
    public void test08089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08089");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        strComparableSchema7.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema7.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.multipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema16.not(schema43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.minimum(bigDecimal45);
        schema46.setTitle("");
        io.swagger.oas.models.media.Schema schema49 = schema6.example((java.lang.Object) schema46);
        java.math.BigDecimal bigDecimal50 = null;
        schema46.setMaximum(bigDecimal50);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test08090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08090");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.getAdditionalProperties();
        java.math.BigDecimal bigDecimal10 = null;
        strComparableSchema0.setMultipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test08091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08091");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.title("");
        java.lang.Integer int12 = schema11.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = strComparableSchema13.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema13.getDefault();
        java.lang.Integer int16 = strComparableSchema13.getMinProperties();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.minItems((java.lang.Integer) 0);
        boolean boolean19 = schema11.equals((java.lang.Object) 0);
        io.swagger.oas.annotations.servers.Server server20 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray21 = new io.swagger.oas.annotations.servers.Server[] { server20 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        boolean boolean23 = serverListOptional22.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema24.getNot();
        boolean boolean32 = serverListOptional22.equals((java.lang.Object) schema31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema31.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema31.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal37 = schema31.getMaximum();
        schema11.setNot(schema31);
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema31.xml(xML39);
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertNotNull(serverListOptional22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test08092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08092");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        java.lang.Integer int39 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.lang.String str46 = strComparableSchema40.get$ref();
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional54 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema40.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = schema38.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema58 = schema56.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema58.set$ref("hi!");
        io.swagger.oas.models.media.Schema schema62 = schema58.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema64 = schema58.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test08093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08093");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal12 = strComparableSchema0.getMultipleOf();
        java.lang.Boolean boolean13 = strComparableSchema0.getNullable();
        java.lang.Comparable<java.lang.String> strComparable14 = strComparableSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema18.setMaximum(bigDecimal26);
        strComparableSchema18.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema18.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal32 = schema31.getMaximum();
        java.math.BigDecimal bigDecimal33 = schema31.getMinimum();
        io.swagger.oas.models.media.Schema schema35 = schema31.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema35.title("hi!");
        io.swagger.oas.models.media.Discriminator discriminator38 = schema35.getDiscriminator();
        java.math.BigDecimal bigDecimal39 = null;
        schema35.setMinimum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema41 = schema17.not(schema35);
        io.swagger.oas.models.media.Schema schema43 = schema35.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(strComparable14);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test08094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08094");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.List<java.lang.String> strList20 = strComparableSchema5.getRequired();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema5.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator23 = strComparableSchema5.getDiscriminator();
        java.math.BigDecimal bigDecimal24 = strComparableSchema5.getMultipleOf();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNull(bigDecimal24);
    }

    @Test
    public void test08095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08095");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema25 = schema24.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema27 = schema24.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema27.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean30 = schema29.getDeprecated();
        schema29.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema29.multipleOf(bigDecimal33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        schema34.setExternalDocs(externalDocumentation35);
        schema34.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test08096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08096");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML27 = strComparableSchema0.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        java.math.BigDecimal bigDecimal36 = null;
        strComparableSchema28.setMaximum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        java.lang.String[] strArray55 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        strComparableSchema38.setRequired((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema28.required((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema28.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema28.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.discriminator(discriminator64);
        io.swagger.oas.models.media.Schema schema67 = schema63.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema63.discriminator(discriminator68);
        io.swagger.oas.models.media.Schema schema71 = schema63.$ref("no description");
        schema71.setFormat("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setNot(schema71);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = schema71.getExtensions();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation76 = null;
        schema71.setExternalDocs(externalDocumentation76);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(strMap75);
    }

    @Test
    public void test08097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08097");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema26.maximum(bigDecimal39);
        strComparableSchema26.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema26.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setExample((java.lang.Object) strComparableSchema26);
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema23.discriminator(discriminator46);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test08098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08098");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        strComparableSchema14.setDefault((java.lang.Object) strComparableSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal33 = strComparableSchema22.getMultipleOf();
        java.lang.String str34 = strComparableSchema22.get$ref();
        java.lang.String[] strArray39 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        strComparableSchema22.setRequired((java.util.List<java.lang.String>) strList40);
        java.lang.Integer int43 = strComparableSchema22.getMaxLength();
        strComparableSchema22.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema22.getNot();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema22.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean49 = strComparableSchema22.getDeprecated();
        strComparableSchema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema22.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertEquals("'" + boolean49 + "' != '" + false + "'", boolean49, false);
    }

    @Test
    public void test08099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08099");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        java.lang.Boolean boolean35 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = strComparableSchema0.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + true + "'", boolean35, true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation40);
    }

    @Test
    public void test08100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08100");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        java.lang.Boolean boolean23 = strComparableSchema0.getNullable();
        java.lang.Integer int24 = strComparableSchema0.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test08101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08101");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        strComparableSchema0.setName("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation20);
        java.lang.Boolean boolean22 = strComparableSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.minimum(bigDecimal23);
        java.lang.Integer int25 = schema24.getMinProperties();
        schema24.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test08102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08102");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        java.lang.Boolean boolean46 = schema45.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = schema45.getExtensions();
        io.swagger.oas.models.media.XML xML48 = null;
        schema45.setXml(xML48);
        io.swagger.oas.models.media.Schema schema50 = schema45.getNot();
        io.swagger.oas.models.media.Schema schema52 = schema50.maxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test08103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08103");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema24.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.minProperties((java.lang.Integer) 100);
        schema30.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        io.swagger.oas.models.media.Schema schema34 = schema30.nullable((java.lang.Boolean) false);
        schema34.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test08104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08104");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = strComparableSchema25.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableSchema25.getDefault();
        java.lang.Integer int28 = strComparableSchema25.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema25.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema2.not(schema36);
        java.lang.Comparable<java.lang.String> strComparable38 = strComparableSchema2.getDefault();
        strComparableSchema2.setFormat("");
        java.math.BigDecimal bigDecimal41 = null;
        strComparableSchema2.setMaximum(bigDecimal41);
        strComparableSchema2.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNull(strComparable27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strComparable38);
    }

    @Test
    public void test08105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08105");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        schema24.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = schema24.minProperties((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal32 = null;
        schema31.setMinimum(bigDecimal32);
        java.lang.Boolean boolean34 = schema31.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test08106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08106");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean28 = strComparableSchema0.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.discriminator(discriminator29);
        schema30.setPattern("no description");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test08107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08107");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema17.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        schema24.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema24.readOnly((java.lang.Boolean) false);
        schema24.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test08108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08108");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.lang.String str16 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.pattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema24.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = strComparableSchema24.getProperties();
        java.lang.Boolean boolean38 = strComparableSchema24.getReadOnly();
        java.math.BigDecimal bigDecimal39 = strComparableSchema24.getMinimum();
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema24.xml(xML40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        schema41.setProperties(strMap42);
        java.lang.Boolean boolean44 = schema41.getReadOnly();
        java.lang.Boolean boolean45 = schema41.getReadOnly();
        schema41.setMaxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema41.maximum(bigDecimal48);
        java.lang.String str50 = schema49.get$ref();
        schema22.addExtension("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) str50);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test08109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08109");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.String str17 = schema16.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator18 = schema16.getDiscriminator();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.multipleOf(bigDecimal19);
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema24.maxLength((java.lang.Integer) (-1));
        strComparableSchema24.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema46.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema46.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str57 = strComparableSchema56.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.not((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema56.setDescription("hi!");
        strComparableSchema56.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal67 = strComparableSchema56.getMultipleOf();
        java.lang.String str68 = strComparableSchema56.get$ref();
        java.lang.String[] strArray73 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        strComparableSchema56.setRequired((java.util.List<java.lang.String>) strList74);
        schema55.setNot((io.swagger.oas.models.media.Schema) strComparableSchema56);
        java.lang.Integer int78 = strComparableSchema56.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = null;
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema56.properties(strMap79);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        strComparableSchema56.setExternalDocs(externalDocumentation81);
        java.lang.Object obj83 = strComparableSchema56.getExample();
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema56.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema87 = schema85.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema89 = schema87.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema90 = strComparableSchema24.not(schema87);
        io.swagger.oas.models.media.Schema schema92 = schema90.deprecated((java.lang.Boolean) false);
        schema20.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema95 = schema20.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test08110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08110");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        schema24.setName("no description");
        java.math.BigDecimal bigDecimal27 = null;
        schema24.setMaximum(bigDecimal27);
        io.swagger.oas.annotations.servers.Server server29 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] { server29 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        boolean boolean32 = serverListOptional31.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.lang.String str39 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema33.getNot();
        boolean boolean41 = serverListOptional31.equals((java.lang.Object) schema40);
        java.lang.Boolean boolean42 = schema40.getExclusiveMaximum();
        schema40.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        schema40.setExternalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema schema47 = schema24.additionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema49 = schema24.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test08111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08111");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.XML xML7 = schema2.getXml();
        io.swagger.oas.models.media.Schema schema9 = schema2.$ref("*/*");
        io.swagger.oas.models.media.Schema schema11 = schema2.format("");
        java.lang.Object obj12 = schema2.getExample();
        io.swagger.oas.models.media.Schema schema14 = schema2.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test08112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08112");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        schema9.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema9.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setMaxLength((java.lang.Integer) 1);
        java.lang.Integer int20 = schema17.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test08113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08113");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.lang.String str16 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema22.setExtensions(strMap26);
        strComparableSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = strComparableSchema30.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.uniqueItems((java.lang.Boolean) false);
        strComparableSchema22.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        schema18.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strComparableSchema22);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema18.multipleOf(bigDecimal38);
        schema39.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test08114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08114");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        schema26.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean29 = schema26.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test08115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08115");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = schema19.minLength((java.lang.Integer) 1);
        schema21.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML24 = null;
        schema21.setXml(xML24);
        schema21.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test08116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08116");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = strComparableSchema8.getExternalDocs();
        io.swagger.oas.models.media.XML xML24 = strComparableSchema8.getXml();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema8.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML27 = null;
        schema26.setXml(xML27);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNull(xML24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test08117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08117");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) false);
        schema25.setExample((java.lang.Object) strComparableSchema28);
        schema25.set$ref("Optional.empty");
        java.lang.Integer int41 = schema25.getMinItems();
        java.lang.String str42 = schema25.getName();
        java.math.BigDecimal bigDecimal43 = schema25.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "#/components/schemas/" + "'", str42, "#/components/schemas/");
        org.junit.Assert.assertNull(bigDecimal43);
    }

    @Test
    public void test08118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08118");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String str2 = strComparableSchema0.getFormat();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.properties(strMap8);
        java.lang.Boolean boolean10 = schema9.getNullable();
        java.lang.Boolean boolean11 = schema9.getReadOnly();
        io.swagger.oas.models.media.Schema schema13 = schema9.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.maxProperties((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList16 = schema13.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) false);
        schema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test08119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08119");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML20 = schema19.getXml();
        io.swagger.oas.models.media.Schema schema22 = schema19.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean23 = schema19.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(xML20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test08120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08120");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMaxProperties();
        schema9.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema schema15 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = schema15.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test08121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08121");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        java.lang.Integer int28 = strComparableSchema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema6.maxLength((java.lang.Integer) 10);
        strComparableSchema2.setExample((java.lang.Object) strComparableSchema6);
        java.lang.Boolean boolean34 = strComparableSchema6.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema38 = schema36.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test08122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08122");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator17 = strComparableSchema0.getDiscriminator();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML20 = strComparableSchema0.getXml();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNull(xML20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test08123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08123");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.name("hi!");
        strComparableSchema6.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        schema33.setFormat("#/components/schemas/");
        java.util.List<java.lang.String> strList40 = schema33.getRequired();
        boolean boolean41 = strComparableSchema6.equals((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = strComparableSchema42.getExternalDocs();
        java.lang.Integer int44 = strComparableSchema42.getMinProperties();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema46.format("");
        java.lang.String str49 = schema46.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.properties(strMap51);
        java.lang.Boolean boolean53 = schema52.getUniqueItems();
        schema52.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal56 = null;
        schema52.setMultipleOf(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = schema52.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema59.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema59.title("hi!");
        java.lang.String str64 = schema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = strComparableSchema65.getExternalDocs();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema65.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.not((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema70.setDescription("hi!");
        strComparableSchema70.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema70.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = strComparableSchema70.getProperties();
        io.swagger.oas.models.media.Schema schema84 = schema68.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean85 = schema84.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator86 = null;
        schema84.setDiscriminator(discriminator86);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema84.getProperties();
        io.swagger.oas.models.media.Schema schema89 = schema63.properties(strMap88);
        schema46.setProperties(strMap88);
        schema46.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema93 = strComparableSchema6.example((java.lang.Object) schema46);
        io.swagger.oas.models.media.Schema schema95 = schema93.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema97 = schema95.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test08124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08124");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema16.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.externalDocs(externalDocumentation23);
        schema24.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test08125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08125");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        java.math.BigDecimal bigDecimal3 = null;
        strComparableSchema0.setMaximum(bigDecimal3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        strComparableSchema7.setDescription("hi!");
        strComparableSchema7.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal18 = strComparableSchema7.getMultipleOf();
        strComparableSchema7.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str21 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema7.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema7.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema25.multipleOf(bigDecimal36);
        schema37.setExample((java.lang.Object) "hi!");
        schema37.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean42 = schema37.getReadOnly();
        java.lang.Boolean boolean43 = schema37.getNullable();
        schema37.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema7.not(schema37);
        io.swagger.oas.models.media.Schema schema48 = schema37.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator49 = null;
        schema48.setDiscriminator(discriminator49);
        schema6.setDefault((java.lang.Object) discriminator49);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test08126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08126");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setMinItems((java.lang.Integer) 1);
        java.lang.String str3 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema4.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strComparableSchema4.getProperties();
        java.lang.Boolean boolean18 = strComparableSchema4.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = strComparableSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.minProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        schema26.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str3, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
    }

    @Test
    public void test08127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08127");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema24.pattern(",");
        schema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setMinItems((java.lang.Integer) 1);
        java.lang.String str49 = strComparableSchema46.toString();
        io.swagger.oas.models.media.Schema schema50 = schema42.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema46.discriminator(discriminator51);
        java.lang.Boolean boolean53 = strComparableSchema46.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str49, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
    }

    @Test
    public void test08128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08128");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        java.lang.Integer int28 = strComparableSchema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema6.maxLength((java.lang.Integer) 10);
        strComparableSchema2.setExample((java.lang.Object) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema6.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal47 = strComparableSchema36.getMultipleOf();
        java.lang.String str48 = strComparableSchema36.get$ref();
        java.lang.String[] strArray53 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        strComparableSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema36.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.not((io.swagger.oas.models.media.Schema) strComparableSchema62);
        java.lang.String str66 = strComparableSchema60.get$ref();
        strComparableSchema36.addExtension("#/components/schemas/", (java.lang.Object) str66);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema36.externalDocs(externalDocumentation68);
        io.swagger.oas.models.media.XML xML70 = null;
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema36.xml(xML70);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        schema71.setExternalDocs(externalDocumentation72);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema6.example((java.lang.Object) schema71);
        java.lang.String str75 = strComparableSchema6.getTitle();
        java.lang.Integer int76 = strComparableSchema6.getMinProperties();
        io.swagger.oas.models.media.Discriminator discriminator77 = null;
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema6.discriminator(discriminator77);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test08129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08129");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        strComparableSchema0.setDescription("");
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema18.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema14.externalDocs(externalDocumentation37);
        java.lang.Object obj39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.example(obj39);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList41 = schema38.getEnum();
        strComparableSchema0.setNot(schema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema43.setDescription("hi!");
        strComparableSchema43.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema43.setNullable((java.lang.Boolean) false);
        java.lang.String str56 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema43.name("");
        java.math.BigDecimal bigDecimal59 = null;
        strComparableSchema43.setMinimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema43.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema43);
        java.math.BigDecimal bigDecimal64 = strComparableSchema43.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strComparableList41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(bigDecimal64);
    }

    @Test
    public void test08130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08130");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.xml(xML6);
        java.lang.String str8 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.lang.Boolean boolean15 = strComparableSchema9.getReadOnly();
        java.util.List<java.lang.String> strList16 = strComparableSchema9.getRequired();
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema9.setMaximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema9.format(",");
        strComparableSchema0.setDefault((java.lang.Object) schema20);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test08131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08131");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.Boolean boolean4 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema6 = schema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema2.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.annotations.servers.Server server9 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray10 = new io.swagger.oas.annotations.servers.Server[] { server9 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray10);
        boolean boolean12 = serverListOptional11.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        java.lang.String str19 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema13.getNot();
        boolean boolean21 = serverListOptional11.equals((java.lang.Object) schema20);
        java.lang.String str22 = serverListOptional11.toString();
        boolean boolean23 = serverListOptional11.isPresent();
        java.lang.String str24 = serverListOptional11.toString();
        io.swagger.oas.models.media.Schema schema25 = schema8.example((java.lang.Object) serverListOptional11);
        schema8.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema30.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema30.maximum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema34.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema39.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = strComparableSchema39.getProperties();
        java.lang.Boolean boolean53 = strComparableSchema39.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = strComparableSchema39.getProperties();
        strComparableSchema39.setMinItems((java.lang.Integer) 0);
        strComparableSchema39.setExclusiveMinimum((java.lang.Boolean) true);
        boolean boolean59 = schema36.equals((java.lang.Object) strComparableSchema39);
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema36.minimum(bigDecimal60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = strComparableSchema62.getExternalDocs();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema62.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema67.setDescription("hi!");
        strComparableSchema67.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema67.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = strComparableSchema67.getProperties();
        io.swagger.oas.models.media.Schema schema81 = schema65.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema67);
        java.lang.Boolean boolean82 = schema81.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator83 = null;
        schema81.setDiscriminator(discriminator83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = schema81.getProperties();
        schema61.setProperties(strMap85);
        io.swagger.oas.models.media.Schema schema87 = schema61.getNot();
        io.swagger.oas.models.media.Schema schema88 = schema8.example((java.lang.Object) schema61);
        io.swagger.oas.models.media.Schema schema90 = schema61.type("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(serverArray10);
        org.junit.Assert.assertNotNull(serverListOptional11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Optional.empty" + "'", str22, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Optional.empty" + "'", str24, "Optional.empty");
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(externalDocumentation63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test08132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08132");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        java.lang.Integer int12 = strComparableSchema10.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema14.description("");
        java.lang.Integer int17 = schema14.getMaxItems();
        io.swagger.oas.models.media.Schema schema19 = schema14.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = schema19.getMultipleOf();
        schema2.setAdditionalProperties(schema19);
        java.lang.String str22 = schema19.getDescription();
        java.lang.Boolean boolean23 = schema19.getReadOnly();
        java.math.BigDecimal bigDecimal24 = schema19.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(bigDecimal24);
    }

    @Test
    public void test08133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08133");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.XML xML6 = null;
        strComparableSchema0.setXml(xML6);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.uniqueItems((java.lang.Boolean) false);
        schema9.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test08134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08134");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        strComparableSchema0.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.nullable((java.lang.Boolean) false);
        schema32.setTitle("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: Optional.empty\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema32.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test08135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08135");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.multipleOf(bigDecimal66);
        java.lang.Integer int68 = schema67.getMaxItems();
        strComparableSchema0.setAdditionalProperties(schema67);
        io.swagger.oas.models.media.Discriminator discriminator70 = strComparableSchema0.getDiscriminator();
        java.lang.Object obj71 = null;
        strComparableSchema0.setDefault(obj71);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema0.maxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal75 = null;
        strComparableSchema0.setMultipleOf(bigDecimal75);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema0.readOnly((java.lang.Boolean) false);
        schema78.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator81 = null;
        schema78.setDiscriminator(discriminator81);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test08136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08136");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema8.discriminator(discriminator23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema8.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test08137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08137");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema16.deprecated((java.lang.Boolean) true);
        schema16.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test08138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08138");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        strComparableSchema0.addExtension("#/components/schemas/", (java.lang.Object) str30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maximum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        strComparableSchema34.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema34.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = strComparableSchema34.getProperties();
        java.lang.Integer int48 = strComparableSchema34.getMinItems();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = strComparableSchema34.getExtensions();
        strComparableSchema0.setExtensions(strMap49);
        java.lang.Integer int51 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema0.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(schema52);
    }

    @Test
    public void test08139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08139");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList24 = schema23.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList24);
    }

    @Test
    public void test08140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08140");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.uniqueItems((java.lang.Boolean) false);
        strComparableSchema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.String str17 = strComparableSchema2.getName();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema2.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal31 = strComparableSchema20.getMultipleOf();
        java.lang.String str32 = strComparableSchema20.get$ref();
        java.lang.String[] strArray37 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        strComparableSchema20.setRequired((java.util.List<java.lang.String>) strList38);
        java.lang.Integer int41 = strComparableSchema20.getMaxLength();
        strComparableSchema20.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema44.setDescription("hi!");
        strComparableSchema44.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal55 = strComparableSchema44.getMultipleOf();
        java.lang.String str56 = strComparableSchema44.get$ref();
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema44.maximum(bigDecimal57);
        io.swagger.oas.models.media.Discriminator discriminator59 = strComparableSchema44.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema44.pattern(",");
        schema62.setWriteOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean65 = schema62.getWriteOnly();
        io.swagger.oas.models.media.Schema schema66 = schema19.additionalProperties(schema62);
        java.math.BigDecimal bigDecimal67 = null;
        schema62.setMinimum(bigDecimal67);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertEquals("'" + boolean65 + "' != '" + true + "'", boolean65, true);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test08141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08141");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.format("");
        java.lang.String str7 = schema4.getType();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList8 = schema4.getEnum();
        java.lang.Integer int9 = schema4.getMaxLength();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strComparableList8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test08142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08142");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.addRequiredItem("");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema19.readOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = schema19.getProperties();
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        schema19.setDiscriminator(discriminator23);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
    }

    @Test
    public void test08143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08143");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.lang.String str16 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.type("#/components/schemas/no description");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test08144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08144");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int29 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation30);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test08145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08145");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema0.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation14);
        io.swagger.oas.models.media.XML xML16 = strComparableSchema0.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(xML16);
    }

    @Test
    public void test08146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08146");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal32 = null;
        schema31.setMultipleOf(bigDecimal32);
        io.swagger.oas.models.media.XML xML34 = schema31.getXml();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(xML34);
    }

    @Test
    public void test08147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08147");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        strComparableSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean22 = schema21.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
    }

    @Test
    public void test08148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08148");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.name("hi!");
        strComparableSchema6.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        schema33.setFormat("#/components/schemas/");
        java.util.List<java.lang.String> strList40 = schema33.getRequired();
        boolean boolean41 = strComparableSchema6.equals((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = strComparableSchema42.getExternalDocs();
        java.lang.Integer int44 = strComparableSchema42.getMinProperties();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema46.format("");
        java.lang.String str49 = schema46.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.properties(strMap51);
        java.lang.Boolean boolean53 = schema52.getUniqueItems();
        schema52.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal56 = null;
        schema52.setMultipleOf(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = schema52.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema59.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema59.title("hi!");
        java.lang.String str64 = schema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = strComparableSchema65.getExternalDocs();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema65.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.not((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema70.setDescription("hi!");
        strComparableSchema70.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema70.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = strComparableSchema70.getProperties();
        io.swagger.oas.models.media.Schema schema84 = schema68.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean85 = schema84.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator86 = null;
        schema84.setDiscriminator(discriminator86);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema84.getProperties();
        io.swagger.oas.models.media.Schema schema89 = schema63.properties(strMap88);
        schema46.setProperties(strMap88);
        schema46.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema93 = strComparableSchema6.example((java.lang.Object) schema46);
        io.swagger.oas.models.media.XML xML94 = null;
        strComparableSchema6.setXml(xML94);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test08149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08149");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.lang.String str26 = strComparableSchema14.get$ref();
        java.lang.String[] strArray31 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        strComparableSchema14.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = strComparableSchema14.getMaxLength();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema14.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema38 = schema2.addProperties("#/components/schemas/", schema37);
        schema37.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema37.$ref("*/*");
        io.swagger.oas.models.media.Schema schema44 = schema42.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.externalDocs(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test08150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08150");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        strComparableSchema0.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
    }

    @Test
    public void test08151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08151");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.description("Optional.empty");
        schema7.setDefault((java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema8.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str15 = strComparableSchema8.getPattern();
        java.lang.Boolean boolean16 = strComparableSchema8.getWriteOnly();
        io.swagger.oas.annotations.servers.Server server17 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray18 = new io.swagger.oas.annotations.servers.Server[] { server17 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray18);
        boolean boolean20 = serverListOptional19.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.lang.String str27 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema21.getNot();
        boolean boolean29 = serverListOptional19.equals((java.lang.Object) schema28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema28.properties(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema32.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        strComparableSchema32.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema32.format("");
        strComparableSchema32.setReadOnly((java.lang.Boolean) true);
        strComparableSchema32.setDefault((java.lang.Object) 0.0d);
        io.swagger.oas.models.media.Schema schema52 = schema28.example((java.lang.Object) strComparableSchema32);
        java.math.BigDecimal bigDecimal53 = schema28.getMaximum();
        strComparableSchema8.setExample((java.lang.Object) bigDecimal53);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean57 = strComparableSchema8.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertNotNull(serverListOptional19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean57);
    }

    @Test
    public void test08152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08152");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema11.getNullable();
        java.math.BigDecimal bigDecimal13 = null;
        schema11.setMaximum(bigDecimal13);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema11.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema11.title("hi!");
        io.swagger.oas.models.media.Schema schema19 = schema17.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test08153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08153");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.multipleOf(bigDecimal12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strComparableSchema0.setProperties(strMap14);
        java.lang.Boolean boolean16 = strComparableSchema0.getDeprecated();
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.type("");
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.multipleOf(bigDecimal21);
        schema22.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test08154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08154");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.Schema schema12 = schema2.minItems((java.lang.Integer) 0);
        java.lang.String str13 = schema2.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        java.lang.Integer int16 = strComparableSchema14.getMaxLength();
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema14.setMaximum(bigDecimal17);
        strComparableSchema14.setMinItems((java.lang.Integer) 100);
        strComparableSchema14.setType("hi!");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.$ref("hi!");
        boolean boolean25 = schema2.equals((java.lang.Object) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema14.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema14.setMinimum(bigDecimal28);
        strComparableSchema14.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal32 = null;
        strComparableSchema14.setMaximum(bigDecimal32);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test08155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08155");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str7 = serverListOptional6.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray16 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray16);
        schema10.setExample((java.lang.Object) tagSetOptional17);
        java.lang.Object obj20 = null;
        schema10.addExtension("*/*", obj20);
        java.lang.String str22 = schema10.getDescription();
        java.lang.String str23 = schema10.getType();
        io.swagger.oas.models.media.Schema schema25 = schema10.minProperties((java.lang.Integer) 0);
        java.lang.Integer int26 = schema10.getMinItems();
        boolean boolean27 = serverListOptional6.equals((java.lang.Object) int26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal39 = strComparableSchema28.getMultipleOf();
        java.lang.String str40 = strComparableSchema28.get$ref();
        strComparableSchema28.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema28.description("hi!");
        java.lang.String str45 = schema44.getPattern();
        boolean boolean46 = serverListOptional6.equals((java.lang.Object) str45);
        java.util.Optional<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalOptional47 = java.util.Optional.ofNullable(serverListOptional6);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(tagSetOptional17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(serverListOptionalOptional47);
    }

    @Test
    public void test08156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08156");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.properties(strMap33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        strComparableSchema10.setExternalDocs(externalDocumentation35);
        java.lang.Object obj37 = strComparableSchema10.getExample();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema10.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema39.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal44 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema schema46 = schema41.maxLength((java.lang.Integer) 100);
        schema41.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test08157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08157");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Integer int15 = strComparableSchema0.getMinLength();
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        strComparableSchema0.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test08158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08158");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        java.lang.Integer int15 = schema14.getMaxLength();
        schema14.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test08159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08159");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.lang.String str16 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema21.setExtensions(strMap25);
        strComparableSchema21.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema21.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema21.pattern("");
        java.lang.String str33 = strComparableSchema21.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        strComparableSchema34.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal45 = strComparableSchema34.getMultipleOf();
        java.lang.String str46 = strComparableSchema34.get$ref();
        java.lang.String[] strArray51 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        strComparableSchema34.setRequired((java.util.List<java.lang.String>) strList52);
        java.lang.Integer int55 = strComparableSchema34.getMaxLength();
        java.lang.Integer int56 = strComparableSchema34.getMaxProperties();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema34.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        strComparableSchema59.setDescription("hi!");
        strComparableSchema59.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal70 = strComparableSchema59.getMultipleOf();
        java.lang.String str71 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema schema72 = schema58.example((java.lang.Object) strComparableSchema59);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema59.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList82 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean84 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean85 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean86 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean87 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean88 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean89 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema74.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList82);
        strComparableSchema21.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList82);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList82);
        java.lang.Boolean boolean93 = strComparableSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.XML xML94 = null;
        io.swagger.oas.models.media.Schema schema95 = strComparableSchema0.xml(xML94);
        java.lang.Boolean boolean96 = schema95.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(boolean93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertEquals("'" + boolean96 + "' != '" + false + "'", boolean96, false);
    }

    @Test
    public void test08160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08160");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema3.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = schema3.getProperties();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test08161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08161");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        schema2.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = schema17.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        strComparableSchema19.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String str32 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema19.name("");
        io.swagger.oas.models.media.Schema schema35 = null;
        schema34.setNot(schema35);
        io.swagger.oas.models.media.Schema schema38 = schema34.name(",");
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = schema38.getExtensions();
        schema17.setExtensions(strMap39);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test08162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08162");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        strComparableSchema0.setProperties(strMap5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.format(",");
        java.lang.Boolean boolean9 = schema8.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema8.discriminator(discriminator10);
        java.lang.Class<?> wildcardClass12 = schema8.getClass();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test08163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08163");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional3 = java.util.Optional.of(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional5 = java.util.Optional.of(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        org.junit.Assert.assertNotNull(linkArray0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(linkArrayOptional3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(linkArrayOptional5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test08164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08164");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        java.lang.String str11 = schema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = schema10.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean14 = schema10.getUniqueItems();
        java.util.List<java.lang.String> strList15 = schema10.getRequired();
        io.swagger.oas.models.media.Schema schema17 = schema10.maxItems((java.lang.Integer) (-1));
        schema17.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.writeOnly((java.lang.Boolean) false);
        schema26.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = schema26.getMaximum();
        io.swagger.oas.models.media.Schema schema30 = schema23.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema32 = schema30.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean33 = schema32.getNullable();
        io.swagger.oas.models.media.Schema schema35 = schema32.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema37 = schema32.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema39 = schema32.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema39.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = schema17.not(schema39);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test08165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08165");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        io.swagger.oas.models.media.Schema schema15 = schema11.deprecated((java.lang.Boolean) false);
        java.lang.String str16 = schema15.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test08166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08166");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj56 = strComparableSchema31.getExample();
        io.swagger.oas.models.media.Schema schema57 = schema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema31.title("no description");
        io.swagger.oas.models.media.Discriminator discriminator60 = null;
        schema59.setDiscriminator(discriminator60);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test08167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08167");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.description("Optional.empty");
        schema7.setDefault((java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema8.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str15 = strComparableSchema8.getPattern();
        java.lang.Boolean boolean16 = strComparableSchema8.getWriteOnly();
        io.swagger.oas.annotations.servers.Server server17 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray18 = new io.swagger.oas.annotations.servers.Server[] { server17 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray18);
        boolean boolean20 = serverListOptional19.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.lang.String str27 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema21.getNot();
        boolean boolean29 = serverListOptional19.equals((java.lang.Object) schema28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema28.properties(strMap30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema32.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        strComparableSchema32.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema32.format("");
        strComparableSchema32.setReadOnly((java.lang.Boolean) true);
        strComparableSchema32.setDefault((java.lang.Object) 0.0d);
        io.swagger.oas.models.media.Schema schema52 = schema28.example((java.lang.Object) strComparableSchema32);
        java.math.BigDecimal bigDecimal53 = schema28.getMaximum();
        strComparableSchema8.setExample((java.lang.Object) bigDecimal53);
        java.lang.String[] strArray58 = new java.lang.String[] { "*/*", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional59 = io.swagger.jaxrs2.OperationParser.getTags(strArray58);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional60 = io.swagger.jaxrs2.OperationParser.getTags(strArray58);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema8.example((java.lang.Object) strArray58);
        java.lang.Integer int62 = schema61.getMaxProperties();
        java.lang.Boolean boolean63 = schema61.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertNotNull(serverListOptional19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(tagSetOptional59);
        org.junit.Assert.assertNotNull(tagSetOptional60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(boolean63);
    }

    @Test
    public void test08168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08168");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema16.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema16.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.String str56 = strComparableSchema50.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema50.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema49.required((java.util.List<java.lang.String>) strList62);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional67 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema0.required((java.util.List<java.lang.String>) strList62);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema0.multipleOf(bigDecimal69);
        java.lang.Integer int71 = strComparableSchema0.getMinItems();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional72 = java.util.Optional.of(strComparableSchema0);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList73 = strComparableSchema0.getEnum();
        java.lang.Integer int74 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strCollectionOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional72);
        org.junit.Assert.assertNull(strComparableList73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test08169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08169");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String str2 = strComparableSchema0.getFormat();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema11.setDescription("hi!");
        strComparableSchema11.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema5.maxLength((java.lang.Integer) (-1));
        strComparableSchema5.setPattern("no description");
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema5.maximum(bigDecimal27);
        strComparableSchema0.setExample((java.lang.Object) schema28);
        java.lang.String str30 = strComparableSchema0.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test08170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08170");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.xml(xML6);
        java.lang.String str8 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test08171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08171");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal34 = strComparableSchema23.getMultipleOf();
        java.lang.String str35 = strComparableSchema23.get$ref();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema23.maximum(bigDecimal36);
        io.swagger.oas.models.media.Discriminator discriminator38 = strComparableSchema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema23.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal41 = null;
        strComparableSchema23.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema23.format("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        schema44.setExternalDocs(externalDocumentation45);
        strComparableSchema0.setNot(schema44);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema0.addProperties("Optional.empty", schema49);
        java.lang.String str51 = schema50.getType();
        io.swagger.oas.models.media.XML xML52 = schema50.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(xML52);
    }

    @Test
    public void test08172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08172");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        java.lang.String str15 = serverListOptional14.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray16 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray16);
        boolean boolean18 = serverListOptional17.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList19 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList20 = serverListOptional17.orElse(serverList19);
        io.swagger.oas.models.servers.Server[] serverArray21 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList22 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList22, serverArray21);
        java.util.List<io.swagger.oas.models.servers.Server> serverList24 = serverListOptional17.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        boolean boolean27 = serverListOptional1.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray28 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional29 = io.swagger.jaxrs2.OperationParser.getServers(serverArray28);
        java.lang.String str30 = serverListOptional29.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray31 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional32 = io.swagger.jaxrs2.OperationParser.getServers(serverArray31);
        boolean boolean33 = serverListOptional32.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList34 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList35 = serverListOptional32.orElse(serverList34);
        io.swagger.oas.models.servers.Server[] serverArray36 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList37 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList37, serverArray36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional32.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList37);
        java.util.List<io.swagger.oas.models.servers.Server> serverList40 = serverListOptional29.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList37);
        java.lang.String str41 = serverListOptional29.toString();
        boolean boolean42 = serverListOptional29.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.writeOnly((java.lang.Boolean) false);
        schema45.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = schema45.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.Boolean boolean56 = strComparableSchema50.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        strComparableSchema50.setProperties(strMap57);
        io.swagger.oas.models.media.Schema schema59 = schema49.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.lang.Boolean boolean60 = schema49.getReadOnly();
        boolean boolean61 = serverListOptional29.equals((java.lang.Object) schema49);
        io.swagger.oas.annotations.servers.Server[] serverArray62 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional63 = io.swagger.jaxrs2.OperationParser.getServers(serverArray62);
        boolean boolean64 = serverListOptional63.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList65 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList66 = serverListOptional63.orElse(serverList65);
        io.swagger.oas.models.servers.Server[] serverArray67 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList68 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList68, serverArray67);
        java.util.List<io.swagger.oas.models.servers.Server> serverList70 = serverListOptional63.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList68);
        java.util.List<io.swagger.oas.models.servers.Server> serverList71 = serverListOptional29.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList68);
        java.util.List<io.swagger.oas.models.servers.Server> serverList72 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList68);
        java.lang.String str73 = serverListOptional1.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList74 = serverListOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Optional.empty" + "'", str15, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray16);
        org.junit.Assert.assertNotNull(serverListOptional17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serverList20);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(serverList24);
        org.junit.Assert.assertNotNull(serverList25);
        org.junit.Assert.assertNotNull(serverList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertNotNull(serverListOptional29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Optional.empty" + "'", str30, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray31);
        org.junit.Assert.assertNotNull(serverListOptional32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(serverList35);
        org.junit.Assert.assertNotNull(serverArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(serverList39);
        org.junit.Assert.assertNotNull(serverList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Optional.empty" + "'", str41, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(serverArray62);
        org.junit.Assert.assertNotNull(serverListOptional63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(serverList66);
        org.junit.Assert.assertNotNull(serverArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(serverList70);
        org.junit.Assert.assertNotNull(serverList71);
        org.junit.Assert.assertNotNull(serverList72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Optional.empty" + "'", str73, "Optional.empty");
    }

    @Test
    public void test08173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08173");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = strComparableSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 100);
        java.lang.String str17 = schema14.getTitle();
        schema14.setType("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test08174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08174");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        java.util.Optional<java.lang.Cloneable> cloneableOptional25 = java.util.Optional.of((java.lang.Cloneable) apiResponseArray0);
        javax.ws.rs.Produces produces26 = null;
        javax.ws.rs.Produces produces27 = null;
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional29 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces26, produces27, components28);
        javax.ws.rs.Produces produces30 = null;
        javax.ws.rs.Produces produces31 = null;
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional33 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces30, produces31, components32);
        javax.ws.rs.Produces produces34 = null;
        javax.ws.rs.Produces produces35 = null;
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional37 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces34, produces35, components36);
        javax.ws.rs.Produces produces38 = null;
        javax.ws.rs.Produces produces39 = null;
        io.swagger.oas.models.Components components40 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional41 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces38, produces39, components40);
        javax.ws.rs.Produces produces42 = null;
        javax.ws.rs.Produces produces43 = null;
        io.swagger.oas.models.Components components44 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional45 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces42, produces43, components44);
        javax.ws.rs.Produces produces46 = null;
        javax.ws.rs.Produces produces47 = null;
        io.swagger.oas.models.Components components48 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional49 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces46, produces47, components48);
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional50 = java.util.Optional.of(apiResponseArray0);
        javax.ws.rs.Produces produces51 = null;
        javax.ws.rs.Produces produces52 = null;
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional54 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces51, produces52, components53);
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional55 = java.util.Optional.ofNullable(apiResponseArray0);
        org.junit.Assert.assertNotNull(apiResponseArray0);
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        org.junit.Assert.assertNotNull(cloneableOptional25);
        org.junit.Assert.assertNotNull(apiResponsesOptional29);
        org.junit.Assert.assertNotNull(apiResponsesOptional33);
        org.junit.Assert.assertNotNull(apiResponsesOptional37);
        org.junit.Assert.assertNotNull(apiResponsesOptional41);
        org.junit.Assert.assertNotNull(apiResponsesOptional45);
        org.junit.Assert.assertNotNull(apiResponsesOptional49);
        org.junit.Assert.assertNotNull(apiResponseArrayOptional50);
        org.junit.Assert.assertNotNull(apiResponsesOptional54);
        org.junit.Assert.assertNotNull(apiResponseArrayOptional55);
    }

    @Test
    public void test08175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08175");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.not(schema13);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema12.getEnum();
        schema12.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema12.addRequiredItem("*/*");
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema19.getExtensions();
        java.lang.String str22 = schema19.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test08176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08176");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional6 = java.util.Optional.ofNullable(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional7 = java.util.Optional.ofNullable(linkArray0);
        java.util.Optional<java.lang.Cloneable> cloneableOptional8 = java.util.Optional.ofNullable((java.lang.Cloneable) linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional11 = java.util.Optional.ofNullable(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        org.junit.Assert.assertNotNull(linkArray0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(linkArrayOptional6);
        org.junit.Assert.assertNotNull(linkArrayOptional7);
        org.junit.Assert.assertNotNull(cloneableOptional8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(linkArrayOptional11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test08177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08177");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema17.description("Optional.empty");
        schema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema24.getNot();
        java.lang.String str32 = strComparableSchema24.getName();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList33 = strComparableSchema24.getEnum();
        io.swagger.oas.models.media.Schema schema34 = schema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        schema21.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema21.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema21.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(strComparableList33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test08178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08178");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema0.getEnum();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.addRequiredItem("Optional.empty");
        java.lang.Boolean boolean25 = schema24.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test08179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08179");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema16.writeOnly((java.lang.Boolean) false);
        java.lang.String str19 = schema18.getDescription();
        java.lang.String str20 = schema18.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        java.math.BigDecimal bigDecimal29 = null;
        strComparableSchema21.setMaximum(bigDecimal29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema31.setDescription("hi!");
        strComparableSchema31.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal42 = strComparableSchema31.getMultipleOf();
        java.lang.String str43 = strComparableSchema31.get$ref();
        java.lang.String[] strArray48 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        strComparableSchema31.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema21.required((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema21.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = schema54.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema54.getExtensions();
        io.swagger.oas.models.media.Schema schema58 = schema54.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema58.getNot();
        io.swagger.oas.models.media.Schema schema61 = schema59.minProperties((java.lang.Integer) 10);
        schema18.setNot(schema61);
        schema61.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "*/*" + "'", str20, "*/*");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test08180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08180");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema0.setMinimum(bigDecimal28);
        strComparableSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test08181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08181");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList9 = strComparableSchema8.getRequired();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal23 = strComparableSchema12.getMultipleOf();
        java.lang.String str24 = strComparableSchema12.get$ref();
        java.lang.String[] strArray29 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        strComparableSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int33 = strComparableSchema12.getMaxLength();
        strComparableSchema12.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema37.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        strComparableSchema37.setExternalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema37.format("");
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema12.additionalProperties(schema52);
        java.math.BigDecimal bigDecimal54 = null;
        schema53.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema53.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema53.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setDefault((java.lang.Object) schema53);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema0.minLength((java.lang.Integer) 1);
        schema62.set$ref("#/components/schemas/");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test08182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08182");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator13 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.maximum(bigDecimal16);
        java.lang.String str18 = schema17.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test08183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08183");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj27 = strComparableSchema2.getExample();
        java.lang.Boolean boolean28 = strComparableSchema2.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray65 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        schema59.setExample((java.lang.Object) tagSetOptional66);
        java.lang.Object obj69 = null;
        schema59.addExtension("*/*", obj69);
        java.lang.String str71 = schema59.getDescription();
        java.lang.String str72 = schema59.getType();
        java.lang.String str73 = schema59.getName();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema31.addProperties("*/*", schema59);
        java.math.BigDecimal bigDecimal75 = schema74.getMultipleOf();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema2.additionalProperties(schema74);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema2.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema2.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test08184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08184");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.name("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.externalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema28.getDiscriminator();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema28.minimum(bigDecimal30);
        java.lang.String str32 = schema31.getDescription();
        io.swagger.oas.models.media.Discriminator discriminator33 = schema31.getDiscriminator();
        java.util.List<java.lang.String> strList34 = schema31.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNull(strList34);
    }

    @Test
    public void test08185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08185");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = strComparableSchema0.getProperties();
        strComparableSchema0.setDescription("#/components/schemas/");
        java.lang.Boolean boolean18 = strComparableSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = strComparableSchema20.getExternalDocs();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema25.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = strComparableSchema25.getProperties();
        io.swagger.oas.models.media.Schema schema39 = schema23.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema41 = schema23.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema43.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema43.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        strComparableSchema65.setDescription("hi!");
        strComparableSchema65.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema59.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema77.multipleOf(bigDecimal78);
        io.swagger.oas.models.media.Schema schema80 = schema52.not(schema79);
        io.swagger.oas.models.media.Schema schema81 = schema23.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema0.addProperties("#/components/schemas/", schema81);
        java.lang.String str83 = schema81.getTitle();
        java.lang.String str84 = schema81.getName();
        java.util.List<java.lang.String> strList85 = schema81.getRequired();
        java.lang.Integer int86 = schema81.getMaxLength();
        java.math.BigDecimal bigDecimal87 = null;
        io.swagger.oas.models.media.Schema schema88 = schema81.multipleOf(bigDecimal87);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test08186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08186");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.lang.Object obj3 = strComparableSchema0.getExample();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean6 = strComparableSchema0.getDeprecated();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setMaxProperties((java.lang.Integer) 100);
        java.lang.String str11 = strComparableSchema0.get$ref();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = strComparableSchema0.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(externalDocumentation12);
    }

    @Test
    public void test08187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08187");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj27 = strComparableSchema2.getExample();
        java.lang.Boolean boolean28 = strComparableSchema2.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray65 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        schema59.setExample((java.lang.Object) tagSetOptional66);
        java.lang.Object obj69 = null;
        schema59.addExtension("*/*", obj69);
        java.lang.String str71 = schema59.getDescription();
        java.lang.String str72 = schema59.getType();
        java.lang.String str73 = schema59.getName();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema31.addProperties("*/*", schema59);
        java.math.BigDecimal bigDecimal75 = schema74.getMultipleOf();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema2.additionalProperties(schema74);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema2.writeOnly((java.lang.Boolean) true);
        schema78.setPattern(",");
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional81 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema78);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional81);
    }

    @Test
    public void test08188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08188");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.addRequiredItem("hi!");
        java.lang.Integer int12 = schema11.getMinLength();
        io.swagger.oas.models.media.Schema schema14 = schema11.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema16 = schema14.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema14.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test08189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08189");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.Boolean boolean4 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema6 = schema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema2.description("");
        schema2.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema2.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray21 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray21);
        schema15.setExample((java.lang.Object) tagSetOptional22);
        java.math.BigDecimal bigDecimal24 = schema15.getMinimum();
        java.math.BigDecimal bigDecimal25 = schema15.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal38 = strComparableSchema27.getMultipleOf();
        java.lang.String str39 = strComparableSchema27.get$ref();
        java.lang.String[] strArray44 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        strComparableSchema27.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.Integer int48 = strComparableSchema27.getMaxLength();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema27.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema51 = schema15.addProperties("#/components/schemas/", schema50);
        schema50.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        strComparableSchema54.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema54.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = strComparableSchema54.getProperties();
        java.lang.Boolean boolean68 = strComparableSchema54.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable69 = strComparableSchema54.getDefault();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema54.addRequiredItem("");
        java.lang.Object obj72 = strComparableSchema54.getExample();
        io.swagger.oas.annotations.media.Content[] contentArray73 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components74 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional75 = io.swagger.jaxrs2.OperationParser.getContents(contentArray73, components74);
        io.swagger.oas.models.Components components76 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional77 = io.swagger.jaxrs2.OperationParser.getContents(contentArray73, components76);
        io.swagger.oas.models.Components components78 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional79 = io.swagger.jaxrs2.OperationParser.getContents(contentArray73, components78);
        io.swagger.oas.models.Components components80 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional81 = io.swagger.jaxrs2.OperationParser.getContents(contentArray73, components80);
        io.swagger.oas.models.Components components82 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional83 = io.swagger.jaxrs2.OperationParser.getContents(contentArray73, components82);
        strComparableSchema54.setDefault((java.lang.Object) contentOptional83);
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = strComparableSchema54.getExtensions();
        schema50.setExtensions(strMap85);
        schema2.setExtensions(strMap85);
        schema2.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(tagSetOptional22);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(strComparable69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(contentArray73);
        org.junit.Assert.assertNotNull(contentOptional75);
        org.junit.Assert.assertNotNull(contentOptional77);
        org.junit.Assert.assertNotNull(contentOptional79);
        org.junit.Assert.assertNotNull(contentOptional81);
        org.junit.Assert.assertNotNull(contentOptional83);
        org.junit.Assert.assertNotNull(strMap85);
    }

    @Test
    public void test08190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08190");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema14.title("");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxLength((java.lang.Integer) 100);
        schema20.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test08191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08191");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.additionalProperties(schema34);
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.xml(xML36);
        java.math.BigDecimal bigDecimal38 = null;
        schema37.setMinimum(bigDecimal38);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test08192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08192");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.Schema schema8 = schema2.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = schema2.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema10.title("no description");
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("Optional.empty");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxLength((java.lang.Integer) 1);
        io.swagger.oas.annotations.Parameter[] parameterArray21 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray21, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray21, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray21, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray21, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray21, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray21, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray21, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional37 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray21, components36);
        io.swagger.oas.models.media.Schema schema38 = schema18.example((java.lang.Object) parameterListOptional37);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(parameterArray21);
        org.junit.Assert.assertNotNull(parameterListOptional23);
        org.junit.Assert.assertNotNull(parameterListOptional25);
        org.junit.Assert.assertNotNull(parameterListOptional27);
        org.junit.Assert.assertNotNull(parameterListOptional29);
        org.junit.Assert.assertNotNull(parameterListOptional31);
        org.junit.Assert.assertNotNull(parameterListOptional33);
        org.junit.Assert.assertNotNull(parameterListOptional35);
        org.junit.Assert.assertNotNull(parameterListOptional37);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test08193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08193");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.List<java.lang.String> strList20 = strComparableSchema5.getRequired();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema5.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema5.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test08194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08194");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        strComparableSchema0.setProperties(strMap5);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean9 = strComparableSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int12 = schema11.getMaxLength();
        java.lang.Integer int13 = schema11.getMaxLength();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + true + "'", boolean9, true);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test08195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08195");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = schema2.maxLength((java.lang.Integer) (-1));
        schema14.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema14.addRequiredItem("");
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema14.setDiscriminator(discriminator21);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema14.discriminator(discriminator23);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test08196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08196");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema26.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator29 = schema26.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        java.math.BigDecimal bigDecimal38 = null;
        strComparableSchema30.setMaximum(bigDecimal38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema40.setDescription("hi!");
        strComparableSchema40.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal51 = strComparableSchema40.getMultipleOf();
        java.lang.String str52 = strComparableSchema40.get$ref();
        java.lang.String[] strArray57 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        strComparableSchema40.setRequired((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema30.required((java.util.List<java.lang.String>) strList58);
        java.lang.Object obj62 = schema61.getExample();
        schema26.setAdditionalProperties(schema61);
        java.lang.Boolean boolean64 = schema26.getExclusiveMaximum();
        schema26.setType("#/components/schemas/no description");
        java.math.BigDecimal bigDecimal67 = null;
        schema26.setMinimum(bigDecimal67);
        io.swagger.oas.models.media.Schema schema70 = schema26.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test08197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08197");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList14 = strComparableSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.lang.String[] strArray34 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        strComparableSchema17.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = strComparableSchema17.getMaxLength();
        strComparableSchema17.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema42.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        strComparableSchema42.setExternalDocs(externalDocumentation54);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema42.format("");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema17.additionalProperties(schema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        strComparableSchema71.setDescription("hi!");
        strComparableSchema71.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema65.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema71);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = null;
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema61.externalDocs(externalDocumentation84);
        strComparableSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema89.minimum(bigDecimal90);
        io.swagger.oas.models.media.Schema schema93 = schema91.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema91.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test08198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08198");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.lang.Integer int23 = schema22.getMaxItems();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema25.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema25.discriminator(discriminator30);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test08199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08199");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.xml(xML11);
        schema2.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema16 = schema2.description("");
        java.lang.Object obj17 = schema2.getExample();
        schema2.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = schema2.description("*/*");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(obj17);
        org.junit.Assert.assertEquals(obj17.toString(), "Optional[[class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}, class Tag {\n    name: #/components/schemas/\n    description: #/components/schemas/\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj17), "Optional[[class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}, class Tag {\n    name: #/components/schemas/\n    description: #/components/schemas/\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj17), "Optional[[class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}, class Tag {\n    name: #/components/schemas/\n    description: #/components/schemas/\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test08200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08200");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String str2 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = strComparableSchema5.getExternalDocs();
        java.lang.Integer int7 = strComparableSchema5.getMinProperties();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.maxProperties((java.lang.Integer) (-1));
        strComparableSchema5.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema5.minLength((java.lang.Integer) 100);
        schema13.setMaxItems((java.lang.Integer) 10);
        schema4.setAdditionalProperties(schema13);
        io.swagger.oas.models.media.Schema schema18 = schema13.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema19.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.multipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema56 = schema28.not(schema55);
        schema28.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema60 = schema28.uniqueItems((java.lang.Boolean) true);
        schema18.setNot(schema28);
        java.lang.Boolean boolean62 = schema28.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean62);
    }

    @Test
    public void test08201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08201");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        schema2.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.writeOnly((java.lang.Boolean) false);
        schema21.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema18.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema27 = schema25.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int28 = schema27.getMinProperties();
        java.math.BigDecimal bigDecimal29 = null;
        schema27.setMinimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema2.not(schema27);
        io.swagger.oas.models.media.Schema schema32 = schema2.getNot();
        io.swagger.oas.models.media.Schema schema34 = schema2.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal35 = null;
        schema2.setMultipleOf(bigDecimal35);
        schema2.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList39 = schema2.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strComparableList39);
    }

    @Test
    public void test08202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08202");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        schema2.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema2.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema2.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation14);
    }

    @Test
    public void test08203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08203");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = schema5.getExclusiveMinimum();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = schema5.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema5.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema5.maxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test08204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08204");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema10.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList37 = strComparableSchema36.getRequired();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema36.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema40.setDescription("hi!");
        strComparableSchema40.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal51 = strComparableSchema40.getMultipleOf();
        java.lang.String str52 = strComparableSchema40.get$ref();
        java.lang.String[] strArray57 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        strComparableSchema40.setRequired((java.util.List<java.lang.String>) strList58);
        java.lang.Integer int61 = strComparableSchema40.getMaxLength();
        strComparableSchema40.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema36.minimum(bigDecimal65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema67.setDescription("hi!");
        java.math.BigDecimal bigDecimal75 = null;
        strComparableSchema67.setMaximum(bigDecimal75);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema67.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList79 = strComparableSchema67.getRequired();
        io.swagger.oas.models.media.Schema schema80 = schema66.required(strList79);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema10.not(schema66);
        java.math.BigDecimal bigDecimal82 = schema81.getMultipleOf();
        java.lang.Boolean boolean83 = schema81.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNull(boolean83);
    }

    @Test
    public void test08205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08205");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        io.swagger.oas.models.media.Schema schema62 = schema60.minLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = schema60.getProperties();
        io.swagger.oas.models.media.Schema schema65 = schema60.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema67 = schema65.addRequiredItem("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema69 = schema65.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test08206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08206");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.lang.Boolean boolean25 = schema24.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test08207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08207");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        strComparableSchema0.addExtension("#/components/schemas/", (java.lang.Object) str30);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.externalDocs(externalDocumentation32);
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema0.xml(xML34);
        strComparableSchema0.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML38 = null;
        strComparableSchema0.setXml(xML38);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test08208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08208");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList48 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean51 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean52 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean53 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean54 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList48);
        java.lang.Boolean boolean57 = schema40.getNullable();
        io.swagger.oas.models.media.Schema schema59 = schema40.pattern("no description");
        java.lang.Integer int60 = schema40.getMaxProperties();
        io.swagger.oas.models.media.Schema schema62 = schema40.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.addEnumItemObject((java.lang.Comparable<java.lang.String>) "*/*");
        io.swagger.oas.models.media.Schema schema66 = schema40.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema67.setDescription("hi!");
        strComparableSchema67.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal78 = strComparableSchema67.getMultipleOf();
        java.lang.String str79 = strComparableSchema67.get$ref();
        strComparableSchema67.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema67.multipleOf(bigDecimal82);
        java.lang.String str84 = schema83.get$ref();
        schema83.setMinItems((java.lang.Integer) 1);
        schema40.setDefault((java.lang.Object) schema83);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema40.externalDocs(externalDocumentation88);
        io.swagger.oas.models.media.Schema schema91 = schema40.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(bigDecimal78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test08209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08209");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema schema10 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema6.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema16.readOnly((java.lang.Boolean) false);
        schema18.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test08210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08210");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator41 = strComparableSchema25.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal53 = strComparableSchema42.getMultipleOf();
        java.lang.String str54 = strComparableSchema42.get$ref();
        java.lang.String[] strArray59 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        strComparableSchema42.setRequired((java.util.List<java.lang.String>) strList60);
        java.lang.Integer int63 = strComparableSchema42.getMaxLength();
        strComparableSchema42.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema42.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        schema67.setExternalDocs(externalDocumentation68);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema67.properties(strMap70);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = strComparableSchema73.getExternalDocs();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema73.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str79 = strComparableSchema78.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema80.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema78.not((io.swagger.oas.models.media.Schema) strComparableSchema80);
        strComparableSchema78.setDescription("hi!");
        strComparableSchema78.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema78.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap91 = strComparableSchema78.getProperties();
        io.swagger.oas.models.media.Schema schema92 = schema76.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema78);
        java.lang.Boolean boolean93 = strComparableSchema78.getDeprecated();
        schema67.addExtension("Optional.empty", (java.lang.Object) boolean93);
        io.swagger.oas.models.media.XML xML95 = null;
        schema67.setXml(xML95);
        io.swagger.oas.models.media.Schema schema97 = strComparableSchema25.not(schema67);
        java.util.Map<java.lang.String, java.lang.Object> strMap98 = schema67.getExtensions();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList99 = schema67.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(externalDocumentation74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(boolean93);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(strMap98);
        org.junit.Assert.assertNull(strComparableList99);
    }

    @Test
    public void test08211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08211");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.String str40 = strComparableSchema34.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional48 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema33.required((java.util.List<java.lang.String>) strList46);
        java.lang.String str51 = schema33.getTitle();
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema33.multipleOf(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = schema53.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test08212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08212");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        strComparableSchema0.addExtension("#/components/schemas/", (java.lang.Object) str30);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.externalDocs(externalDocumentation32);
        schema33.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj36 = null;
        schema33.setDefault(obj36);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList38 = schema33.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strComparableList38);
    }

    @Test
    public void test08213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08213");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.title("");
        java.lang.Integer int12 = schema11.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = strComparableSchema13.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema13.getDefault();
        java.lang.Integer int16 = strComparableSchema13.getMinProperties();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.minItems((java.lang.Integer) 0);
        boolean boolean19 = schema11.equals((java.lang.Object) 0);
        io.swagger.oas.annotations.servers.Server server20 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray21 = new io.swagger.oas.annotations.servers.Server[] { server20 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        boolean boolean23 = serverListOptional22.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema24.getNot();
        boolean boolean32 = serverListOptional22.equals((java.lang.Object) schema31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema31.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema31.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal37 = schema31.getMaximum();
        schema11.setNot(schema31);
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema31.xml(xML39);
        java.lang.String str41 = schema40.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertNotNull(serverListOptional22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test08214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08214");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        java.math.BigDecimal bigDecimal32 = schema31.getMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = schema31.getExtensions();
        io.swagger.oas.models.media.XML xML34 = schema31.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal46 = strComparableSchema35.getMultipleOf();
        java.lang.String str47 = strComparableSchema35.get$ref();
        java.lang.String[] strArray52 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        strComparableSchema35.setRequired((java.util.List<java.lang.String>) strList53);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema35.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema57.$ref("Optional.empty");
        io.swagger.oas.models.media.Schema schema60 = schema31.not(schema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.properties(strMap62);
        java.lang.Integer int64 = schema63.getMaxLength();
        schema63.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int67 = schema63.getMaxItems();
        io.swagger.oas.models.media.Schema schema69 = schema63.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema70.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.uniqueItems((java.lang.Boolean) false);
        schema75.setDescription("");
        schema75.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        schema75.setExternalDocs(externalDocumentation80);
        io.swagger.oas.models.media.Schema schema83 = schema75.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema84 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation85 = strComparableSchema84.getExternalDocs();
        io.swagger.oas.models.media.Schema schema86 = schema75.not((io.swagger.oas.models.media.Schema) strComparableSchema84);
        io.swagger.oas.models.media.Schema schema88 = schema86.uniqueItems((java.lang.Boolean) false);
        java.lang.String str89 = schema88.getPattern();
        io.swagger.oas.models.media.Schema schema90 = schema63.additionalProperties(schema88);
        schema90.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema90.externalDocs(externalDocumentation93);
        schema31.setNot(schema90);
        java.lang.Object obj96 = schema31.getExample();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(externalDocumentation85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(obj96);
    }

    @Test
    public void test08215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08215");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int18 = schema17.getMinProperties();
        schema17.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema22 = schema17.$ref("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema22.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList26 = strComparableSchema25.getRequired();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema25.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.writeOnly((java.lang.Boolean) false);
        schema31.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema31.title("#/components/schemas/");
        schema35.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal38 = schema35.getMinimum();
        java.lang.String str39 = schema35.getTitle();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema35.multipleOf(bigDecimal40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = strComparableSchema42.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema42.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = strComparableSchema47.getProperties();
        io.swagger.oas.models.media.Schema schema61 = schema45.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.lang.Boolean boolean62 = schema61.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator63 = null;
        schema61.setDiscriminator(discriminator63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema61.getProperties();
        io.swagger.oas.models.media.Schema schema66 = schema35.properties(strMap65);
        strComparableSchema25.setProperties(strMap65);
        io.swagger.oas.models.media.Schema schema68 = schema22.properties(strMap65);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#/components/schemas/" + "'", str39, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test08216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08216");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Integer int3 = schema2.getMaxLength();
        schema2.setWriteOnly((java.lang.Boolean) false);
        schema2.setFormat("*/*");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.minimum(bigDecimal8);
        schema2.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test08217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08217");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String[] strArray3 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList4);
        strComparableSchema0.setPattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema0.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(externalDocumentation11);
    }

    @Test
    public void test08218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08218");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.lang.String str26 = strComparableSchema14.get$ref();
        java.lang.String[] strArray31 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        strComparableSchema14.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = strComparableSchema14.getMaxLength();
        strComparableSchema14.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema38.maximum(bigDecimal51);
        io.swagger.oas.models.media.Discriminator discriminator53 = strComparableSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema38);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema38.pattern(",");
        schema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setMinItems((java.lang.Integer) 1);
        java.lang.String str63 = strComparableSchema60.toString();
        io.swagger.oas.models.media.Schema schema64 = schema56.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema56);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str63, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test08219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08219");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation3 = null;
        schema2.setExternalDocs(externalDocumentation3);
        java.lang.Boolean boolean5 = schema2.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = schema2.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertNull(externalDocumentation6);
    }

    @Test
    public void test08220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08220");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = strComparableSchema0.getDeprecated();
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean30 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema33.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema42.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.maximum(bigDecimal45);
        io.swagger.oas.models.media.Schema schema48 = schema46.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema50 = schema48.title("hi!");
        schema48.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema33.addProperties(",", schema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = strComparableSchema33.getExtensions();
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        java.lang.String str56 = strComparableSchema0.getDescription();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema0.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test08221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08221");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema21.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator34 = strComparableSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.properties(strMap36);
        java.lang.Boolean boolean38 = schema37.getUniqueItems();
        schema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = null;
        schema37.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema37.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema21.example((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema schema46 = schema19.addProperties("*/*", (io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema schema48 = schema19.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema48.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test08222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08222");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        schema30.setExample((java.lang.Object) tagSetOptional37);
        java.lang.Object obj40 = null;
        schema30.addExtension("*/*", obj40);
        java.lang.String str42 = schema30.getDescription();
        java.lang.String str43 = schema30.getType();
        java.lang.String str44 = schema30.getName();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema2.addProperties("*/*", schema30);
        java.math.BigDecimal bigDecimal46 = schema45.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema schema49 = schema45.name(",");
        schema49.setMinLength((java.lang.Integer) 10);
        schema49.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema49.discriminator(discriminator54);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test08223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08223");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        java.lang.Boolean boolean10 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator11 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator12 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.description("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema0.setMaximum(bigDecimal17);
        java.lang.Boolean boolean19 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test08224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08224");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema16.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema16.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.String str56 = strComparableSchema50.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema50.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema49.required((java.util.List<java.lang.String>) strList62);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional67 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema0.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        strComparableSchema0.setName("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setType("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass75 = strComparableSchema0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strCollectionOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test08225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08225");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean13 = strComparableSchema7.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strComparableSchema7.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema16 = schema6.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.uniqueItems((java.lang.Boolean) false);
        schema22.setDescription("");
        schema22.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        schema22.setExternalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema22.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = strComparableSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = schema22.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema7.additionalProperties(schema22);
        schema34.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema34.minLength((java.lang.Integer) (-1));
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList39 = schema38.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strComparableList39);
    }

    @Test
    public void test08226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08226");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema schema30 = schema28.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str31 = schema28.getName();
        java.lang.Boolean boolean32 = schema28.getExclusiveMinimum();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
    }

    @Test
    public void test08227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08227");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        schema13.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema17.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema17.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema17.multipleOf(bigDecimal29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        strComparableSchema17.setProperties(strMap31);
        schema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Comparable<java.lang.String> strComparable34 = strComparableSchema17.getDefault();
        java.math.BigDecimal bigDecimal35 = null;
        strComparableSchema17.setMultipleOf(bigDecimal35);
        java.lang.Boolean boolean37 = strComparableSchema17.getDeprecated();
        java.lang.String str38 = strComparableSchema17.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strComparable34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test08228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08228");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.Integer int7 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray16 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray16);
        schema10.setExample((java.lang.Object) tagSetOptional17);
        java.lang.Object obj20 = null;
        schema10.addExtension("*/*", obj20);
        schema10.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema24.setNullable((java.lang.Boolean) false);
        java.lang.String str37 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema24.name("");
        java.math.BigDecimal bigDecimal40 = null;
        strComparableSchema24.setMinimum(bigDecimal40);
        java.lang.Boolean boolean42 = strComparableSchema24.getReadOnly();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema24.description("*/*");
        boolean boolean45 = schema10.equals((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        strComparableSchema59.setDescription("hi!");
        strComparableSchema59.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema53.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema59);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema49.externalDocs(externalDocumentation72);
        java.lang.Object obj74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.example(obj74);
        java.lang.Object obj76 = schema73.getExample();
        java.lang.Integer int77 = schema73.getMaxProperties();
        schema73.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema80 = schema44.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema73);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema0.example((java.lang.Object) schema73);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema0.maxItems((java.lang.Integer) 10);
        java.lang.String str84 = strComparableSchema0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(tagSetOptional17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test08229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08229");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema21 = schema2.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = schema2.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema2.minimum(bigDecimal24);
        schema25.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test08230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08230");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) 100);
        schema39.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema39.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema39.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema47 = schema45.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema45.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test08231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08231");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.List<java.lang.String> strList20 = strComparableSchema5.getRequired();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema5.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.discriminator(discriminator23);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.xml(xML25);
        java.lang.String str27 = schema22.getTitle();
        java.math.BigDecimal bigDecimal28 = null;
        schema22.setMultipleOf(bigDecimal28);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test08232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08232");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.lang.Integer int25 = strComparableSchema0.getMinLength();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema31 = schema29.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test08233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08233");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        strComparableSchema0.addExtension("#/components/schemas/", (java.lang.Object) str30);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.externalDocs(externalDocumentation32);
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema0.xml(xML34);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema0.title("*/*");
        io.swagger.oas.models.media.Schema schema39 = schema37.readOnly((java.lang.Boolean) false);
        schema39.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test08234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08234");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.xml(xML6);
        schema7.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema11 = schema7.minLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean12 = schema11.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema11.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema11.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation15);
    }

    @Test
    public void test08235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08235");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.annotations.servers.Server server5 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] { server5 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        boolean boolean8 = serverListOptional7.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.lang.String str15 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema9.getNot();
        boolean boolean17 = serverListOptional7.equals((java.lang.Object) schema16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.multipleOf(bigDecimal18);
        boolean boolean20 = serverListOptional4.equals((java.lang.Object) schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str23 = schema19.getTitle();
        io.swagger.oas.models.media.Schema schema25 = schema19.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean26 = schema19.getWriteOnly();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + boolean26 + "' != '" + false + "'", boolean26, false);
    }

    @Test
    public void test08236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08236");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        schema44.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal47 = null;
        schema44.setMaximum(bigDecimal47);
        schema44.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        schema44.setExternalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema schema53 = schema44.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema55 = schema44.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test08237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08237");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        strComparableSchema6.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema6.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema31.setExternalDocs(externalDocumentation32);
        strComparableSchema2.setDefault((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema35.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        strComparableSchema35.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema35.title("Optional.empty");
        java.lang.Integer int51 = strComparableSchema35.getMinProperties();
        io.swagger.oas.models.media.Schema schema52 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.util.List<java.lang.String> strList53 = schema52.getRequired();
        schema52.setDescription("no description");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strList53);
    }

    @Test
    public void test08238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08238");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.Schema schema12 = schema2.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema16.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.uniqueItems((java.lang.Boolean) false);
        schema21.setDescription("");
        schema21.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema21.setExternalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema21);
        io.swagger.oas.models.media.Schema schema30 = schema14.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test08239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08239");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        java.util.Optional<io.swagger.oas.annotations.Parameter[]> parameterArrayOptional7 = java.util.Optional.ofNullable(parameterArray0);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components16);
        org.junit.Assert.assertNotNull(parameterArray0);
        org.junit.Assert.assertNotNull(parameterListOptional2);
        org.junit.Assert.assertNotNull(parameterListOptional4);
        org.junit.Assert.assertNotNull(parameterListOptional6);
        org.junit.Assert.assertNotNull(parameterArrayOptional7);
        org.junit.Assert.assertNotNull(parameterListOptional9);
        org.junit.Assert.assertNotNull(parameterListOptional11);
        org.junit.Assert.assertNotNull(parameterListOptional13);
        org.junit.Assert.assertNotNull(parameterListOptional15);
        org.junit.Assert.assertNotNull(parameterListOptional17);
    }

    @Test
    public void test08240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08240");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int3 = schema2.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema7 = schema2.description("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test08241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08241");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        java.lang.Boolean boolean10 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator11 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator12 = strComparableSchema0.getDiscriminator();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(discriminator12);
    }

    @Test
    public void test08242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08242");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema31.type("no description");
        io.swagger.oas.models.media.Schema schema48 = schema46.pattern("no description");
        io.swagger.oas.models.media.Schema schema50 = schema48.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema50.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = schema50.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema67.setDescription("hi!");
        strComparableSchema67.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema61.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema67);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema57.externalDocs(externalDocumentation80);
        java.lang.Object obj82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema81.example(obj82);
        java.lang.Object obj84 = schema81.getExample();
        java.lang.Boolean boolean85 = schema81.getDeprecated();
        java.lang.String str86 = schema81.getPattern();
        schema50.setExample((java.lang.Object) str86);
        java.math.BigDecimal bigDecimal88 = null;
        schema50.setMaximum(bigDecimal88);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(obj84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test08243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08243");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
    }

    @Test
    public void test08244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08244");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema11.getNullable();
        java.math.BigDecimal bigDecimal13 = null;
        schema11.setMaximum(bigDecimal13);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema11.getEnum();
        schema11.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(strComparableList15);
    }

    @Test
    public void test08245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08245");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.XML xML7 = schema2.getXml();
        io.swagger.oas.models.media.Schema schema9 = schema2.$ref("*/*");
        io.swagger.oas.models.media.Schema schema11 = schema2.format("");
        java.lang.Object obj12 = schema2.getExample();
        io.swagger.oas.models.media.Discriminator discriminator13 = schema2.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNull(discriminator13);
    }

    @Test
    public void test08246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08246");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        java.lang.Integer int4 = schema3.getMaxLength();
        io.swagger.oas.models.media.Schema schema6 = schema3.minItems((java.lang.Integer) 1);
        java.lang.String str7 = schema6.getFormat();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test08247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08247");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.maximum(bigDecimal14);
        java.lang.String str16 = schema15.getName();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList17 = schema15.getEnum();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema15.$ref(",");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema22.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        strComparableSchema22.setExternalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema22.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema22.maxProperties((java.lang.Integer) 1);
        java.lang.String str40 = strComparableSchema22.getType();
        java.lang.Boolean boolean41 = strComparableSchema22.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema22.writeOnly((java.lang.Boolean) true);
        boolean boolean44 = schema15.equals((java.lang.Object) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema15.externalDocs(externalDocumentation45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.properties(strMap47);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strComparableList17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test08248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08248");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.pattern("");
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.discriminator(discriminator41);
        schema40.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema40.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test08249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08249");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        schema11.setDeprecated((java.lang.Boolean) false);
        schema11.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema11.format("no description");
        io.swagger.oas.models.media.Schema schema21 = schema19.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.writeOnly((java.lang.Boolean) false);
        schema28.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal31 = schema28.getMaximum();
        io.swagger.oas.models.media.Schema schema32 = schema25.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema33.setDescription("hi!");
        strComparableSchema33.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema33.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        strComparableSchema33.setExternalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema33.title("Optional.empty");
        schema48.setReadOnly((java.lang.Boolean) true);
        java.lang.String str51 = schema48.getName();
        schema48.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.properties(strMap55);
        java.lang.Boolean boolean57 = schema56.getUniqueItems();
        schema56.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal60 = null;
        schema56.setMultipleOf(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema56.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = schema63.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema63.title("hi!");
        java.lang.String str68 = schema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = strComparableSchema69.getExternalDocs();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema69.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str75 = strComparableSchema74.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema76.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema74.not((io.swagger.oas.models.media.Schema) strComparableSchema76);
        strComparableSchema74.setDescription("hi!");
        strComparableSchema74.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema74.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = strComparableSchema74.getProperties();
        io.swagger.oas.models.media.Schema schema88 = schema72.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema74);
        java.lang.Boolean boolean89 = schema88.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator90 = null;
        schema88.setDiscriminator(discriminator90);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema88.getProperties();
        io.swagger.oas.models.media.Schema schema93 = schema67.properties(strMap92);
        schema48.setProperties(strMap92);
        schema28.setProperties(strMap92);
        io.swagger.oas.models.media.Schema schema96 = schema21.properties(strMap92);
        java.math.BigDecimal bigDecimal97 = schema21.getMinimum();
        java.math.BigDecimal bigDecimal98 = null;
        io.swagger.oas.models.media.Schema schema99 = schema21.multipleOf(bigDecimal98);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(externalDocumentation70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(boolean89);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(bigDecimal97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test08250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08250");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.pattern("");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema2.minLength((java.lang.Integer) 10);
        schema15.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema18 = schema15.getAdditionalProperties();
        schema15.setPattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema18);
    }

    @Test
    public void test08251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08251");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        strComparableSchema6.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema6.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema31.setExternalDocs(externalDocumentation32);
        strComparableSchema2.setDefault((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema35.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        strComparableSchema35.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema35.title("Optional.empty");
        java.lang.Integer int51 = strComparableSchema35.getMinProperties();
        io.swagger.oas.models.media.Schema schema52 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.math.BigDecimal bigDecimal53 = null;
        schema52.setMaximum(bigDecimal53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal66 = strComparableSchema55.getMultipleOf();
        java.lang.String str67 = strComparableSchema55.get$ref();
        java.lang.String[] strArray72 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        strComparableSchema55.setRequired((java.util.List<java.lang.String>) strList73);
        java.lang.Integer int76 = strComparableSchema55.getMaxLength();
        strComparableSchema55.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema55.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        schema80.setExternalDocs(externalDocumentation81);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str84 = strComparableSchema83.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema85 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema85.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema83.not((io.swagger.oas.models.media.Schema) strComparableSchema85);
        strComparableSchema83.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema92 = strComparableSchema83.exclusiveMinimum((java.lang.Boolean) false);
        schema80.setExample((java.lang.Object) strComparableSchema83);
        io.swagger.oas.models.media.Schema schema94 = schema52.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema83);
        io.swagger.oas.models.media.XML xML95 = null;
        schema94.setXml(xML95);
        java.math.BigDecimal bigDecimal97 = null;
        io.swagger.oas.models.media.Schema schema98 = schema94.minimum(bigDecimal97);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test08252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08252");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        schema30.setExample((java.lang.Object) tagSetOptional37);
        java.lang.Object obj40 = null;
        schema30.addExtension("*/*", obj40);
        java.lang.String str42 = schema30.getDescription();
        java.lang.String str43 = schema30.getType();
        java.lang.String str44 = schema30.getName();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema2.addProperties("*/*", schema30);
        java.math.BigDecimal bigDecimal46 = strComparableSchema2.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
    }

    @Test
    public void test08253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08253");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.lang.Boolean boolean20 = strComparableSchema5.getDeprecated();
        strComparableSchema5.setMinLength((java.lang.Integer) 10);
        java.lang.Boolean boolean23 = strComparableSchema5.getNullable();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
    }

    @Test
    public void test08254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08254");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getExclusiveMinimum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList8 = schema2.getEnum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema11.setDescription("hi!");
        strComparableSchema11.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema11.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator24 = strComparableSchema11.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.properties(strMap26);
        java.lang.Boolean boolean28 = schema27.getUniqueItems();
        schema27.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = null;
        schema27.setMultipleOf(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema27.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema11.example((java.lang.Object) schema34);
        java.math.BigDecimal bigDecimal36 = strComparableSchema11.getMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        strComparableSchema11.setProperties(strMap37);
        schema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema schema41 = schema10.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(strComparableList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test08255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08255");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        strComparableSchema0.addExtension("#/components/schemas/", (java.lang.Object) str30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maximum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        strComparableSchema34.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema34.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = strComparableSchema34.getProperties();
        java.lang.Integer int48 = strComparableSchema34.getMinItems();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = strComparableSchema34.getExtensions();
        strComparableSchema0.setExtensions(strMap49);
        java.lang.Integer int51 = strComparableSchema0.getMinProperties();
        java.lang.String str52 = strComparableSchema0.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test08256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08256");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.type("no description");
        java.math.BigDecimal bigDecimal12 = schema11.getMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema schema15 = schema11.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test08257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08257");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.xml(xML20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean23 = strComparableSchema0.getNullable();
        io.swagger.oas.models.media.XML xML24 = null;
        strComparableSchema0.setXml(xML24);
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test08258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08258");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal27 = schema24.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
    }

    @Test
    public void test08259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08259");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional3 = java.util.Optional.of(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional6 = java.util.Optional.of(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        org.junit.Assert.assertNotNull(linkArray0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(linkArrayOptional3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(linkArrayOptional6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test08260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08260");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema schema10 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.externalDocs(externalDocumentation11);
        java.lang.Boolean boolean13 = schema6.getWriteOnly();
        schema6.set$ref("no description");
        java.util.List<java.lang.String> strList16 = schema6.getRequired();
        schema6.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test08261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08261");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional9 = java.util.Optional.of(apiResponseArray0);
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional10 = java.util.Optional.of(apiResponseArray0);
        javax.ws.rs.Produces produces11 = null;
        javax.ws.rs.Produces produces12 = null;
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional14 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces11, produces12, components13);
        javax.ws.rs.Produces produces15 = null;
        javax.ws.rs.Produces produces16 = null;
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional18 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces15, produces16, components17);
        javax.ws.rs.Produces produces19 = null;
        javax.ws.rs.Produces produces20 = null;
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional22 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces19, produces20, components21);
        javax.ws.rs.Produces produces23 = null;
        javax.ws.rs.Produces produces24 = null;
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional26 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces23, produces24, components25);
        javax.ws.rs.Produces produces27 = null;
        javax.ws.rs.Produces produces28 = null;
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional30 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces27, produces28, components29);
        javax.ws.rs.Produces produces31 = null;
        javax.ws.rs.Produces produces32 = null;
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional34 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces31, produces32, components33);
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional35 = java.util.Optional.ofNullable(apiResponseArray0);
        javax.ws.rs.Produces produces36 = null;
        javax.ws.rs.Produces produces37 = null;
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional39 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces36, produces37, components38);
        javax.ws.rs.Produces produces40 = null;
        javax.ws.rs.Produces produces41 = null;
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional43 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces40, produces41, components42);
        javax.ws.rs.Produces produces44 = null;
        javax.ws.rs.Produces produces45 = null;
        io.swagger.oas.models.Components components46 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional47 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces44, produces45, components46);
        org.junit.Assert.assertNotNull(apiResponseArray0);
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        org.junit.Assert.assertNotNull(apiResponseArrayOptional9);
        org.junit.Assert.assertNotNull(apiResponseArrayOptional10);
        org.junit.Assert.assertNotNull(apiResponsesOptional14);
        org.junit.Assert.assertNotNull(apiResponsesOptional18);
        org.junit.Assert.assertNotNull(apiResponsesOptional22);
        org.junit.Assert.assertNotNull(apiResponsesOptional26);
        org.junit.Assert.assertNotNull(apiResponsesOptional30);
        org.junit.Assert.assertNotNull(apiResponsesOptional34);
        org.junit.Assert.assertNotNull(apiResponseArrayOptional35);
        org.junit.Assert.assertNotNull(apiResponsesOptional39);
        org.junit.Assert.assertNotNull(apiResponsesOptional43);
        org.junit.Assert.assertNotNull(apiResponsesOptional47);
    }

    @Test
    public void test08262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08262");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema23.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal28 = null;
        schema25.setMinimum(bigDecimal28);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        schema25.setExternalDocs(externalDocumentation30);
        java.lang.Class<?> wildcardClass32 = schema25.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test08263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08263");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.String str40 = strComparableSchema34.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional48 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema33.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxItems((java.lang.Integer) 0);
        java.lang.Object obj53 = schema50.getExample();
        io.swagger.oas.models.media.Schema schema55 = schema50.type("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        schema55.setExternalDocs(externalDocumentation56);
        java.lang.String str58 = schema55.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(obj53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test08264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08264");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.String> strList7 = strComparableSchema0.getRequired();
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema11.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        java.lang.Boolean boolean22 = strComparableSchema16.getReadOnly();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.maxLength((java.lang.Integer) 10);
        strComparableSchema16.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema11.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema29 = schema27.nullable((java.lang.Boolean) true);
        java.lang.Integer int30 = schema29.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test08265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08265");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        strComparableSchema0.setProperties(strMap3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema11.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema26.title("hi!");
        schema26.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema11.addProperties(",", schema26);
        java.lang.Integer int32 = schema31.getMaxItems();
        schema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema6.example((java.lang.Object) false);
        schema6.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = strComparableSchema38.getExternalDocs();
        java.lang.Integer int40 = strComparableSchema38.getMinProperties();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema38.maxProperties((java.lang.Integer) (-1));
        schema42.setTitle("Optional.empty");
        java.lang.String str45 = schema42.getPattern();
        java.math.BigDecimal bigDecimal46 = schema42.getMultipleOf();
        io.swagger.oas.models.media.Schema schema47 = schema6.additionalProperties(schema42);
        io.swagger.oas.models.media.Schema schema49 = schema47.addRequiredItem("");
        java.lang.Integer int50 = schema47.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(externalDocumentation39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
    }

    @Test
    public void test08266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08266");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema0.setMinimum(bigDecimal25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        strComparableSchema0.setProperties(strMap27);
        java.lang.Integer int29 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.nullable((java.lang.Boolean) true);
        schema31.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema34.xml(xML40);
        schema41.setMaxItems((java.lang.Integer) (-1));
        schema41.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal46 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema schema47 = schema31.not(schema41);
        java.math.BigDecimal bigDecimal48 = null;
        schema47.setMinimum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema47.format("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test08267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08267");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema schema10 = schema6.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test08268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08268");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.Boolean boolean7 = strComparableSchema0.getNullable();
        java.lang.Integer int8 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema9 = null;
        strComparableSchema0.setAdditionalProperties(schema9);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = strComparableSchema0.getEnum();
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(strComparableList11);
    }

    @Test
    public void test08269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08269");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("Optional.empty");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema13.deprecated((java.lang.Boolean) true);
        java.lang.Integer int16 = schema13.getMinProperties();
        java.math.BigDecimal bigDecimal17 = schema13.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        schema13.setExternalDocs(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test08270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08270");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema17.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema17.description("");
        java.lang.Boolean boolean22 = schema21.getReadOnly();
        java.math.BigDecimal bigDecimal23 = schema21.getMinimum();
        schema21.setType("#/components/schemas/");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test08271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08271");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMaxProperties();
        schema9.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema schema15 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal22 = null;
        schema21.setMinimum(bigDecimal22);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test08272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08272");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        java.lang.String str8 = strComparableSchema2.getDescription();
        strComparableSchema2.setFormat("#/components/schemas/");
        java.lang.String str11 = strComparableSchema2.getDescription();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.name("");
        java.lang.String str14 = strComparableSchema2.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test08273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08273");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        schema13.setFormat("Optional.empty");
        schema13.setType("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema21.setExtensions(strMap25);
        strComparableSchema21.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema21.minimum(bigDecimal29);
        schema30.set$ref("no description");
        schema30.setDeprecated((java.lang.Boolean) false);
        schema30.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema30.format("no description");
        io.swagger.oas.models.media.Schema schema40 = schema38.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema38.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        java.lang.String str45 = strComparableSchema43.getFormat();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema48.setDescription("hi!");
        strComparableSchema48.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema48.setNullable((java.lang.Boolean) false);
        java.lang.String str61 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema48.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = strComparableSchema65.getExternalDocs();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema65.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.not((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema70.setDescription("hi!");
        strComparableSchema70.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema70.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = strComparableSchema70.getProperties();
        io.swagger.oas.models.media.Schema schema84 = schema68.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean85 = strComparableSchema70.getDeprecated();
        io.swagger.oas.models.media.Schema schema86 = schema63.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = schema86.getProperties();
        strComparableSchema43.setProperties(strMap87);
        io.swagger.oas.models.media.Schema schema89 = schema42.properties(strMap87);
        io.swagger.oas.models.media.Schema schema90 = schema13.properties(strMap87);
        io.swagger.oas.models.media.Schema schema92 = schema90.maxLength((java.lang.Integer) 0);
        schema90.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML95 = null;
        io.swagger.oas.models.media.Schema schema96 = schema90.xml(xML95);
        io.swagger.oas.models.media.Schema schema98 = schema96.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass99 = schema96.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test08274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08274");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        java.math.BigDecimal bigDecimal16 = schema15.getMultipleOf();
        schema15.setMaxItems((java.lang.Integer) 100);
        schema15.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test08275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08275");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = strComparableSchema2.getMaxItems();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema2.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema13.setMaximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema13.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList25 = strComparableSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema26 = schema12.required(strList25);
        io.swagger.oas.models.media.Schema schema28 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        schema30.setDiscriminator(discriminator31);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test08276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08276");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        java.lang.String str15 = serverListOptional14.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray16 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray16);
        boolean boolean18 = serverListOptional17.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList19 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList20 = serverListOptional17.orElse(serverList19);
        io.swagger.oas.models.servers.Server[] serverArray21 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList22 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList22, serverArray21);
        java.util.List<io.swagger.oas.models.servers.Server> serverList24 = serverListOptional17.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        boolean boolean28 = serverListOptional1.equals((java.lang.Object) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema29.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = strComparableSchema29.getProperties();
        java.lang.Boolean boolean43 = strComparableSchema29.getReadOnly();
        strComparableSchema29.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema29.getAdditionalProperties();
        boolean boolean47 = serverListOptional1.equals((java.lang.Object) strComparableSchema29);
        strComparableSchema29.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema29.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Optional.empty" + "'", str15, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray16);
        org.junit.Assert.assertNotNull(serverListOptional17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serverList20);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(serverList24);
        org.junit.Assert.assertNotNull(serverList25);
        org.junit.Assert.assertNotNull(serverList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test08277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08277");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = schema6.getMinimum();
        java.lang.String str10 = schema6.getTitle();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema6.maxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#/components/schemas/" + "'", str10, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test08278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08278");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        strComparableSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema22.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal43 = strComparableSchema32.getMultipleOf();
        java.lang.String str44 = strComparableSchema32.get$ref();
        java.lang.String[] strArray49 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        strComparableSchema32.setRequired((java.util.List<java.lang.String>) strList50);
        schema31.setNot((io.swagger.oas.models.media.Schema) strComparableSchema32);
        java.lang.Integer int54 = strComparableSchema32.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema32.properties(strMap55);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        strComparableSchema32.setExternalDocs(externalDocumentation57);
        java.lang.Object obj59 = strComparableSchema32.getExample();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema32.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema63 = schema61.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema63.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema0.not(schema63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = null;
        schema63.setProperties(strMap67);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test08279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08279");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.annotations.servers.Server server5 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] { server5 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        boolean boolean8 = serverListOptional7.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.lang.String str15 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema9.getNot();
        boolean boolean17 = serverListOptional7.equals((java.lang.Object) schema16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.multipleOf(bigDecimal18);
        boolean boolean20 = serverListOptional4.equals((java.lang.Object) schema19);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional4.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test08280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08280");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.properties(strMap28);
        java.lang.Boolean boolean30 = schema29.getNullable();
        java.lang.String str31 = schema29.getType();
        schema29.setTitle("#/components/schemas/");
        schema29.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema29.addRequiredItem("*/*");
        strComparableSchema0.setExample((java.lang.Object) schema29);
        io.swagger.oas.models.media.Schema schema40 = schema29.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        java.math.BigDecimal bigDecimal49 = null;
        strComparableSchema41.setMaximum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema41.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean53 = strComparableSchema41.getWriteOnly();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema41.multipleOf(bigDecimal54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema41.externalDocs(externalDocumentation56);
        java.lang.String str58 = schema57.getPattern();
        schema29.setNot(schema57);
        io.swagger.oas.models.media.Schema schema61 = schema57.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema63 = schema61.minProperties((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass64 = schema61.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test08281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08281");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.XML xML7 = schema2.getXml();
        io.swagger.oas.models.media.Schema schema9 = schema2.$ref("*/*");
        io.swagger.oas.models.media.Schema schema11 = schema2.format("");
        io.swagger.oas.models.media.Schema schema13 = schema2.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str14 = schema2.getPattern();
        io.swagger.oas.models.media.Schema schema16 = schema2.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema26.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema32);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.Boolean boolean45 = strComparableSchema22.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList54 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean56 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean57 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean58 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean59 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean60 = strComparableList54.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean61 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean62 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema22.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList54);
        strComparableSchema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList54);
        strComparableSchema17.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema17.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema16.setNot(schema68);
        schema16.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test08282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08282");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        java.lang.Object obj27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.example(obj27);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList29 = schema26.getEnum();
        java.lang.Boolean boolean30 = schema26.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema31.setDescription("hi!");
        java.math.BigDecimal bigDecimal39 = null;
        strComparableSchema31.setMaximum(bigDecimal39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal52 = strComparableSchema41.getMultipleOf();
        java.lang.String str53 = strComparableSchema41.get$ref();
        java.lang.String[] strArray58 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        strComparableSchema41.setRequired((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema31.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema63 = schema26.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema<java.io.Serializable> serializableSchema64 = new io.swagger.oas.models.media.Schema<java.io.Serializable>();
        boolean boolean65 = schema26.equals((java.lang.Object) serializableSchema64);
        schema26.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strComparableList29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test08283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08283");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal17 = null;
        schema16.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.xml(xML19);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.externalDocs(externalDocumentation21);
        schema20.setMaxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.multipleOf(bigDecimal25);
        schema20.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test08284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08284");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema18.setMaximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema18.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList30 = strComparableSchema18.getRequired();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required(strList30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        strComparableSchema34.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema34.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = strComparableSchema34.getProperties();
        java.lang.Boolean boolean48 = strComparableSchema34.getReadOnly();
        java.lang.Integer int49 = strComparableSchema34.getMaxProperties();
        strComparableSchema0.setExample((java.lang.Object) int49);
        java.lang.String str51 = strComparableSchema0.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test08285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08285");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 0);
        java.lang.Integer int28 = strComparableSchema0.getMinProperties();
        java.lang.String str29 = strComparableSchema0.getFormat();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.multipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema31.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema33.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test08286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08286");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = schema10.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test08287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08287");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema0.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean34 = schema33.getReadOnly();
        java.math.BigDecimal bigDecimal35 = schema33.getMaximum();
        schema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        schema33.setProperties(strMap38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema33.externalDocs(externalDocumentation40);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test08288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08288");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.properties(strMap33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        strComparableSchema10.setExternalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema10.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        strComparableSchema10.setDiscriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema10.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema10.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test08289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08289");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) true);
        java.lang.String str27 = schema26.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test08290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08290");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        schema2.setMaxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        java.math.BigDecimal bigDecimal8 = schema2.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        schema11.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema11.title("#/components/schemas/");
        schema15.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal18 = schema15.getMinimum();
        java.lang.String str19 = schema15.getTitle();
        io.swagger.oas.models.media.Schema schema21 = schema15.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        java.math.BigDecimal bigDecimal30 = null;
        strComparableSchema22.setMaximum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal43 = strComparableSchema32.getMultipleOf();
        java.lang.String str44 = strComparableSchema32.get$ref();
        java.lang.String[] strArray49 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        strComparableSchema32.setRequired((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema22.required((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema22.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str57 = strComparableSchema56.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.not((io.swagger.oas.models.media.Schema) strComparableSchema58);
        java.lang.String str62 = strComparableSchema56.get$ref();
        java.lang.String[] strArray67 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional70 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema56.required((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema72 = schema55.required((java.util.List<java.lang.String>) strList68);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional73 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList68);
        java.util.Optional<java.util.Collection<java.lang.String>> strCollectionOptional74 = java.util.Optional.ofNullable((java.util.Collection<java.lang.String>) strList68);
        schema21.setRequired((java.util.List<java.lang.String>) strList68);
        java.util.Optional<java.util.AbstractList<java.lang.String>> strListOptional76 = java.util.Optional.ofNullable((java.util.AbstractList<java.lang.String>) strList68);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional77 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema78 = schema2.required((java.util.List<java.lang.String>) strList68);
        schema2.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal81 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal82 = schema2.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "#/components/schemas/" + "'", str19, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strCollectionOptional73);
        org.junit.Assert.assertNotNull(strCollectionOptional74);
        org.junit.Assert.assertNotNull(strListOptional76);
        org.junit.Assert.assertNotNull(strCollectionOptional77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNull(bigDecimal82);
    }

    @Test
    public void test08291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08291");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = strComparableSchema2.getMaxItems();
        java.lang.Integer int11 = strComparableSchema2.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test08292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08292");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        strComparableSchema0.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test08293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08293");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        java.lang.Boolean boolean14 = strComparableSchema0.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test08294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08294");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray23 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        schema17.setExample((java.lang.Object) tagSetOptional24);
        java.lang.Object obj27 = null;
        schema17.addExtension("*/*", obj27);
        java.lang.String str29 = schema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        java.lang.Boolean boolean38 = schema33.getUniqueItems();
        schema17.addExtension("Optional.empty", (java.lang.Object) boolean38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema17.getExtensions();
        schema10.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema43.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema43.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal64 = strComparableSchema53.getMultipleOf();
        java.lang.String str65 = strComparableSchema53.get$ref();
        java.lang.String[] strArray70 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        strComparableSchema53.setRequired((java.util.List<java.lang.String>) strList71);
        schema52.setNot((io.swagger.oas.models.media.Schema) strComparableSchema53);
        schema52.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema77 = null;
        schema52.setAdditionalProperties(schema77);
        io.swagger.oas.models.media.Schema schema79 = schema10.addProperties("*/*", schema52);
        io.swagger.oas.models.media.Schema schema81 = schema79.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema83 = schema79.maxProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean84 = schema79.getWriteOnly();
        io.swagger.oas.models.media.Schema schema86 = schema79.maxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal87 = null;
        io.swagger.oas.models.media.Schema schema88 = schema79.multipleOf(bigDecimal87);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test08295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08295");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema3.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema<java.lang.CharSequence> charSequenceSchema8 = new io.swagger.oas.models.media.Schema<java.lang.CharSequence>();
        io.swagger.oas.models.media.Schema schema9 = schema5.additionalProperties((io.swagger.oas.models.media.Schema) charSequenceSchema8);
        schema9.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test08296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08296");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        schema44.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema49 = schema44.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.writeOnly((java.lang.Boolean) false);
        schema52.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema52.title("#/components/schemas/");
        schema56.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean59 = schema56.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema56.discriminator(discriminator60);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        schema56.setExternalDocs(externalDocumentation62);
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema56.minimum(bigDecimal64);
        schema56.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema49.setDefault((java.lang.Object) schema56);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test08297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08297");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.getAdditionalProperties();
        java.lang.Integer int3 = strComparableSchema0.getMinLength();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minimum(bigDecimal4);
        java.lang.String str6 = schema5.toString();
        io.swagger.oas.models.media.Schema schema8 = schema5.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = schema8.getExtensions();
        java.util.List<java.lang.String> strList10 = schema8.getRequired();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str6, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test08298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08298");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal19 = strComparableSchema8.getMultipleOf();
        java.lang.String str20 = strComparableSchema8.get$ref();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema8.maximum(bigDecimal21);
        java.lang.Integer int23 = schema22.getMaxLength();
        schema22.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema28.setNullable((java.lang.Boolean) false);
        java.lang.String str41 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema28.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = strComparableSchema45.getExternalDocs();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema45.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        strComparableSchema50.setDescription("hi!");
        strComparableSchema50.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema50.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = strComparableSchema50.getProperties();
        io.swagger.oas.models.media.Schema schema64 = schema48.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.lang.Boolean boolean65 = strComparableSchema50.getDeprecated();
        io.swagger.oas.models.media.Schema schema66 = schema43.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = schema66.getProperties();
        schema27.setProperties(strMap67);
        io.swagger.oas.models.media.Schema schema69 = schema2.properties(strMap67);
        io.swagger.oas.models.media.Discriminator discriminator70 = schema69.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(externalDocumentation46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(discriminator70);
    }

    @Test
    public void test08299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08299");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.maximum(bigDecimal14);
        java.lang.String str16 = schema15.getName();
        schema15.setType("hi!");
        java.lang.Object obj19 = schema15.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema15.externalDocs(externalDocumentation20);
        java.lang.String str22 = schema21.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = strComparableSchema23.getExternalDocs();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema23.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema28.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = strComparableSchema28.getProperties();
        io.swagger.oas.models.media.Schema schema42 = schema26.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema schema44 = schema26.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema51.setDescription("hi!");
        strComparableSchema51.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal62 = strComparableSchema51.getMultipleOf();
        java.lang.String str63 = strComparableSchema51.get$ref();
        java.lang.String[] strArray68 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        strComparableSchema51.setRequired((java.util.List<java.lang.String>) strList69);
        java.lang.Integer int72 = strComparableSchema51.getMaxLength();
        java.lang.Integer int73 = strComparableSchema51.getMaxProperties();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema51.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema51.maxLength((java.lang.Integer) 10);
        strComparableSchema47.setExample((java.lang.Object) strComparableSchema51);
        schema26.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = strComparableSchema51.getProperties();
        java.math.BigDecimal bigDecimal81 = strComparableSchema51.getMaximum();
        boolean boolean82 = schema21.equals((java.lang.Object) strComparableSchema51);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNull(externalDocumentation24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test08300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08300");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.properties(strMap36);
        java.lang.Boolean boolean38 = schema37.getUniqueItems();
        schema37.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema43.setExtensions(strMap47);
        strComparableSchema43.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema43.minimum(bigDecimal51);
        java.math.BigDecimal bigDecimal53 = strComparableSchema43.getMinimum();
        io.swagger.oas.models.media.Schema schema54 = schema37.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema schema55 = schema34.not(schema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str57 = strComparableSchema56.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.not((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema56.setDescription("hi!");
        strComparableSchema56.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema56.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = strComparableSchema56.getProperties();
        java.lang.Boolean boolean70 = strComparableSchema56.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable71 = strComparableSchema56.getDefault();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema56.addRequiredItem("");
        java.lang.Object obj74 = strComparableSchema56.getExample();
        io.swagger.oas.annotations.media.Content[] contentArray75 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components76 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional77 = io.swagger.jaxrs2.OperationParser.getContents(contentArray75, components76);
        io.swagger.oas.models.Components components78 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional79 = io.swagger.jaxrs2.OperationParser.getContents(contentArray75, components78);
        io.swagger.oas.models.Components components80 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional81 = io.swagger.jaxrs2.OperationParser.getContents(contentArray75, components80);
        io.swagger.oas.models.Components components82 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional83 = io.swagger.jaxrs2.OperationParser.getContents(contentArray75, components82);
        io.swagger.oas.models.Components components84 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional85 = io.swagger.jaxrs2.OperationParser.getContents(contentArray75, components84);
        strComparableSchema56.setDefault((java.lang.Object) contentOptional85);
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = strComparableSchema56.getExtensions();
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema56.nullable((java.lang.Boolean) false);
        schema34.setExample((java.lang.Object) schema89);
        java.lang.Boolean boolean91 = schema34.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema34.multipleOf(bigDecimal92);
        io.swagger.oas.models.media.Schema schema95 = schema93.type("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str96 = schema95.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNull(strComparable71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(obj74);
        org.junit.Assert.assertNotNull(contentArray75);
        org.junit.Assert.assertNotNull(contentOptional77);
        org.junit.Assert.assertNotNull(contentOptional79);
        org.junit.Assert.assertNotNull(contentOptional81);
        org.junit.Assert.assertNotNull(contentOptional83);
        org.junit.Assert.assertNotNull(contentOptional85);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(boolean91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test08301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08301");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int20 = schema19.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test08302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08302");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema17.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean27 = schema26.getUniqueItems();
        java.lang.String str28 = schema26.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test08303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08303");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String str2 = strComparableSchema0.getFormat();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML5 = null;
        strComparableSchema0.setXml(xML5);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList7 = strComparableSchema0.getEnum();
        java.lang.Boolean boolean8 = strComparableSchema0.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strComparableList7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + true + "'", boolean8, true);
    }

    @Test
    public void test08304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08304");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema29.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        schema47.setName("no description");
        java.math.BigDecimal bigDecimal50 = null;
        schema47.setMaximum(bigDecimal50);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = schema47.getExtensions();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema0.not(schema47);
        java.math.BigDecimal bigDecimal54 = schema53.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        java.lang.String str61 = strComparableSchema55.get$ref();
        java.lang.String[] strArray66 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional69 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema55.required((java.util.List<java.lang.String>) strList67);
        strComparableSchema55.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str74 = strComparableSchema73.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema75.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema73.not((io.swagger.oas.models.media.Schema) strComparableSchema75);
        strComparableSchema73.setDescription("hi!");
        java.math.BigDecimal bigDecimal81 = null;
        strComparableSchema73.setMaximum(bigDecimal81);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema73.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList85 = strComparableSchema73.getRequired();
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema55.required(strList85);
        java.lang.Integer int87 = schema86.getMaxProperties();
        schema86.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema91 = schema86.deprecated((java.lang.Boolean) true);
        java.lang.Integer int92 = schema91.getMaxProperties();
        schema53.setAdditionalProperties(schema91);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(int92);
    }

    @Test
    public void test08305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08305");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList48 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean51 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean52 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean53 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean54 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList48);
        java.lang.Boolean boolean57 = schema40.getNullable();
        io.swagger.oas.models.media.Schema schema59 = schema40.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema40.type("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Boolean boolean62 = schema40.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        schema40.setExternalDocs(externalDocumentation63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema40.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = strComparableSchema66.getExternalDocs();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema66.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        strComparableSchema71.setDescription("hi!");
        strComparableSchema71.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema71.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = strComparableSchema71.getProperties();
        io.swagger.oas.models.media.Schema schema85 = schema69.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema71);
        java.lang.Boolean boolean86 = schema85.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator87 = null;
        schema85.setDiscriminator(discriminator87);
        io.swagger.oas.models.media.Schema schema89 = schema40.not(schema85);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(externalDocumentation67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(boolean86);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test08306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08306");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.description("hi!");
        java.lang.Boolean boolean17 = strComparableSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = strComparableSchema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean22 = strComparableSchema18.getReadOnly();
        strComparableSchema0.setExample((java.lang.Object) boolean22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema0.setMaximum(bigDecimal26);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema0.discriminator(discriminator28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema33.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.uniqueItems((java.lang.Boolean) false);
        schema38.setDescription("");
        io.swagger.oas.annotations.media.Content[] contentArray41 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional43 = io.swagger.jaxrs2.OperationParser.getContents(contentArray41, components42);
        io.swagger.oas.models.Components components44 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional45 = io.swagger.jaxrs2.OperationParser.getContents(contentArray41, components44);
        io.swagger.oas.models.Components components46 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional47 = io.swagger.jaxrs2.OperationParser.getContents(contentArray41, components46);
        boolean boolean48 = schema38.equals((java.lang.Object) contentArray41);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional50 = io.swagger.jaxrs2.OperationParser.getContents(contentArray41, components49);
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray41, components51);
        java.util.Optional<io.swagger.oas.annotations.media.Content[]> contentArrayOptional53 = java.util.Optional.of(contentArray41);
        java.util.Optional<io.swagger.oas.annotations.media.Content[]> contentArrayOptional54 = java.util.Optional.ofNullable(contentArray41);
        schema29.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) contentArrayOptional54);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema29.multipleOf(bigDecimal56);
        schema29.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(contentArray41);
        org.junit.Assert.assertNotNull(contentOptional43);
        org.junit.Assert.assertNotNull(contentOptional45);
        org.junit.Assert.assertNotNull(contentOptional47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(contentOptional50);
        org.junit.Assert.assertNotNull(contentOptional52);
        org.junit.Assert.assertNotNull(contentArrayOptional53);
        org.junit.Assert.assertNotNull(contentArrayOptional54);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test08307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08307");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        java.lang.Object obj11 = schema2.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray20 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray20);
        schema14.setExample((java.lang.Object) tagSetOptional21);
        java.lang.Object obj24 = null;
        schema14.addExtension("*/*", obj24);
        java.lang.String str26 = schema14.getDescription();
        io.swagger.oas.models.media.Schema schema28 = schema14.minProperties((java.lang.Integer) 1);
        java.lang.String str29 = schema28.toString();
        java.math.BigDecimal bigDecimal30 = schema28.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema32 = schema2.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema34 = schema32.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(tagSetOptional21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str29, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test08308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08308");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.xml(xML6);
        java.lang.String str8 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.lang.Boolean boolean15 = strComparableSchema9.getReadOnly();
        java.util.List<java.lang.String> strList16 = strComparableSchema9.getRequired();
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema9.setMaximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema9.format(",");
        strComparableSchema0.setDefault((java.lang.Object) schema20);
        io.swagger.oas.models.media.Schema schema23 = schema20.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal24 = schema23.getMinimum();
        java.lang.Integer int25 = schema23.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test08309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08309");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.addRequiredItem("*/*");
        java.lang.String str23 = schema22.get$ref();
        schema22.set$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.Integer int47 = strComparableSchema26.getMaxLength();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema26.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema26.maxItems((java.lang.Integer) 100);
        strComparableSchema26.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal54 = strComparableSchema26.getMultipleOf();
        boolean boolean55 = schema22.equals((java.lang.Object) strComparableSchema26);
        strComparableSchema26.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test08310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08310");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.annotations.servers.Server[] serverArray4 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray4);
        java.lang.String str6 = serverListOptional5.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray7 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray7);
        boolean boolean9 = serverListOptional8.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList10 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional8.orElse(serverList10);
        io.swagger.oas.models.servers.Server[] serverArray12 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList13 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList13, serverArray12);
        java.util.List<io.swagger.oas.models.servers.Server> serverList15 = serverListOptional8.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList13);
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = serverListOptional5.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList13);
        io.swagger.oas.annotations.servers.Server[] serverArray17 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray17);
        boolean boolean19 = serverListOptional18.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList20 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional18.orElse(serverList20);
        io.swagger.oas.models.servers.Server[] serverArray22 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList23 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList23, serverArray22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional18.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList23);
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional5.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList23);
        java.lang.String str27 = serverListOptional5.toString();
        io.swagger.oas.models.servers.Server[] serverArray28 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList29 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList29, serverArray28);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional5.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        io.swagger.oas.models.servers.Server[] serverArray32 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList33 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList33, serverArray32);
        java.util.List<io.swagger.oas.models.servers.Server> serverList35 = serverListOptional5.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList33);
        java.util.List<io.swagger.oas.models.servers.Server> serverList36 = serverListOptional3.orElse(serverList35);
        java.lang.String str37 = serverListOptional3.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList38 = serverListOptional3.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverArray4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional.empty" + "'", str6, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(serverList11);
        org.junit.Assert.assertNotNull(serverArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(serverList15);
        org.junit.Assert.assertNotNull(serverList16);
        org.junit.Assert.assertNotNull(serverArray17);
        org.junit.Assert.assertNotNull(serverListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(serverList21);
        org.junit.Assert.assertNotNull(serverArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serverList25);
        org.junit.Assert.assertNotNull(serverList26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Optional.empty" + "'", str27, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNotNull(serverArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(serverList35);
        org.junit.Assert.assertNotNull(serverList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Optional.empty" + "'", str37, "Optional.empty");
    }

    @Test
    public void test08311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08311");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema10.nullable((java.lang.Boolean) true);
        java.lang.String str34 = schema33.get$ref();
        schema33.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema33.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema33.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test08312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08312");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema4.description("");
        java.lang.Integer int7 = schema4.getMaxItems();
        io.swagger.oas.models.media.Schema schema9 = schema4.writeOnly((java.lang.Boolean) false);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema9.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test08313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08313");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.multipleOf(bigDecimal12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strComparableSchema0.setProperties(strMap14);
        java.lang.Boolean boolean16 = strComparableSchema0.getDeprecated();
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal32 = strComparableSchema21.getMultipleOf();
        java.lang.String str33 = strComparableSchema21.get$ref();
        java.lang.String[] strArray38 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        strComparableSchema21.setRequired((java.util.List<java.lang.String>) strList39);
        java.lang.Integer int42 = strComparableSchema21.getMaxLength();
        strComparableSchema21.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal56 = strComparableSchema45.getMultipleOf();
        java.lang.String str57 = strComparableSchema45.get$ref();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema45.maximum(bigDecimal58);
        io.swagger.oas.models.media.Discriminator discriminator60 = strComparableSchema45.getDiscriminator();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema45.pattern(",");
        schema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = schema20.example((java.lang.Object) false);
        io.swagger.oas.annotations.servers.Server server67 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray68 = new io.swagger.oas.annotations.servers.Server[] { server67 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional69 = io.swagger.jaxrs2.OperationParser.getServers(serverArray68);
        boolean boolean70 = serverListOptional69.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        java.lang.String str77 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema71.getNot();
        boolean boolean79 = serverListOptional69.equals((java.lang.Object) schema78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema78.properties(strMap80);
        io.swagger.oas.models.media.Schema schema83 = schema78.uniqueItems((java.lang.Boolean) false);
        java.lang.String str84 = schema83.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator85 = schema83.getDiscriminator();
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema83.multipleOf(bigDecimal86);
        schema87.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema90 = schema66.additionalProperties(schema87);
        java.lang.Boolean boolean91 = schema87.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(discriminator60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(serverArray68);
        org.junit.Assert.assertNotNull(serverListOptional69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(discriminator85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertEquals("'" + boolean91 + "' != '" + false + "'", boolean91, false);
    }

    @Test
    public void test08314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08314");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.multipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.getNot();
        java.lang.String str15 = strComparableSchema0.getPattern();
        strComparableSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test08315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08315");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = null;
        schema6.setMaximum(bigDecimal11);
        java.lang.Boolean boolean13 = schema6.getWriteOnly();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema6.xml(xML14);
        java.lang.String str16 = schema6.getDescription();
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema18);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
    }

    @Test
    public void test08316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08316");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.properties(strMap11);
        java.lang.Boolean boolean13 = schema12.getNullable();
        java.lang.String str14 = schema12.getType();
        schema12.setTitle("#/components/schemas/");
        schema12.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema12.addRequiredItem("*/*");
        schema20.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema20.description("Optional.empty");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = schema9.not(schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal40 = strComparableSchema29.getMultipleOf();
        java.lang.String str41 = strComparableSchema29.get$ref();
        java.lang.String[] strArray46 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        strComparableSchema29.setRequired((java.util.List<java.lang.String>) strList47);
        java.lang.Integer int50 = strComparableSchema29.getMaxLength();
        strComparableSchema29.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema29.$ref("#/components/schemas/");
        strComparableSchema29.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal57 = null;
        strComparableSchema29.setMinimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema29.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema60);
        io.swagger.oas.models.media.Schema schema63 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test08317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08317");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.discriminator(discriminator14);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation16);
        io.swagger.oas.models.media.XML xML18 = null;
        strComparableSchema0.setXml(xML18);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test08318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08318");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.lang.String str20 = schema2.getType();
        java.lang.Integer int21 = schema2.getMinLength();
        schema2.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal24 = null;
        schema2.setMaximum(bigDecimal24);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test08319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08319");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema0.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.description("#/components/schemas/hi!");
        schema31.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test08320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08320");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema37 = schema33.addRequiredItem("Optional.empty");
        schema33.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema33.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema43 = schema41.pattern("");
        io.swagger.oas.models.media.XML xML44 = schema43.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(xML44);
    }

    @Test
    public void test08321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08321");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = strComparableSchema2.getMaxItems();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema2.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema13.setMaximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema13.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList25 = strComparableSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema26 = schema12.required(strList25);
        io.swagger.oas.models.media.XML xML27 = null;
        schema12.setXml(xML27);
        schema12.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema43.setDescription("hi!");
        strComparableSchema43.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema37.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        java.lang.Boolean boolean56 = strComparableSchema33.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList65 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean66 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean67 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean68 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean69 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean70 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean71 = strComparableList65.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean72 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean73 = strComparableList65.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema33.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList65);
        schema12.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList65);
        schema12.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema78 = schema12.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(schema78);
    }

    @Test
    public void test08322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08322");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal16 = strComparableSchema5.getMultipleOf();
        java.lang.String str17 = strComparableSchema5.get$ref();
        java.lang.String[] strArray22 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        strComparableSchema5.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.Integer int26 = strComparableSchema5.getMaxLength();
        java.lang.Integer int27 = strComparableSchema5.getMaxProperties();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal41 = strComparableSchema30.getMultipleOf();
        java.lang.String str42 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema schema43 = schema29.example((java.lang.Object) strComparableSchema30);
        strComparableSchema0.setNot(schema43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML49 = schema48.getXml();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(xML49);
    }

    @Test
    public void test08323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08323");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal14 = schema13.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test08324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08324");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema2.minProperties((java.lang.Integer) 1);
        java.lang.String str17 = schema16.toString();
        java.math.BigDecimal bigDecimal18 = schema16.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        strComparableSchema19.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String str32 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema19.name("");
        java.math.BigDecimal bigDecimal35 = null;
        strComparableSchema19.setMinimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema19.addRequiredItem("*/*");
        schema16.setNot(schema38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema38.externalDocs(externalDocumentation40);
        schema41.setPattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema44.setDescription("hi!");
        java.math.BigDecimal bigDecimal52 = null;
        strComparableSchema44.setMaximum(bigDecimal52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        strComparableSchema54.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal65 = strComparableSchema54.getMultipleOf();
        java.lang.String str66 = strComparableSchema54.get$ref();
        java.lang.String[] strArray71 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        strComparableSchema54.setRequired((java.util.List<java.lang.String>) strList72);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema44.required((java.util.List<java.lang.String>) strList72);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema44.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = schema77.getExtensions();
        schema77.setMaxLength((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList81 = schema77.getRequired();
        schema41.setRequired(strList81);
        java.lang.String str83 = schema41.getFormat();
        io.swagger.oas.models.media.Schema schema85 = schema41.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test08325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08325");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.Boolean boolean4 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema6 = schema2.uniqueItems((java.lang.Boolean) false);
        schema2.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str9 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema12.setExtensions(strMap16);
        strComparableSchema12.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = strComparableSchema20.getExternalDocs();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.uniqueItems((java.lang.Boolean) false);
        strComparableSchema12.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.lang.String str27 = strComparableSchema12.getName();
        io.swagger.oas.models.media.Schema schema28 = schema2.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        schema28.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getUniqueItems();
        schema33.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal37 = null;
        schema33.setMultipleOf(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema33.deprecated((java.lang.Boolean) true);
        java.lang.Integer int41 = schema40.getMaxProperties();
        schema40.setReadOnly((java.lang.Boolean) true);
        java.lang.String str44 = schema40.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.lang.String str51 = strComparableSchema45.get$ref();
        java.lang.String[] strArray56 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional59 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList57);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema45.required((java.util.List<java.lang.String>) strList57);
        java.util.Optional<java.lang.Cloneable> cloneableOptional61 = java.util.Optional.of((java.lang.Cloneable) strList57);
        schema40.setRequired((java.util.List<java.lang.String>) strList57);
        schema28.setRequired((java.util.List<java.lang.String>) strList57);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList57);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(cloneableOptional61);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
    }

    @Test
    public void test08326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08326");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema0.setMinimum(bigDecimal25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        strComparableSchema0.setProperties(strMap27);
        java.lang.Integer int29 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.nullable((java.lang.Boolean) true);
        schema31.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema34.xml(xML40);
        schema41.setMaxItems((java.lang.Integer) (-1));
        schema41.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal46 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema schema47 = schema31.not(schema41);
        io.swagger.oas.models.media.Schema schema49 = schema41.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema51 = schema49.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test08327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08327");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        strComparableSchema0.setPattern("no description");
        strComparableSchema0.setTitle("");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.type("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema25.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test08328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08328");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.multipleOf(bigDecimal66);
        java.lang.Integer int68 = schema67.getMaxItems();
        strComparableSchema0.setAdditionalProperties(schema67);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema0.maximum(bigDecimal70);
        schema71.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test08329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08329");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean46 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean47 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean48 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        boolean boolean49 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean50 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema0.discriminator(discriminator52);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema0.multipleOf(bigDecimal54);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test08330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08330");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Integer int14 = strComparableSchema0.getMinItems();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = strComparableSchema0.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test08331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08331");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema11.uniqueItems((java.lang.Boolean) false);
        schema16.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema20 = schema16.deprecated((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = schema16.getEnum();
        java.lang.String[] strArray26 = new java.lang.String[] { ",", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        io.swagger.oas.models.media.Schema schema29 = schema16.required((java.util.List<java.lang.String>) strList27);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = schema29.getExternalDocs();
        schema29.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema37.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.maximum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema41.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.externalDocs(externalDocumentation44);
        java.lang.String str46 = schema45.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        java.lang.String[] strArray50 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        strComparableSchema47.setRequired((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema54.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema59 = schema57.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema47.not(schema59);
        io.swagger.oas.models.media.Schema schema61 = schema45.example((java.lang.Object) strComparableSchema47);
        io.swagger.oas.models.media.Schema schema63 = schema61.addRequiredItem("*/*");
        schema29.setAdditionalProperties(schema63);
        io.swagger.oas.models.media.XML xML65 = schema63.getXml();
        java.util.List<java.lang.String> strList66 = schema63.getRequired();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strComparableList21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(xML65);
        org.junit.Assert.assertNotNull(strList66);
    }

    @Test
    public void test08332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08332");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.Integer int25 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean30 = schema27.getDeprecated();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test08333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08333");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema18.setMaximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema18.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList30 = strComparableSchema18.getRequired();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required(strList30);
        io.swagger.oas.models.media.XML xML32 = strComparableSchema0.getXml();
        strComparableSchema0.setFormat("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema48.setDescription("hi!");
        strComparableSchema48.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema42.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.multipleOf(bigDecimal61);
        java.lang.Integer int63 = schema62.getMaxItems();
        java.lang.Integer int64 = schema62.getMaxItems();
        schema62.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str69 = strComparableSchema68.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema68.not((io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = null;
        strComparableSchema70.setExtensions(strMap74);
        strComparableSchema70.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int78 = strComparableSchema70.getMaxItems();
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema70.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str82 = strComparableSchema81.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema83.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema81.not((io.swagger.oas.models.media.Schema) strComparableSchema83);
        strComparableSchema81.setDescription("hi!");
        java.math.BigDecimal bigDecimal89 = null;
        strComparableSchema81.setMaximum(bigDecimal89);
        io.swagger.oas.models.media.Schema schema92 = strComparableSchema81.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList93 = strComparableSchema81.getRequired();
        io.swagger.oas.models.media.Schema schema94 = schema80.required(strList93);
        java.lang.Boolean boolean95 = schema80.getReadOnly();
        io.swagger.oas.models.media.Schema schema96 = schema62.addProperties("#/components/schemas/no description", schema80);
        strComparableSchema0.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema80);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(xML32);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(boolean95);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test08334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08334");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 10);
        schema2.setMaxProperties((java.lang.Integer) 1);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = schema2.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strComparableList11);
    }

    @Test
    public void test08335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08335");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional45 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema2.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        io.swagger.oas.models.media.Schema schema50 = schema48.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema52.setDescription("hi!");
        strComparableSchema52.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = strComparableSchema52.getProperties();
        java.lang.Boolean boolean66 = strComparableSchema52.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable67 = strComparableSchema52.getDefault();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema52.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema70 = schema48.addProperties("no description", schema69);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema71.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema71.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema71.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str80 = strComparableSchema79.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema81.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema79.not((io.swagger.oas.models.media.Schema) strComparableSchema81);
        strComparableSchema79.setDescription("hi!");
        strComparableSchema79.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema79.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator92 = strComparableSchema79.getDiscriminator();
        strComparableSchema71.addExtension("Optional.empty", (java.lang.Object) strComparableSchema79);
        io.swagger.oas.models.media.Schema schema95 = strComparableSchema71.uniqueItems((java.lang.Boolean) true);
        schema48.setAdditionalProperties(schema95);
        io.swagger.oas.models.media.Schema schema98 = schema48.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(strComparable67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(discriminator92);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test08336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08336");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional45 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema2.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        io.swagger.oas.models.media.Schema schema50 = schema48.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema52.setDescription("hi!");
        strComparableSchema52.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = strComparableSchema52.getProperties();
        java.lang.Boolean boolean66 = strComparableSchema52.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable67 = strComparableSchema52.getDefault();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema52.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema70 = schema48.addProperties("no description", schema69);
        io.swagger.oas.models.media.XML xML71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema69.xml(xML71);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(strComparable67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test08337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08337");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        java.lang.String str11 = schema2.getName();
        io.swagger.oas.models.media.Schema schema13 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str14 = schema13.toString();
        java.lang.String str15 = schema13.getDescription();
        java.lang.Boolean boolean16 = schema13.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema18 = schema13.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str14, "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test08338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08338");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.xml(xML52);
        io.swagger.oas.models.media.Schema schema55 = schema51.name("");
        io.swagger.oas.models.media.Schema schema57 = schema51.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML58 = schema51.getXml();
        java.math.BigDecimal bigDecimal59 = null;
        schema51.setMultipleOf(bigDecimal59);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(xML58);
    }

    @Test
    public void test08339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08339");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = schema8.title("hi!");
        schema8.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema8.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema8.pattern("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.maximum(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.multipleOf(bigDecimal19);
        java.lang.Integer int21 = schema20.getMinItems();
        java.lang.Boolean boolean22 = schema20.getReadOnly();
        java.lang.String str23 = schema20.get$ref();
        java.math.BigDecimal bigDecimal24 = null;
        schema20.setMaximum(bigDecimal24);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test08340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08340");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema21 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema23 = schema21.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema21.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Object obj26 = schema21.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test08341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08341");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.annotations.servers.Server server10 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray11 = new io.swagger.oas.annotations.servers.Server[] { server10 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray11);
        boolean boolean13 = serverListOptional12.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.String str20 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.getNot();
        boolean boolean22 = serverListOptional12.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema21.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema2.not(schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema32.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.externalDocs(externalDocumentation35);
        java.lang.String str37 = schema36.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        java.lang.String[] strArray41 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        strComparableSchema38.setRequired((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema45.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema50 = schema48.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema38.not(schema50);
        io.swagger.oas.models.media.Schema schema52 = schema36.example((java.lang.Object) strComparableSchema38);
        io.swagger.oas.models.media.Schema schema53 = schema25.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema38);
        java.lang.Boolean boolean54 = schema53.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertNotNull(serverListOptional12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean54);
    }

    @Test
    public void test08342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08342");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.externalDocs(externalDocumentation9);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.multipleOf(bigDecimal11);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test08343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08343");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema51.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test08344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08344");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String[] strArray3 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList4);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = null;
        strComparableSchema11.setExtensions(strMap15);
        strComparableSchema11.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema11.minimum(bigDecimal19);
        schema20.set$ref("no description");
        java.lang.Boolean boolean23 = schema20.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList25 = strComparableSchema24.getRequired();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema24.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal39 = strComparableSchema28.getMultipleOf();
        java.lang.String str40 = strComparableSchema28.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        strComparableSchema28.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.Integer int49 = strComparableSchema28.getMaxLength();
        strComparableSchema28.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema24.setDescription("");
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema24.multipleOf(bigDecimal55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = strComparableSchema57.getExternalDocs();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema57.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str63 = strComparableSchema62.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema64.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema62.not((io.swagger.oas.models.media.Schema) strComparableSchema64);
        strComparableSchema62.setDescription("hi!");
        strComparableSchema62.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema62.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap75 = strComparableSchema62.getProperties();
        io.swagger.oas.models.media.Schema schema76 = schema60.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema62);
        java.lang.Boolean boolean77 = schema76.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator78 = null;
        schema76.setDiscriminator(discriminator78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = schema76.getProperties();
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema24.properties(strMap80);
        io.swagger.oas.models.media.Schema schema82 = schema20.properties(strMap80);
        io.swagger.oas.models.media.Schema schema83 = schema8.properties(strMap80);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema83.externalDocs(externalDocumentation84);
        java.lang.Boolean boolean86 = schema83.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(externalDocumentation58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(boolean86);
    }

    @Test
    public void test08345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08345");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.lang.Comparable<java.lang.String> strComparable41 = strComparableSchema24.getDefault();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema24.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema43.pattern("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strComparable41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test08346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08346");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        java.lang.String str15 = serverListOptional14.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray16 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray16);
        boolean boolean18 = serverListOptional17.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList19 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList20 = serverListOptional17.orElse(serverList19);
        io.swagger.oas.models.servers.Server[] serverArray21 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList22 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList22, serverArray21);
        java.util.List<io.swagger.oas.models.servers.Server> serverList24 = serverListOptional17.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        boolean boolean28 = serverListOptional1.equals((java.lang.Object) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema29.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = strComparableSchema29.getProperties();
        java.lang.Boolean boolean43 = strComparableSchema29.getReadOnly();
        strComparableSchema29.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema29.getAdditionalProperties();
        boolean boolean47 = serverListOptional1.equals((java.lang.Object) strComparableSchema29);
        strComparableSchema29.setMinLength((java.lang.Integer) 1);
        java.lang.Boolean boolean50 = strComparableSchema29.getDeprecated();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Optional.empty" + "'", str15, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray16);
        org.junit.Assert.assertNotNull(serverListOptional17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serverList20);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(serverList24);
        org.junit.Assert.assertNotNull(serverList25);
        org.junit.Assert.assertNotNull(serverList26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(boolean50);
    }

    @Test
    public void test08347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08347");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = strComparableSchema2.getMaxItems();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema2.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema13.setMaximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema13.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList25 = strComparableSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema26 = schema12.required(strList25);
        io.swagger.oas.models.media.XML xML27 = null;
        schema12.setXml(xML27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema12.multipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema12.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal37 = schema36.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
    }

    @Test
    public void test08348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08348");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema schema16 = null;
        schema15.setNot(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema15.name(",");
        schema15.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema15.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema24 = schema15.getNot();
        schema15.setUniqueItems((java.lang.Boolean) false);
        schema15.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = schema15.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation29);
    }

    @Test
    public void test08349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08349");
        io.swagger.jaxrs2.OperationParser operationParser0 = new io.swagger.jaxrs2.OperationParser();
        java.util.Optional<io.swagger.jaxrs2.OperationParser> operationParserOptional1 = java.util.Optional.of(operationParser0);
        java.util.Optional<io.swagger.jaxrs2.OperationParser> operationParserOptional2 = java.util.Optional.ofNullable(operationParser0);
        java.util.Optional<io.swagger.jaxrs2.OperationParser> operationParserOptional3 = java.util.Optional.of(operationParser0);
        java.util.Optional<io.swagger.jaxrs2.OperationParser> operationParserOptional4 = java.util.Optional.of(operationParser0);
        org.junit.Assert.assertNotNull(operationParserOptional1);
        org.junit.Assert.assertNotNull(operationParserOptional2);
        org.junit.Assert.assertNotNull(operationParserOptional3);
        org.junit.Assert.assertNotNull(operationParserOptional4);
    }

    @Test
    public void test08350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08350");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        schema9.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema35 = schema9.name("Optional.empty");
        schema9.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = schema9.getExternalDocs();
        io.swagger.oas.models.media.Schema schema40 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(externalDocumentation38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test08351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08351");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        strComparableSchema54.setExtensions(strMap58);
        strComparableSchema54.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int62 = strComparableSchema54.getMaxItems();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema54.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        strComparableSchema65.setDescription("hi!");
        java.math.BigDecimal bigDecimal73 = null;
        strComparableSchema65.setMaximum(bigDecimal73);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema65.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList77 = strComparableSchema65.getRequired();
        io.swagger.oas.models.media.Schema schema78 = schema64.required(strList77);
        schema78.setDeprecated((java.lang.Boolean) false);
        schema51.setNot(schema78);
        java.lang.Integer int82 = schema51.getMaxLength();
        java.lang.String str83 = schema51.getDescription();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test08352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08352");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.format("*/*");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema19.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema19.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema19.maximum(bigDecimal26);
        schema19.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test08353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08353");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.lang.String str29 = strComparableSchema23.get$ref();
        java.lang.String[] strArray34 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional37 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema23.required((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = strComparableSchema39.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable41 = strComparableSchema39.getDefault();
        java.math.BigDecimal bigDecimal42 = null;
        strComparableSchema39.setMaximum(bigDecimal42);
        strComparableSchema23.setNot((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema39.getNot();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList59 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean60 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean61 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean62 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean63 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        boolean boolean64 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "#/components/schemas/no description");
        boolean boolean65 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean66 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean67 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean68 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        boolean boolean69 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean70 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean71 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean72 = strComparableList59.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        strComparableSchema39.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList59);
        schema22.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList59);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertNull(strComparable41);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test08354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08354");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        java.lang.String str12 = schema5.getTitle();
        schema5.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test08355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08355");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setMinItems((java.lang.Integer) (-1));
        strComparableSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test08356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08356");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 10);
        java.util.List<java.lang.String> strList9 = schema8.getRequired();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema8.setProperties(strMap10);
        schema8.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema8.minLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema18 = schema15.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema18.setMinItems((java.lang.Integer) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
    }

    @Test
    public void test08357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08357");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema24.pattern(",");
        schema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setMinItems((java.lang.Integer) 1);
        java.lang.String str49 = strComparableSchema46.toString();
        io.swagger.oas.models.media.Schema schema50 = schema42.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.lang.Boolean boolean51 = schema50.getDeprecated();
        io.swagger.oas.models.media.Schema schema53 = schema50.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str49, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test08358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08358");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        java.lang.String str15 = schema2.getType();
        io.swagger.oas.models.media.Schema schema17 = schema2.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal18 = null;
        schema2.setMaximum(bigDecimal18);
        schema2.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test08359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08359");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.lang.String[] strArray41 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        strComparableSchema24.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.Integer int45 = strComparableSchema24.getMaxLength();
        strComparableSchema24.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema24.getNot();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema24.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean51 = strComparableSchema24.getDeprecated();
        strComparableSchema24.set$ref("hi!");
        java.math.BigDecimal bigDecimal54 = null;
        strComparableSchema24.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str57 = strComparableSchema56.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.not((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema56.setDescription("hi!");
        strComparableSchema56.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema56.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = strComparableSchema56.getProperties();
        java.lang.Boolean boolean70 = strComparableSchema56.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable71 = strComparableSchema56.getDefault();
        java.lang.String str72 = strComparableSchema56.getFormat();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = strComparableSchema56.getProperties();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema56.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema75.setTitle("");
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema24.not(schema75);
        java.lang.Boolean boolean79 = strComparableSchema24.getUniqueItems();
        io.swagger.oas.models.media.XML xML80 = null;
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema24.xml(xML80);
        schema81.setPattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema84 = schema23.example((java.lang.Object) "#/components/schemas/no description");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNull(strComparable71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test08360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08360");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int16 = strComparableSchema0.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test08361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08361");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        schema33.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema33.$ref("no description");
        java.lang.Integer int38 = schema37.getMinLength();
        java.lang.Boolean boolean39 = schema37.getExclusiveMinimum();
        java.lang.String str40 = schema37.getType();
        java.lang.Boolean boolean41 = schema37.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean41);
    }

    @Test
    public void test08362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08362");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema37.getNot();
        io.swagger.oas.models.media.Schema schema40 = schema38.type("no description");
        io.swagger.oas.models.media.Schema schema42 = schema38.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 1);
        java.lang.Boolean boolean45 = schema44.getUniqueItems();
        java.util.List<java.lang.String> strList46 = schema44.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + boolean45 + "' != '" + true + "'", boolean45, true);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test08363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08363");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        strComparableSchema0.addExtension("#/components/schemas/", (java.lang.Object) str30);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.externalDocs(externalDocumentation32);
        schema33.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema33.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test08364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08364");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema21 = schema2.format("no description");
        java.lang.Boolean boolean22 = schema21.getUniqueItems();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema21.maximum(bigDecimal23);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test08365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08365");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.addRequiredItem("*/*");
        java.lang.Boolean boolean23 = strComparableSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.minProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = schema25.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
    }

    @Test
    public void test08366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08366");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        strComparableSchema6.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema6.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema31.setExternalDocs(externalDocumentation32);
        strComparableSchema2.setDefault((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema35.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        strComparableSchema35.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema35.title("Optional.empty");
        java.lang.Integer int51 = strComparableSchema35.getMinProperties();
        io.swagger.oas.models.media.Schema schema52 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema schema54 = schema31.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test08367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08367");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        strComparableSchema0.setProperties(strMap5);
        strComparableSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test08368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08368");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.properties(strMap8);
        java.lang.Boolean boolean10 = schema9.getNullable();
        schema9.setMaxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal13 = null;
        schema9.setMultipleOf(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = schema9.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.writeOnly((java.lang.Boolean) false);
        schema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema18.title("#/components/schemas/");
        schema22.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema22.getMinimum();
        java.lang.String str26 = schema22.getTitle();
        io.swagger.oas.models.media.Schema schema28 = schema22.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        java.math.BigDecimal bigDecimal37 = null;
        strComparableSchema29.setMaximum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal50 = strComparableSchema39.getMultipleOf();
        java.lang.String str51 = strComparableSchema39.get$ref();
        java.lang.String[] strArray56 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        strComparableSchema39.setRequired((java.util.List<java.lang.String>) strList57);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema29.required((java.util.List<java.lang.String>) strList57);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema29.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str64 = strComparableSchema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        java.lang.String str69 = strComparableSchema63.get$ref();
        java.lang.String[] strArray74 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional77 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema63.required((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema79 = schema62.required((java.util.List<java.lang.String>) strList75);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional80 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList75);
        java.util.Optional<java.util.Collection<java.lang.String>> strCollectionOptional81 = java.util.Optional.ofNullable((java.util.Collection<java.lang.String>) strList75);
        schema28.setRequired((java.util.List<java.lang.String>) strList75);
        java.util.Optional<java.util.AbstractList<java.lang.String>> strListOptional83 = java.util.Optional.ofNullable((java.util.AbstractList<java.lang.String>) strList75);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional84 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema85 = schema9.required((java.util.List<java.lang.String>) strList75);
        boolean boolean86 = serverListOptional6.equals((java.lang.Object) strList75);
        java.util.Optional<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalOptional87 = java.util.Optional.ofNullable(serverListOptional6);
        boolean boolean88 = serverListOptional6.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList89 = serverListOptional6.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "#/components/schemas/" + "'", str26, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strCollectionOptional80);
        org.junit.Assert.assertNotNull(strCollectionOptional81);
        org.junit.Assert.assertNotNull(strListOptional83);
        org.junit.Assert.assertNotNull(strCollectionOptional84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(serverListOptionalOptional87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test08369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08369");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        strComparableSchema0.setProperties(strMap3);
        io.swagger.oas.annotations.servers.Server server5 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] { server5 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        boolean boolean8 = serverListOptional7.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.lang.String str15 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema9.getNot();
        boolean boolean17 = serverListOptional7.equals((java.lang.Object) schema16);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.properties(strMap18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema20.setMaximum(bigDecimal28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal41 = strComparableSchema30.getMultipleOf();
        java.lang.String str42 = strComparableSchema30.get$ref();
        java.lang.String[] strArray47 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        strComparableSchema30.setRequired((java.util.List<java.lang.String>) strList48);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema20.required((java.util.List<java.lang.String>) strList48);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema20.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        java.lang.String str60 = strComparableSchema54.get$ref();
        java.lang.String[] strArray65 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional68 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema54.required((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema70 = schema53.required((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema71 = schema16.required((java.util.List<java.lang.String>) strList66);
        java.lang.Boolean boolean72 = schema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema74 = schema16.readOnly((java.lang.Boolean) true);
        java.lang.String str75 = schema16.getPattern();
        strComparableSchema0.setAdditionalProperties(schema16);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str75);
    }

    @Test
    public void test08370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08370");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.lang.Integer int8 = strComparableSchema0.getMinItems();
        strComparableSchema0.set$ref(",");
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.type("#/components/schemas/");
        strComparableSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = strComparableSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test08371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08371");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.Schema schema12 = schema2.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.properties(strMap14);
        java.lang.Boolean boolean16 = schema15.getNullable();
        java.lang.String str17 = schema15.getType();
        schema15.setTitle("#/components/schemas/");
        schema15.setFormat("#/components/schemas/");
        schema15.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema15);
        io.swagger.oas.models.media.Schema schema26 = schema24.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema24.writeOnly((java.lang.Boolean) true);
        java.lang.Integer int29 = schema24.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema24.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema24.name("*/*");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test08372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08372");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema0.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.properties(strMap13);
        java.lang.Boolean boolean15 = schema14.getNullable();
        java.lang.String str16 = schema14.getType();
        schema14.setTitle("#/components/schemas/");
        java.lang.Boolean boolean19 = schema14.getUniqueItems();
        io.swagger.oas.models.media.Schema schema21 = schema14.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.xml(xML22);
        schema21.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = strComparableSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test08373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08373");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.nullable((java.lang.Boolean) true);
        schema26.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        schema26.set$ref(",");
        io.swagger.oas.models.media.Schema schema32 = schema26.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema26.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema34.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test08374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08374");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test08375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08375");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        java.lang.Integer int28 = schema25.getMinLength();
        io.swagger.oas.models.media.Schema schema30 = schema25.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test08376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08376");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = strComparableSchema2.getMaxItems();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema2.addRequiredItem("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        strComparableSchema2.setExternalDocs(externalDocumentation13);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test08377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08377");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.description("hi!");
        java.lang.Boolean boolean17 = strComparableSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = strComparableSchema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean22 = strComparableSchema18.getReadOnly();
        strComparableSchema0.setExample((java.lang.Object) boolean22);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.lang.Boolean boolean25 = schema24.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test08378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08378");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.xml(xML52);
        schema53.setNullable((java.lang.Boolean) false);
        schema53.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema59 = schema53.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test08379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08379");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema44.minProperties((java.lang.Integer) 100);
        java.lang.Integer int47 = schema44.getMinItems();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema44.multipleOf(bigDecimal48);
        schema44.setExclusiveMinimum((java.lang.Boolean) false);
        schema44.setName("hi!");
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema44.getExtensions();
        java.lang.String str55 = schema44.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema44.discriminator(discriminator56);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test08380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08380");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.title("");
        java.lang.Integer int12 = schema11.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = strComparableSchema13.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema13.getDefault();
        java.lang.Integer int16 = strComparableSchema13.getMinProperties();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.minItems((java.lang.Integer) 0);
        boolean boolean19 = schema11.equals((java.lang.Object) 0);
        io.swagger.oas.annotations.servers.Server server20 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray21 = new io.swagger.oas.annotations.servers.Server[] { server20 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        boolean boolean23 = serverListOptional22.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema24.getNot();
        boolean boolean32 = serverListOptional22.equals((java.lang.Object) schema31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema31.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema31.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal37 = schema31.getMaximum();
        schema11.setNot(schema31);
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema31.xml(xML39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = schema31.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertNotNull(serverListOptional22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(externalDocumentation41);
    }

    @Test
    public void test08381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08381");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.annotations.servers.Server server10 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray11 = new io.swagger.oas.annotations.servers.Server[] { server10 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray11);
        boolean boolean13 = serverListOptional12.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.String str20 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.getNot();
        boolean boolean22 = serverListOptional12.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema21.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema2.not(schema24);
        schema2.setName("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema2.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema2.uniqueItems((java.lang.Boolean) false);
        schema33.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj36 = schema33.getExample();
        schema33.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertNotNull(serverListOptional12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(obj36);
    }

    @Test
    public void test08382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08382");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        strComparableSchema13.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema13.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        schema38.setExternalDocs(externalDocumentation39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.properties(strMap41);
        boolean boolean43 = serverListOptional2.equals((java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray52 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional53 = io.swagger.jaxrs2.OperationParser.getTags(strArray52);
        schema46.setExample((java.lang.Object) tagSetOptional53);
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema46.xml(xML55);
        java.lang.String str57 = schema56.getTitle();
        io.swagger.oas.models.media.Schema schema59 = schema56.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean60 = serverListOptional2.equals((java.lang.Object) schema56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        strComparableSchema61.setDescription("hi!");
        strComparableSchema61.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal72 = strComparableSchema61.getMultipleOf();
        java.lang.String str73 = strComparableSchema61.get$ref();
        java.lang.String[] strArray78 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        strComparableSchema61.setRequired((java.util.List<java.lang.String>) strList79);
        java.lang.Integer int82 = strComparableSchema61.getMaxLength();
        strComparableSchema61.setName("#/components/schemas/");
        strComparableSchema61.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean87 = strComparableSchema61.getDeprecated();
        boolean boolean88 = serverListOptional2.equals((java.lang.Object) strComparableSchema61);
        boolean boolean89 = serverListOptional2.isPresent();
        java.lang.String str90 = serverListOptional2.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList91 = serverListOptional2.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(tagSetOptional53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(bigDecimal72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNull(boolean87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Optional.empty" + "'", str90, "Optional.empty");
    }

    @Test
    public void test08383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08383");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema44.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setNullable((java.lang.Boolean) false);
        java.lang.String str60 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema47.name("");
        java.math.BigDecimal bigDecimal63 = null;
        strComparableSchema47.setMinimum(bigDecimal63);
        java.lang.Boolean boolean65 = strComparableSchema47.getReadOnly();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema47.description("*/*");
        boolean boolean68 = schema46.equals((java.lang.Object) strComparableSchema47);
        java.lang.Object obj69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema46.example(obj69);
        io.swagger.oas.models.media.Schema schema72 = schema46.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = schema46.exclusiveMinimum((java.lang.Boolean) false);
        schema74.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test08384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08384");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.type("no description");
        java.math.BigDecimal bigDecimal12 = schema11.getMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        java.lang.Object obj15 = null;
        boolean boolean16 = schema11.equals(obj15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema11.discriminator(discriminator17);
        java.lang.String str19 = schema18.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "no description" + "'", str19, "no description");
    }

    @Test
    public void test08385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08385");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema2.properties(strMap26);
        strComparableSchema2.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Comparable<java.lang.String> strComparable30 = strComparableSchema2.getDefault();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema2.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Class<?> wildcardClass33 = strComparableSchema2.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strComparable30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test08386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08386");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        strComparableSchema0.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = strComparableSchema0.getMaximum();
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema0.setMinimum(bigDecimal21);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test08387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08387");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.Integer int25 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str28 = schema27.get$ref();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str28, "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test08388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08388");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal52 = strComparableSchema41.getMultipleOf();
        java.lang.String str53 = strComparableSchema41.get$ref();
        strComparableSchema41.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema41.description("hi!");
        java.lang.String str58 = schema57.getPattern();
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema57.minimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema61 = schema40.not(schema60);
        schema40.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean64 = schema40.getWriteOnly();
        io.swagger.oas.models.media.Schema schema66 = schema40.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = schema66.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int69 = schema66.getMinLength();
        io.swagger.oas.models.media.Schema schema71 = schema66.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertEquals("'" + boolean64 + "' != '" + true + "'", boolean64, true);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test08389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08389");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema14.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema14.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        strComparableSchema19.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema19.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = strComparableSchema19.getProperties();
        java.lang.Boolean boolean33 = strComparableSchema19.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable34 = strComparableSchema19.getDefault();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema19.addRequiredItem("");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema19.maximum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema38.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema18.example((java.lang.Object) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        schema41.setExternalDocs(externalDocumentation42);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(strComparable34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test08390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08390");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        java.lang.Boolean boolean23 = strComparableSchema8.getDeprecated();
        java.lang.Boolean boolean24 = strComparableSchema8.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema8.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean27 = schema26.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema29 = schema26.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test08391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08391");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.List<java.lang.String> strList20 = strComparableSchema5.getRequired();
        java.math.BigDecimal bigDecimal21 = strComparableSchema5.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal34 = strComparableSchema23.getMultipleOf();
        java.lang.String str35 = strComparableSchema23.get$ref();
        java.lang.String[] strArray40 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        strComparableSchema23.setRequired((java.util.List<java.lang.String>) strList41);
        java.lang.Integer int44 = strComparableSchema23.getMaxLength();
        strComparableSchema23.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema23.$ref("#/components/schemas/");
        strComparableSchema23.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal51 = null;
        strComparableSchema23.setMinimum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema23.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema23.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.multipleOf(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema56.maxItems((java.lang.Integer) (-1));
        strComparableSchema5.addExtension("Optional.empty", (java.lang.Object) schema56);
        strComparableSchema5.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema5.addEnumItemObject((java.lang.Comparable<java.lang.String>) "*/*");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test08392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08392");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = strComparableSchema8.getExternalDocs();
        io.swagger.oas.models.media.XML xML24 = strComparableSchema8.getXml();
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema8.discriminator(discriminator27);
        strComparableSchema8.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNull(xML24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test08393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08393");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema13.maximum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.lang.String[] strArray34 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        strComparableSchema17.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = strComparableSchema17.getMaxLength();
        java.lang.Integer int39 = strComparableSchema17.getMaxProperties();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema17.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema17.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = schema43.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str59 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema58.setDescription("hi!");
        strComparableSchema58.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        strComparableSchema48.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj73 = strComparableSchema48.getExample();
        io.swagger.oas.models.media.Schema schema74 = schema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = schema74.getExtensions();
        schema16.setExtensions(strMap75);
        io.swagger.oas.models.media.Schema schema78 = schema16.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML79 = schema16.getXml();
        java.lang.String str80 = schema16.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(xML79);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test08394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08394");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.String str25 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.Integer int47 = strComparableSchema26.getMaxLength();
        java.lang.Integer int48 = strComparableSchema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema26.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema51.setDescription("hi!");
        strComparableSchema51.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal62 = strComparableSchema51.getMultipleOf();
        java.lang.String str63 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema schema64 = schema50.example((java.lang.Object) strComparableSchema51);
        java.lang.Integer int65 = schema64.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        java.lang.String str72 = strComparableSchema66.get$ref();
        java.lang.String[] strArray77 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional80 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema66.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema82 = schema64.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema0.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema85 = schema83.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema87 = schema83.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema89 = schema83.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str25, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test08395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08395");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maximum(bigDecimal18);
        io.swagger.oas.annotations.servers.Server[] serverArray20 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional22 = java.util.Optional.ofNullable(serverArray20);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        io.swagger.oas.annotations.servers.Server server25 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray26 = new io.swagger.oas.annotations.servers.Server[] { server25 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional27 = io.swagger.jaxrs2.OperationParser.getServers(serverArray26);
        boolean boolean28 = serverListOptional27.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.lang.String str35 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema29.getNot();
        boolean boolean37 = serverListOptional27.equals((java.lang.Object) schema36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema36.multipleOf(bigDecimal38);
        boolean boolean40 = serverListOptional24.equals((java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema schema41 = schema19.example((java.lang.Object) serverListOptional24);
        boolean boolean42 = serverListOptional24.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList43 = serverListOptional24.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(serverArray20);
        org.junit.Assert.assertNotNull(serverListOptional21);
        org.junit.Assert.assertNotNull(serverArrayOptional22);
        org.junit.Assert.assertNotNull(serverListOptional23);
        org.junit.Assert.assertNotNull(serverListOptional24);
        org.junit.Assert.assertNotNull(serverArray26);
        org.junit.Assert.assertNotNull(serverListOptional27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test08396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08396");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional4 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverArrayOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
    }

    @Test
    public void test08397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08397");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        schema13.setFormat("Optional.empty");
        schema13.setType("hi!");
        java.util.List<java.lang.String> strList19 = schema13.getRequired();
        io.swagger.oas.models.media.Schema schema21 = schema13.minLength((java.lang.Integer) 1);
        schema13.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test08398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08398");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        schema9.setTitle(",");
        java.lang.Boolean boolean12 = schema9.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema16 = schema9.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal38 = strComparableSchema27.getMultipleOf();
        java.lang.String str39 = strComparableSchema27.get$ref();
        java.lang.String[] strArray44 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        strComparableSchema27.setRequired((java.util.List<java.lang.String>) strList45);
        schema26.setNot((io.swagger.oas.models.media.Schema) strComparableSchema27);
        java.lang.Integer int49 = strComparableSchema27.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema27.properties(strMap50);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        strComparableSchema27.setExternalDocs(externalDocumentation52);
        java.lang.Object obj54 = strComparableSchema27.getExample();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema27.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema58 = schema56.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = schema58.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        java.lang.String[] strArray64 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        strComparableSchema61.setRequired((java.util.List<java.lang.String>) strList65);
        schema58.setRequired((java.util.List<java.lang.String>) strList65);
        schema16.setRequired((java.util.List<java.lang.String>) strList65);
        java.lang.Class<?> wildcardClass70 = schema16.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(obj54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test08399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08399");
        java.util.Optional<java.lang.String> strOptional1 = java.util.Optional.of("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test08400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08400");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.setMinLength((java.lang.Integer) 100);
        java.lang.String str30 = strComparableSchema20.getDescription();
        schema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.lang.String str32 = schema17.getName();
        java.lang.String str33 = schema17.getTitle();
        io.swagger.oas.models.media.XML xML34 = schema17.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(xML34);
    }

    @Test
    public void test08401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08401");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.lang.String str13 = serverListOptional2.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray14 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray14);
        boolean boolean16 = serverListOptional15.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList18 = serverListOptional15.orElse(serverList17);
        io.swagger.oas.annotations.servers.Server[] serverArray19 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray19);
        java.lang.String str21 = serverListOptional20.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray22 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray22);
        boolean boolean24 = serverListOptional23.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional23.orElse(serverList25);
        io.swagger.oas.models.servers.Server[] serverArray27 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList28 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList28, serverArray27);
        java.util.List<io.swagger.oas.models.servers.Server> serverList30 = serverListOptional23.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList28);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional20.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList28);
        io.swagger.oas.annotations.servers.Server[] serverArray32 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional33 = io.swagger.jaxrs2.OperationParser.getServers(serverArray32);
        java.lang.String str34 = serverListOptional33.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray35 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional36 = io.swagger.jaxrs2.OperationParser.getServers(serverArray35);
        boolean boolean37 = serverListOptional36.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList38 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional36.orElse(serverList38);
        io.swagger.oas.models.servers.Server[] serverArray40 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList41 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList41, serverArray40);
        java.util.List<io.swagger.oas.models.servers.Server> serverList43 = serverListOptional36.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList41);
        java.util.List<io.swagger.oas.models.servers.Server> serverList44 = serverListOptional33.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList41);
        java.util.List<io.swagger.oas.models.servers.Server> serverList45 = serverListOptional20.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList41);
        java.util.List<io.swagger.oas.models.servers.Server> serverList46 = serverListOptional15.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList41);
        java.util.List<io.swagger.oas.models.servers.Server> serverList47 = serverListOptional2.orElse(serverList46);
        boolean boolean48 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.writeOnly((java.lang.Boolean) false);
        schema51.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema51.title("#/components/schemas/");
        schema55.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.xml(xML58);
        java.lang.Object obj60 = schema55.getExample();
        io.swagger.oas.models.media.Schema schema62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema55.addProperties("", schema62);
        io.swagger.oas.models.media.Schema schema65 = schema55.readOnly((java.lang.Boolean) true);
        boolean boolean66 = serverListOptional2.equals((java.lang.Object) schema65);
        java.lang.String str67 = serverListOptional2.toString();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Optional.empty" + "'", str13, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertNotNull(serverListOptional15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(serverList18);
        org.junit.Assert.assertNotNull(serverArray19);
        org.junit.Assert.assertNotNull(serverListOptional20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Optional.empty" + "'", str21, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray22);
        org.junit.Assert.assertNotNull(serverListOptional23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(serverList26);
        org.junit.Assert.assertNotNull(serverArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(serverList30);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNotNull(serverArray32);
        org.junit.Assert.assertNotNull(serverListOptional33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Optional.empty" + "'", str34, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray35);
        org.junit.Assert.assertNotNull(serverListOptional36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(serverList39);
        org.junit.Assert.assertNotNull(serverArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(serverList43);
        org.junit.Assert.assertNotNull(serverList44);
        org.junit.Assert.assertNotNull(serverList45);
        org.junit.Assert.assertNotNull(serverList46);
        org.junit.Assert.assertNotNull(serverList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(obj60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Optional.empty" + "'", str67, "Optional.empty");
    }

    @Test
    public void test08402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08402");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema3.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = schema3.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML8 = null;
        schema7.setXml(xML8);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test08403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08403");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        java.lang.Integer int35 = strComparableSchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema schema51 = schema37.example((java.lang.Object) strComparableSchema38);
        boolean boolean52 = strComparableSchema0.equals((java.lang.Object) schema37);
        strComparableSchema0.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML55 = null;
        strComparableSchema0.setXml(xML55);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        schema58.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test08404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08404");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean13 = strComparableSchema7.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strComparableSchema7.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema16 = schema6.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.uniqueItems((java.lang.Boolean) false);
        schema22.setDescription("");
        schema22.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        schema22.setExternalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema22.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = strComparableSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = schema22.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema7.additionalProperties(schema22);
        schema34.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema38 = schema34.minLength((java.lang.Integer) (-1));
        java.lang.Integer int39 = schema34.getMaxLength();
        io.swagger.oas.models.media.Schema schema41 = schema34.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema34.setPattern("#/components/schemas/no description");
        java.lang.Object obj44 = schema34.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test08405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08405");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML41 = schema40.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema49.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema45.externalDocs(externalDocumentation68);
        java.lang.Object obj70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.example(obj70);
        java.lang.Object obj72 = schema69.getExample();
        io.swagger.oas.models.media.Schema schema74 = schema69.deprecated((java.lang.Boolean) true);
        schema40.addExtension("#/components/schemas/", (java.lang.Object) schema74);
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema74.minimum(bigDecimal76);
        io.swagger.oas.models.media.Schema schema78 = schema77.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str80 = strComparableSchema79.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema81.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema79.not((io.swagger.oas.models.media.Schema) strComparableSchema81);
        io.swagger.oas.models.media.XML xML85 = null;
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema79.xml(xML85);
        java.lang.String str87 = strComparableSchema79.getFormat();
        strComparableSchema79.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema79.type("");
        io.swagger.oas.models.media.Discriminator discriminator92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema91.discriminator(discriminator92);
        io.swagger.oas.models.media.Schema schema95 = schema91.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema77.setAdditionalProperties(schema95);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test08406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08406");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema19.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema23 = schema19.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList24 = schema23.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema25.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        strComparableSchema25.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema25.maxProperties((java.lang.Integer) 1);
        java.lang.String str43 = strComparableSchema25.getType();
        java.lang.Boolean boolean44 = strComparableSchema25.getExclusiveMinimum();
        strComparableSchema25.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList48 = strComparableSchema47.getRequired();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema47.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema47.setExclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema47.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.util.List<java.lang.String> strList56 = schema55.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.properties(strMap58);
        java.lang.Boolean boolean60 = schema59.getNullable();
        java.lang.String str61 = schema59.getType();
        schema59.setTitle("#/components/schemas/");
        schema59.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = schema59.addRequiredItem("*/*");
        java.lang.String str68 = schema59.getName();
        io.swagger.oas.models.media.Schema schema70 = schema59.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList71 = schema59.getRequired();
        io.swagger.oas.models.media.Schema schema72 = schema55.required(strList71);
        schema23.setRequired(strList71);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strComparableList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test08407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08407");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.math.BigDecimal bigDecimal33 = null;
        strComparableSchema10.setMaximum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema10.minProperties((java.lang.Integer) 100);
        strComparableSchema10.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test08408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08408");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.Boolean boolean4 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema6 = schema2.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean7 = schema6.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema6.setDiscriminator(discriminator8);
        schema6.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema6.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema6.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test08409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08409");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Integer int3 = schema2.getMaxLength();
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean10 = schema2.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test08410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08410");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        java.lang.Integer int9 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.properties(strMap11);
        java.lang.Boolean boolean13 = schema12.getUniqueItems();
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal16 = null;
        schema12.setMultipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema12.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = strComparableSchema20.getExternalDocs();
        java.lang.Integer int22 = strComparableSchema20.getMinProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema20.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema24.description("");
        java.lang.Integer int27 = schema24.getMaxItems();
        io.swagger.oas.models.media.Schema schema29 = schema24.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal30 = schema29.getMultipleOf();
        schema12.setAdditionalProperties(schema29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        java.math.BigDecimal bigDecimal40 = null;
        strComparableSchema32.setMaximum(bigDecimal40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal53 = strComparableSchema42.getMultipleOf();
        java.lang.String str54 = strComparableSchema42.get$ref();
        java.lang.String[] strArray59 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        strComparableSchema42.setRequired((java.util.List<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema32.required((java.util.List<java.lang.String>) strList60);
        java.lang.Object obj64 = schema63.getExample();
        schema63.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = schema63.writeOnly((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList69 = schema63.getRequired();
        io.swagger.oas.models.media.Schema schema70 = schema12.required(strList69);
        io.swagger.oas.models.media.Schema schema71 = schema6.required(strList69);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test08411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08411");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        strComparableSchema0.setDefault((java.lang.Object) 0.0d);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.maximum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList23 = strComparableSchema22.getRequired();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.Integer int47 = strComparableSchema26.getMaxLength();
        strComparableSchema26.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema51.setDescription("hi!");
        strComparableSchema51.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema51.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        strComparableSchema51.setExternalDocs(externalDocumentation63);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema51.format("");
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema26.additionalProperties(schema66);
        java.lang.Boolean boolean68 = schema67.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = schema67.getExtensions();
        schema21.setExtensions(strMap69);
        java.lang.Integer int71 = schema21.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(int71);
    }

    @Test
    public void test08412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08412");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass4 = serverListOptional3.getClass();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test08413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08413");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.minProperties((java.lang.Integer) 1);
        java.lang.String str31 = strComparableSchema0.getName();
        strComparableSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test08414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08414");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema11.minLength((java.lang.Integer) 10);
        schema11.setMaxProperties((java.lang.Integer) 0);
        schema11.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test08415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08415");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional45 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema2.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList49 = schema48.getEnum();
        java.math.BigDecimal bigDecimal50 = schema48.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str58 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str64 = strComparableSchema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        strComparableSchema63.setDescription("hi!");
        strComparableSchema63.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema57.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema63);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema57.name("hi!");
        strComparableSchema57.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema57.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema48.setNot((io.swagger.oas.models.media.Schema) strComparableSchema57);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = strComparableSchema57.getProperties();
        strComparableSchema57.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strComparableList49);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strMap83);
    }

    @Test
    public void test08416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08416");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal12 = strComparableSchema0.getMultipleOf();
        java.lang.Boolean boolean13 = strComparableSchema0.getNullable();
        java.lang.Comparable<java.lang.String> strComparable14 = strComparableSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema18.setMaximum(bigDecimal26);
        strComparableSchema18.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema18.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal32 = schema31.getMaximum();
        java.math.BigDecimal bigDecimal33 = schema31.getMinimum();
        io.swagger.oas.models.media.Schema schema35 = schema31.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema35.title("hi!");
        io.swagger.oas.models.media.Discriminator discriminator38 = schema35.getDiscriminator();
        java.math.BigDecimal bigDecimal39 = null;
        schema35.setMinimum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema41 = schema17.not(schema35);
        schema35.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(strComparable14);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test08417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08417");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema25.setNullable((java.lang.Boolean) true);
        strComparableSchema25.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int42 = strComparableSchema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema34.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        java.math.BigDecimal bigDecimal53 = null;
        strComparableSchema45.setMaximum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema45.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList57 = strComparableSchema45.getRequired();
        io.swagger.oas.models.media.Schema schema58 = schema44.required(strList57);
        strComparableSchema25.setRequired(strList57);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional60 = java.util.Optional.of(strList57);
        strComparableSchema0.setRequired(strList57);
        java.lang.Boolean boolean62 = strComparableSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strListOptional60);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test08418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08418");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        schema13.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = schema13.maxLength((java.lang.Integer) 100);
        schema13.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        schema13.setMinimum(bigDecimal22);
        java.lang.Integer int24 = schema13.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test08419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08419");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        java.lang.String str15 = schema2.getType();
        java.lang.String str16 = schema2.getName();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema17.title("");
        schema26.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        schema30.setExternalDocs(externalDocumentation31);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList33 = schema30.getEnum();
        schema2.setEnum(strComparableList33);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strComparableList33);
    }

    @Test
    public void test08420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08420");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test08421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08421");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.math.BigDecimal bigDecimal25 = strComparableSchema0.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
    }

    @Test
    public void test08422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08422");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = strComparableSchema15.getExternalDocs();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema20.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = strComparableSchema20.getProperties();
        io.swagger.oas.models.media.Schema schema34 = schema18.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.lang.Boolean boolean35 = schema34.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        schema34.setDiscriminator(discriminator36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema34.getProperties();
        io.swagger.oas.models.media.Schema schema39 = schema13.properties(strMap38);
        java.util.List<java.lang.String> strList40 = schema13.getRequired();
        schema13.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strList40);
    }

    @Test
    public void test08423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08423");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema0.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.exclusiveMinimum((java.lang.Boolean) true);
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema9.maxProperties((java.lang.Integer) 100);
        java.lang.String str16 = schema9.getDescription();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test08424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08424");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema37 = schema33.addRequiredItem("Optional.empty");
        java.lang.String str38 = schema33.getFormat();
        java.lang.String str39 = schema33.getTitle();
        java.lang.String str40 = schema33.getPattern();
        java.lang.Boolean boolean41 = schema33.getNullable();
        io.swagger.oas.models.media.Schema schema43 = schema33.minProperties((java.lang.Integer) 0);
        schema43.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test08425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08425");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema40.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema43 = schema40.getNot();
        java.lang.Boolean boolean44 = schema43.getUniqueItems();
        io.swagger.oas.models.media.Schema schema46 = schema43.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test08426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08426");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        strComparableSchema0.setProperties(strMap3);
        java.lang.Boolean boolean5 = strComparableSchema0.getExclusiveMaximum();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) ",");
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.xml(xML8);
        strComparableSchema0.setDescription("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.maxProperties((java.lang.Integer) 0);
        schema13.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test08427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08427");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        schema46.setExtensions(strMap61);
        java.math.BigDecimal bigDecimal63 = null;
        schema46.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        strComparableSchema65.setDescription("hi!");
        strComparableSchema65.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema65.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        strComparableSchema65.setExternalDocs(externalDocumentation77);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema65.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema81 = schema46.example((java.lang.Object) schema80);
        schema80.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean84 = schema80.getDeprecated();
        java.lang.Boolean boolean85 = schema80.getReadOnly();
        io.swagger.oas.models.media.Schema schema87 = schema80.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema89 = schema80.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema91 = schema89.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema92 = schema91.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + true + "'", boolean84, true);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(schema92);
    }

    @Test
    public void test08428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08428");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        java.math.BigDecimal bigDecimal42 = null;
        strComparableSchema34.setMaximum(bigDecimal42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema44.setDescription("hi!");
        strComparableSchema44.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal55 = strComparableSchema44.getMultipleOf();
        java.lang.String str56 = strComparableSchema44.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        strComparableSchema44.setRequired((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema34.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema34.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean68 = schema67.getDeprecated();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema0.additionalProperties(schema67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema70.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.uniqueItems((java.lang.Boolean) false);
        schema75.setDescription("");
        schema75.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        schema75.setExternalDocs(externalDocumentation80);
        io.swagger.oas.models.media.Schema schema83 = schema75.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema84 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation85 = strComparableSchema84.getExternalDocs();
        io.swagger.oas.models.media.Schema schema86 = schema75.not((io.swagger.oas.models.media.Schema) strComparableSchema84);
        java.math.BigDecimal bigDecimal87 = null;
        schema86.setMultipleOf(bigDecimal87);
        io.swagger.oas.models.media.XML xML89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema86.xml(xML89);
        java.lang.Boolean boolean91 = schema86.getReadOnly();
        io.swagger.oas.models.media.Schema schema92 = strComparableSchema0.additionalProperties(schema86);
        java.lang.Integer int93 = schema92.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(externalDocumentation85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(boolean91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(int93);
    }

    @Test
    public void test08429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08429");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = strComparableSchema2.getMaxItems();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema2.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema13.setMaximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema13.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList25 = strComparableSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema26 = schema12.required(strList25);
        io.swagger.oas.models.media.XML xML27 = null;
        schema12.setXml(xML27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema12.multipleOf(bigDecimal29);
        java.lang.Integer int31 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema33 = schema12.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema12.not(schema34);
        io.swagger.oas.models.media.Schema schema36 = schema12.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
    }

    @Test
    public void test08430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08430");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList48 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean51 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean52 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean53 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean54 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList48);
        java.lang.Boolean boolean57 = schema40.getNullable();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema40.properties(strMap58);
        schema59.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema63 = schema59.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test08431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08431");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = schema8.title("hi!");
        java.util.List<java.lang.String> strList11 = schema8.getRequired();
        io.swagger.oas.annotations.servers.Server server13 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray14 = new io.swagger.oas.annotations.servers.Server[] { server13 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray14);
        boolean boolean16 = serverListOptional15.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.lang.String str23 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema17.getNot();
        boolean boolean25 = serverListOptional15.equals((java.lang.Object) schema24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema24.properties(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        java.math.BigDecimal bigDecimal36 = null;
        strComparableSchema28.setMaximum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        java.lang.String[] strArray55 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        strComparableSchema38.setRequired((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema28.required((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema28.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str63 = strComparableSchema62.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema64.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema62.not((io.swagger.oas.models.media.Schema) strComparableSchema64);
        java.lang.String str68 = strComparableSchema62.get$ref();
        java.lang.String[] strArray73 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional76 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList74);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema62.required((java.util.List<java.lang.String>) strList74);
        io.swagger.oas.models.media.Schema schema78 = schema61.required((java.util.List<java.lang.String>) strList74);
        io.swagger.oas.models.media.Schema schema79 = schema24.required((java.util.List<java.lang.String>) strList74);
        schema79.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = schema79.addRequiredItem("*/*");
        schema8.addExtension("#/components/schemas/", (java.lang.Object) schema83);
        io.swagger.oas.models.media.Schema schema85 = schema8.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertNotNull(serverListOptional15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(schema85);
    }

    @Test
    public void test08432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08432");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema6.getExternalDocs();
        java.lang.Integer int8 = strComparableSchema6.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema6.not(schema13);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema20.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = strComparableSchema20.getProperties();
        java.lang.Integer int34 = strComparableSchema20.getMinItems();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList35 = strComparableSchema20.getEnum();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema20.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema19.not(schema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = strComparableSchema39.getExternalDocs();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema39.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema44.setDescription("hi!");
        strComparableSchema44.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema44.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = strComparableSchema44.getProperties();
        io.swagger.oas.models.media.Schema schema58 = schema42.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema schema59 = schema58.getNot();
        java.math.BigDecimal bigDecimal60 = null;
        schema58.setMaximum(bigDecimal60);
        io.swagger.oas.models.media.XML xML62 = schema58.getXml();
        java.math.BigDecimal bigDecimal63 = schema58.getMinimum();
        io.swagger.oas.models.media.Schema schema65 = schema58.type("");
        io.swagger.oas.models.media.Schema schema66 = schema38.not(schema65);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(strComparableList35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(schema59);
        org.junit.Assert.assertNull(xML62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test08433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08433");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.format("");
        io.swagger.oas.models.media.Schema schema8 = schema4.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean9 = schema4.getReadOnly();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test08434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08434");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.properties(strMap10);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = schema11.getExtensions();
        java.lang.Boolean boolean13 = schema11.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.properties(strMap15);
        strComparableSchema14.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str19 = strComparableSchema14.getFormat();
        io.swagger.oas.models.media.XML xML20 = null;
        strComparableSchema14.setXml(xML20);
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema14.discriminator(discriminator22);
        strComparableSchema14.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str26 = strComparableSchema14.getTitle();
        java.lang.Integer int27 = strComparableSchema14.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema28.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = strComparableSchema28.getProperties();
        java.lang.Boolean boolean42 = strComparableSchema28.getReadOnly();
        java.math.BigDecimal bigDecimal43 = strComparableSchema28.getMinimum();
        strComparableSchema28.setMinLength((java.lang.Integer) 0);
        strComparableSchema28.setType("");
        strComparableSchema14.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        boolean boolean49 = schema11.equals((java.lang.Object) strComparableSchema14);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test08435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08435");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        java.lang.String str8 = strComparableSchema2.getDescription();
        strComparableSchema2.setFormat("#/components/schemas/");
        java.lang.String str11 = strComparableSchema2.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema13.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test08436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08436");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        java.lang.String str15 = serverListOptional14.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray16 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray16);
        boolean boolean18 = serverListOptional17.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList19 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList20 = serverListOptional17.orElse(serverList19);
        io.swagger.oas.models.servers.Server[] serverArray21 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList22 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList22, serverArray21);
        java.util.List<io.swagger.oas.models.servers.Server> serverList24 = serverListOptional17.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        io.swagger.oas.annotations.servers.Server[] serverArray26 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional27 = io.swagger.jaxrs2.OperationParser.getServers(serverArray26);
        boolean boolean28 = serverListOptional27.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList29 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList30 = serverListOptional27.orElse(serverList29);
        io.swagger.oas.models.servers.Server[] serverArray31 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList32 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList32, serverArray31);
        java.util.List<io.swagger.oas.models.servers.Server> serverList34 = serverListOptional27.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList32);
        java.util.List<io.swagger.oas.models.servers.Server> serverList35 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList32);
        boolean boolean36 = serverListOptional1.equals((java.lang.Object) serverListOptional14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema37.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema45.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator58 = strComparableSchema45.getDiscriminator();
        strComparableSchema37.addExtension("Optional.empty", (java.lang.Object) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema37.uniqueItems((java.lang.Boolean) true);
        boolean boolean62 = serverListOptional14.equals((java.lang.Object) strComparableSchema37);
        java.lang.String str63 = serverListOptional14.toString();
        java.lang.String str64 = serverListOptional14.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Optional.empty" + "'", str15, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray16);
        org.junit.Assert.assertNotNull(serverListOptional17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serverList20);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(serverList24);
        org.junit.Assert.assertNotNull(serverList25);
        org.junit.Assert.assertNotNull(serverArray26);
        org.junit.Assert.assertNotNull(serverListOptional27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(serverList30);
        org.junit.Assert.assertNotNull(serverArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(serverList34);
        org.junit.Assert.assertNotNull(serverList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Optional.empty" + "'", str63, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Optional.empty" + "'", str64, "Optional.empty");
    }

    @Test
    public void test08437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08437");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = schema8.title("hi!");
        schema8.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema8.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema8.pattern("");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test08438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08438");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema0.setMinimum(bigDecimal25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        strComparableSchema0.setProperties(strMap27);
        java.lang.Integer int29 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test08439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08439");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema4.description("");
        java.lang.String str7 = schema6.getType();
        io.swagger.oas.models.media.Schema schema9 = schema6.addRequiredItem("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema11 = schema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test08440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08440");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        strComparableSchema0.setProperties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.properties(strMap5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = schema6.getProperties();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.maximum(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
    }

    @Test
    public void test08441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08441");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.Schema schema12 = schema2.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema2.writeOnly((java.lang.Boolean) true);
        schema14.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = schema14.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = schema14.getExternalDocs();
        schema14.setType("hi!");
        java.lang.String str21 = schema14.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema25.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.maximum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema38.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = schema40.title("hi!");
        schema40.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema25.addProperties(",", schema40);
        java.lang.Integer int46 = schema45.getMaxItems();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema45.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = schema48.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema50.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema50.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema50.xml(xML55);
        java.lang.Boolean boolean57 = schema56.getDeprecated();
        java.lang.Object obj58 = schema56.getExample();
        schema14.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema56);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + true + "'", boolean17, true);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + boolean57 + "' != '" + true + "'", boolean57, true);
        org.junit.Assert.assertNull(obj58);
    }

    @Test
    public void test08442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08442");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        java.math.BigDecimal bigDecimal21 = null;
        schema19.setMinimum(bigDecimal21);
        schema19.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.properties(strMap26);
        java.lang.Boolean boolean28 = schema27.getUniqueItems();
        schema27.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = null;
        schema27.setMultipleOf(bigDecimal31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema27.externalDocs(externalDocumentation33);
        io.swagger.oas.annotations.servers.Server server35 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray36 = new io.swagger.oas.annotations.servers.Server[] { server35 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional37 = io.swagger.jaxrs2.OperationParser.getServers(serverArray36);
        boolean boolean38 = serverListOptional37.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.lang.String str45 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema39.getNot();
        boolean boolean47 = serverListOptional37.equals((java.lang.Object) schema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema46.multipleOf(bigDecimal48);
        io.swagger.oas.models.media.Schema schema50 = schema27.not(schema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = schema49.getExternalDocs();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList52 = schema49.getEnum();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema49.minimum(bigDecimal53);
        schema54.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = schema54.getProperties();
        io.swagger.oas.models.media.Schema schema58 = schema19.additionalProperties(schema54);
        io.swagger.oas.models.media.Schema schema60 = schema58.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(serverArray36);
        org.junit.Assert.assertNotNull(serverListOptional37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(externalDocumentation51);
        org.junit.Assert.assertNull(strComparableList52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test08443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08443");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML34 = schema33.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
    }

    @Test
    public void test08444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08444");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = strComparableSchema8.getExternalDocs();
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema8.name(",");
        java.lang.String str28 = strComparableSchema8.getTitle();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test08445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08445");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.of((java.lang.CharSequence) "#/components/schemas/no description");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test08446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08446");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.multipleOf(bigDecimal66);
        java.lang.Integer int68 = schema67.getMaxItems();
        strComparableSchema0.setAdditionalProperties(schema67);
        io.swagger.oas.models.media.Schema schema71 = schema67.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str73 = strComparableSchema72.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema74.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema72.not((io.swagger.oas.models.media.Schema) strComparableSchema74);
        strComparableSchema74.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema81.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema85 = schema83.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema83.maximum(bigDecimal86);
        io.swagger.oas.models.media.Schema schema89 = schema87.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema91 = schema89.title("hi!");
        schema89.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema94 = strComparableSchema74.addProperties(",", schema89);
        io.swagger.oas.models.media.Schema schema95 = schema71.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema74);
        io.swagger.oas.models.media.Discriminator discriminator96 = null;
        io.swagger.oas.models.media.Schema schema97 = strComparableSchema74.discriminator(discriminator96);
        io.swagger.oas.models.media.Discriminator discriminator98 = schema97.getDiscriminator();
        io.swagger.oas.models.media.Schema schema99 = schema97.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNull(discriminator98);
        org.junit.Assert.assertNull(schema99);
    }

    @Test
    public void test08447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08447");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        schema30.setExample((java.lang.Object) tagSetOptional37);
        java.lang.Object obj40 = null;
        schema30.addExtension("*/*", obj40);
        java.lang.String str42 = schema30.getDescription();
        java.lang.String str43 = schema30.getType();
        java.lang.String str44 = schema30.getName();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema2.addProperties("*/*", schema30);
        java.math.BigDecimal bigDecimal46 = schema45.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema schema49 = schema45.name(",");
        io.swagger.oas.models.media.Schema schema51 = schema45.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema45.exclusiveMaximum((java.lang.Boolean) false);
        schema45.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test08448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08448");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema2.format("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.discriminator(discriminator12);
        schema13.setDescription(",");
        io.swagger.oas.models.media.Schema schema17 = schema13.readOnly((java.lang.Boolean) true);
        schema17.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str20 = schema17.getName();
        java.lang.Boolean boolean21 = schema17.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + false + "'", boolean21, false);
    }

    @Test
    public void test08449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08449");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        java.util.Optional<java.lang.Cloneable> cloneableOptional25 = java.util.Optional.of((java.lang.Cloneable) apiResponseArray0);
        javax.ws.rs.Produces produces26 = null;
        javax.ws.rs.Produces produces27 = null;
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional29 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces26, produces27, components28);
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional30 = java.util.Optional.of(apiResponseArray0);
        org.junit.Assert.assertNotNull(apiResponseArray0);
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        org.junit.Assert.assertNotNull(cloneableOptional25);
        org.junit.Assert.assertNotNull(apiResponsesOptional29);
        org.junit.Assert.assertNotNull(apiResponseArrayOptional30);
    }

    @Test
    public void test08450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08450");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        java.lang.Object obj32 = schema31.getExample();
        schema31.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema31.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = schema31.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap39);
    }

    @Test
    public void test08451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08451");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        java.lang.String str8 = strComparableSchema2.getDescription();
        strComparableSchema2.setFormat("#/components/schemas/");
        java.lang.String str11 = strComparableSchema2.getDescription();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        java.math.BigDecimal bigDecimal22 = null;
        strComparableSchema14.setMaximum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.lang.String[] strArray41 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        strComparableSchema24.setRequired((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema14.required((java.util.List<java.lang.String>) strList42);
        java.lang.Object obj46 = schema45.getExample();
        io.swagger.oas.models.media.Schema schema48 = schema45.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj49 = schema45.getExample();
        io.swagger.oas.models.media.Schema schema50 = schema13.example((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema schema52 = schema13.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(obj49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test08452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08452");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema22.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = strComparableSchema22.getProperties();
        io.swagger.oas.models.media.Schema schema36 = schema20.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.lang.Boolean boolean37 = strComparableSchema22.getDeprecated();
        io.swagger.oas.models.media.Schema schema38 = schema15.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema22);
        schema15.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test08453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08453");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema3.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        java.lang.String str21 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema8.name("");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema8.setMinimum(bigDecimal24);
        java.lang.Boolean boolean26 = strComparableSchema8.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList27 = strComparableSchema8.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList28 = strComparableSchema8.getEnum();
        strComparableSchema8.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = strComparableSchema31.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable33 = strComparableSchema31.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema46.setDescription("hi!");
        strComparableSchema46.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema40.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        java.lang.Boolean boolean59 = strComparableSchema36.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList68 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean70 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean71 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean72 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean73 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean74 = strComparableList68.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean75 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean76 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema36.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList68);
        strComparableSchema31.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList68);
        strComparableSchema8.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList68);
        schema7.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList68);
        java.util.Optional<java.io.Serializable> serializableOptional81 = java.util.Optional.ofNullable((java.io.Serializable) strComparableList68);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(strComparableList27);
        org.junit.Assert.assertNull(strComparableList28);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNull(strComparable33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(serializableOptional81);
    }

    @Test
    public void test08454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08454");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.math.BigDecimal bigDecimal23 = strComparableSchema2.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test08455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08455");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema17.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        java.math.BigDecimal bigDecimal34 = null;
        strComparableSchema26.setMaximum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal47 = strComparableSchema36.getMultipleOf();
        java.lang.String str48 = strComparableSchema36.get$ref();
        java.lang.String[] strArray53 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        strComparableSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema26.required((java.util.List<java.lang.String>) strList54);
        strComparableSchema22.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strList54);
        io.swagger.oas.models.media.Schema schema59 = schema21.required((java.util.List<java.lang.String>) strList54);
        java.lang.String str60 = schema21.getDescription();
        io.swagger.oas.models.media.Schema schema61 = schema21.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Optional.empty" + "'", str60, "Optional.empty");
        org.junit.Assert.assertNull(schema61);
    }

    @Test
    public void test08456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08456");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema18 = schema16.uniqueItems((java.lang.Boolean) false);
        schema18.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema18.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema18.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        java.lang.Boolean boolean31 = strComparableSchema25.getReadOnly();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema25.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema25.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema36 = schema18.not(schema35);
        java.lang.Integer int37 = schema36.getMaxLength();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList38 = schema36.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(strComparableList38);
    }

    @Test
    public void test08457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08457");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema11.setXml(xML15);
        schema11.setMaxLength((java.lang.Integer) 100);
        java.lang.Integer int19 = schema11.getMinItems();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test08458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08458");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        schema24.setName("no description");
        java.lang.Boolean boolean27 = schema24.getUniqueItems();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema24.maximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = schema29.type(",");
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMultipleOf(bigDecimal34);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test08459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08459");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj27 = strComparableSchema2.getExample();
        java.lang.Boolean boolean28 = strComparableSchema2.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray65 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        schema59.setExample((java.lang.Object) tagSetOptional66);
        java.lang.Object obj69 = null;
        schema59.addExtension("*/*", obj69);
        java.lang.String str71 = schema59.getDescription();
        java.lang.String str72 = schema59.getType();
        java.lang.String str73 = schema59.getName();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema31.addProperties("*/*", schema59);
        java.math.BigDecimal bigDecimal75 = schema74.getMultipleOf();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema2.additionalProperties(schema74);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema74.externalDocs(externalDocumentation77);
        io.swagger.oas.models.media.Schema schema80 = schema78.minLength((java.lang.Integer) 0);
        java.lang.Boolean boolean81 = schema80.getWriteOnly();
        io.swagger.oas.models.media.Schema schema83 = schema80.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + false + "'", boolean81, false);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test08460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08460");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList14 = strComparableSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.lang.String[] strArray34 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        strComparableSchema17.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = strComparableSchema17.getMaxLength();
        strComparableSchema17.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema42.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        strComparableSchema42.setExternalDocs(externalDocumentation54);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema42.format("");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema17.additionalProperties(schema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        strComparableSchema71.setDescription("hi!");
        strComparableSchema71.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema65.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema71);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = null;
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema61.externalDocs(externalDocumentation84);
        strComparableSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema89.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test08461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08461");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        java.lang.Integer int29 = strComparableSchema0.getMaxItems();
        strComparableSchema0.setMinLength((java.lang.Integer) 1);
        java.lang.String str32 = strComparableSchema0.getName();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema0.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema36 = schema34.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.minimum(bigDecimal37);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test08462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08462");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = schema13.getMaximum();
        java.lang.Boolean boolean15 = schema13.getExclusiveMinimum();
        java.lang.Integer int16 = schema13.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test08463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08463");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        io.swagger.oas.annotations.servers.Server[] serverArray5 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray5);
        java.lang.String str7 = serverListOptional6.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray8 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray8);
        boolean boolean10 = serverListOptional9.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional9.orElse(serverList11);
        io.swagger.oas.models.servers.Server[] serverArray13 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList14 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList14, serverArray13);
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = serverListOptional9.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList14);
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional6.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList14);
        io.swagger.oas.annotations.servers.Server[] serverArray18 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray18);
        boolean boolean20 = serverListOptional19.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional19.orElse(serverList21);
        io.swagger.oas.models.servers.Server[] serverArray23 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList24 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList24, serverArray23);
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional19.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList24);
        java.util.List<io.swagger.oas.models.servers.Server> serverList27 = serverListOptional6.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList24);
        java.lang.String str28 = serverListOptional6.toString();
        io.swagger.oas.models.servers.Server[] serverArray29 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList30 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList30, serverArray29);
        java.util.List<io.swagger.oas.models.servers.Server> serverList32 = serverListOptional6.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList30);
        io.swagger.oas.annotations.servers.Server[] serverArray33 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional34 = io.swagger.jaxrs2.OperationParser.getServers(serverArray33);
        java.lang.String str35 = serverListOptional34.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray36 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional37 = io.swagger.jaxrs2.OperationParser.getServers(serverArray36);
        java.lang.String str38 = serverListOptional37.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray39 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional40 = io.swagger.jaxrs2.OperationParser.getServers(serverArray39);
        boolean boolean41 = serverListOptional40.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList42 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList43 = serverListOptional40.orElse(serverList42);
        io.swagger.oas.models.servers.Server[] serverArray44 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList45 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList45, serverArray44);
        java.util.List<io.swagger.oas.models.servers.Server> serverList47 = serverListOptional40.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList45);
        java.util.List<io.swagger.oas.models.servers.Server> serverList48 = serverListOptional37.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList45);
        java.util.List<io.swagger.oas.models.servers.Server> serverList49 = serverListOptional34.orElse(serverList48);
        java.util.List<io.swagger.oas.models.servers.Server> serverList50 = serverListOptional6.orElse(serverList48);
        java.util.List<io.swagger.oas.models.servers.Server> serverList51 = serverListOptional4.orElse(serverList48);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverArray5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertNotNull(serverListOptional9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(serverList16);
        org.junit.Assert.assertNotNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertNotNull(serverListOptional19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(serverList22);
        org.junit.Assert.assertNotNull(serverArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(serverList26);
        org.junit.Assert.assertNotNull(serverList27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Optional.empty" + "'", str28, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(serverList32);
        org.junit.Assert.assertNotNull(serverArray33);
        org.junit.Assert.assertNotNull(serverListOptional34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Optional.empty" + "'", str35, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray36);
        org.junit.Assert.assertNotNull(serverListOptional37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Optional.empty" + "'", str38, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray39);
        org.junit.Assert.assertNotNull(serverListOptional40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(serverList43);
        org.junit.Assert.assertNotNull(serverArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(serverList47);
        org.junit.Assert.assertNotNull(serverList48);
        org.junit.Assert.assertNotNull(serverList49);
        org.junit.Assert.assertNotNull(serverList50);
        org.junit.Assert.assertNotNull(serverList51);
    }

    @Test
    public void test08464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08464");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        schema2.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setNullable((java.lang.Boolean) false);
        java.lang.String str29 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema16.name("");
        java.math.BigDecimal bigDecimal32 = null;
        strComparableSchema16.setMinimum(bigDecimal32);
        java.lang.Boolean boolean34 = strComparableSchema16.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema16.description("*/*");
        boolean boolean37 = schema2.equals((java.lang.Object) schema36);
        io.swagger.oas.models.media.Schema schema39 = schema2.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML40 = null;
        schema39.setXml(xML40);
        schema39.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema39.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test08465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08465");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean9 = schema6.getNullable();
        schema6.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
    }

    @Test
    public void test08466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08466");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema0.setExtensions(strMap6);
        java.lang.String str8 = strComparableSchema0.getTitle();
        java.lang.String str9 = strComparableSchema0.getName();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test08467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08467");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        java.lang.Integer int28 = strComparableSchema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema6.maxLength((java.lang.Integer) 10);
        strComparableSchema2.setExample((java.lang.Object) strComparableSchema6);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = strComparableSchema2.getExtensions();
        strComparableSchema2.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema2.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test08468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08468");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.properties(strMap33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        strComparableSchema10.setExternalDocs(externalDocumentation35);
        java.lang.Object obj37 = strComparableSchema10.getExample();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema10.minProperties((java.lang.Integer) (-1));
        java.lang.String str40 = strComparableSchema10.getTitle();
        strComparableSchema10.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema10.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test08469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08469");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.properties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int14 = schema13.getMinLength();
        schema13.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        io.swagger.oas.models.media.XML xML17 = null;
        schema13.setXml(xML17);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test08470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08470");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema17 = schema15.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        schema15.setExternalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test08471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08471");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        boolean boolean2 = serverListOptional1.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList4 = serverListOptional1.orElse(serverList3);
        io.swagger.oas.annotations.servers.Server[] serverArray5 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray5);
        java.lang.String str7 = serverListOptional6.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray8 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray8);
        boolean boolean10 = serverListOptional9.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional9.orElse(serverList11);
        io.swagger.oas.models.servers.Server[] serverArray13 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList14 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList14, serverArray13);
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = serverListOptional9.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList14);
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional6.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList14);
        io.swagger.oas.annotations.servers.Server[] serverArray18 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray18);
        java.lang.String str20 = serverListOptional19.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray21 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        boolean boolean23 = serverListOptional22.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList24 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional22.orElse(serverList24);
        io.swagger.oas.models.servers.Server[] serverArray26 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList27 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList27, serverArray26);
        java.util.List<io.swagger.oas.models.servers.Server> serverList29 = serverListOptional22.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList27);
        java.util.List<io.swagger.oas.models.servers.Server> serverList30 = serverListOptional19.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList27);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional6.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList27);
        java.util.List<io.swagger.oas.models.servers.Server> serverList32 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList27);
        java.lang.String str33 = serverListOptional1.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.properties(strMap35);
        java.lang.Boolean boolean37 = schema36.getUniqueItems();
        java.lang.Boolean boolean38 = schema36.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        java.math.BigDecimal bigDecimal47 = null;
        strComparableSchema39.setMaximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = schema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        boolean boolean50 = serverListOptional1.equals((java.lang.Object) strComparableSchema39);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema39.maxLength((java.lang.Integer) 0);
        java.lang.Comparable<java.lang.String> strComparable53 = strComparableSchema39.getDefault();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema39.multipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema39.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(serverList4);
        org.junit.Assert.assertNotNull(serverArray5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertNotNull(serverListOptional9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(serverList16);
        org.junit.Assert.assertNotNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertNotNull(serverListOptional19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Optional.empty" + "'", str20, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertNotNull(serverListOptional22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(serverList25);
        org.junit.Assert.assertNotNull(serverArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(serverList29);
        org.junit.Assert.assertNotNull(serverList30);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNotNull(serverList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Optional.empty" + "'", str33, "Optional.empty");
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strComparable53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test08472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08472");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.discriminator(discriminator36);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema schema41 = schema37.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema42.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = strComparableSchema42.getProperties();
        java.lang.Boolean boolean56 = strComparableSchema42.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable57 = strComparableSchema42.getDefault();
        java.lang.String str58 = strComparableSchema42.getFormat();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema42.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str63 = strComparableSchema62.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema64.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema62.not((io.swagger.oas.models.media.Schema) strComparableSchema64);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = null;
        strComparableSchema64.setExtensions(strMap68);
        strComparableSchema64.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = strComparableSchema72.getExternalDocs();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema72.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema72.uniqueItems((java.lang.Boolean) false);
        strComparableSchema64.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema72);
        schema60.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strComparableSchema64);
        java.math.BigDecimal bigDecimal80 = strComparableSchema64.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str82 = strComparableSchema81.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema83.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema81.not((io.swagger.oas.models.media.Schema) strComparableSchema83);
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = null;
        strComparableSchema83.setExtensions(strMap87);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap89 = null;
        strComparableSchema83.setProperties(strMap89);
        strComparableSchema64.setNot((io.swagger.oas.models.media.Schema) strComparableSchema83);
        java.lang.String str92 = strComparableSchema83.toString();
        strComparableSchema83.setMinProperties((java.lang.Integer) (-1));
        schema41.setNot((io.swagger.oas.models.media.Schema) strComparableSchema83);
        io.swagger.oas.models.media.Schema schema97 = schema41.maxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(strComparable57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(externalDocumentation73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(bigDecimal80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str92, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test08473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08473");
        java.lang.String[] strArray5 = new java.lang.String[] { "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.lang.String[]> strArrayOptional7 = java.util.Optional.ofNullable(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(strArrayOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
    }

    @Test
    public void test08474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08474");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema0.setExtensions(strMap10);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.getNot();
        java.lang.Integer int15 = strComparableSchema0.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test08475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08475");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema0.setExtensions(strMap6);
        java.lang.Boolean boolean8 = strComparableSchema0.getReadOnly();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
    }

    @Test
    public void test08476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08476");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema25.setMaxProperties((java.lang.Integer) (-1));
        strComparableSchema25.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test08477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08477");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = strComparableSchema25.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableSchema25.getDefault();
        java.lang.Integer int28 = strComparableSchema25.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema25.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema2.not(schema36);
        java.lang.Comparable<java.lang.String> strComparable38 = strComparableSchema2.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.setMinLength((java.lang.Integer) 100);
        java.lang.String str49 = strComparableSchema39.getDescription();
        strComparableSchema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema39.readOnly((java.lang.Boolean) true);
        schema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema52.minItems((java.lang.Integer) (-1));
        schema52.setPattern("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNull(strComparable27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strComparable38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test08478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08478");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML41 = schema40.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema49.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema45.externalDocs(externalDocumentation68);
        java.lang.Object obj70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.example(obj70);
        java.lang.Object obj72 = schema69.getExample();
        io.swagger.oas.models.media.Schema schema74 = schema69.deprecated((java.lang.Boolean) true);
        schema40.addExtension("#/components/schemas/", (java.lang.Object) schema74);
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema74.minimum(bigDecimal76);
        io.swagger.oas.models.media.Schema schema79 = schema77.uniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList80 = schema77.getRequired();
        schema77.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(strList80);
    }

    @Test
    public void test08479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08479");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.lang.String str26 = strComparableSchema14.get$ref();
        java.lang.String[] strArray31 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        strComparableSchema14.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = strComparableSchema14.getMaxLength();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema14.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema38 = schema2.addProperties("#/components/schemas/", schema37);
        java.math.BigDecimal bigDecimal39 = null;
        schema2.setMultipleOf(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema2.deprecated((java.lang.Boolean) false);
        schema42.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test08480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08480");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        io.swagger.oas.models.media.Schema schema47 = schema44.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        strComparableSchema54.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal65 = strComparableSchema54.getMultipleOf();
        java.lang.String str66 = strComparableSchema54.get$ref();
        java.lang.String[] strArray71 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        strComparableSchema54.setRequired((java.util.List<java.lang.String>) strList72);
        java.lang.Integer int75 = strComparableSchema54.getMaxLength();
        java.lang.Integer int76 = strComparableSchema54.getMaxProperties();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema54.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema54.maxLength((java.lang.Integer) 10);
        strComparableSchema50.setExample((java.lang.Object) strComparableSchema54);
        java.lang.Boolean boolean82 = strComparableSchema54.getReadOnly();
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema54.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema85 = schema47.not(schema84);
        schema85.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema85.maximum(bigDecimal88);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test08481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08481");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional45 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema2.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        io.swagger.oas.models.media.Schema schema50 = schema48.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema52.setDescription("hi!");
        strComparableSchema52.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = strComparableSchema52.getProperties();
        java.lang.Boolean boolean66 = strComparableSchema52.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable67 = strComparableSchema52.getDefault();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema52.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema70 = schema48.addProperties("no description", schema69);
        java.lang.Boolean boolean71 = schema48.getUniqueItems();
        io.swagger.oas.models.media.Schema schema73 = schema48.title("*/*");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(strComparable67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test08482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08482");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema8 = schema6.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = schema6.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test08483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08483");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        java.lang.Integer int39 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.lang.String str46 = strComparableSchema40.get$ref();
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional54 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema40.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = schema38.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema38.xml(xML57);
        schema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema38.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema64 = schema62.format("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test08484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08484");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        java.lang.Integer int11 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema schema13 = schema8.writeOnly((java.lang.Boolean) false);
        schema8.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test08485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08485");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal52 = strComparableSchema41.getMultipleOf();
        java.lang.String str53 = strComparableSchema41.get$ref();
        java.lang.String[] strArray58 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        strComparableSchema41.setRequired((java.util.List<java.lang.String>) strList59);
        java.lang.Integer int62 = strComparableSchema41.getMaxLength();
        java.lang.Integer int63 = strComparableSchema41.getMaxProperties();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema41.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        strComparableSchema66.setDescription("hi!");
        strComparableSchema66.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal77 = strComparableSchema66.getMultipleOf();
        java.lang.String str78 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema schema79 = schema65.example((java.lang.Object) strComparableSchema66);
        io.swagger.oas.models.media.Schema schema81 = schema79.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML82 = schema81.getXml();
        io.swagger.oas.models.media.Schema schema84 = schema81.uniqueItems((java.lang.Boolean) true);
        schema40.setNot(schema84);
        io.swagger.oas.models.media.Schema schema87 = schema84.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int88 = schema84.getMaxItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(bigDecimal77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(xML82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(int88);
    }

    @Test
    public void test08486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08486");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        java.math.BigDecimal bigDecimal16 = schema15.getMinimum();
        schema15.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema15.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema15.format("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema15.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test08487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08487");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.lang.Cloneable> cloneableOptional4 = java.util.Optional.ofNullable((java.lang.Cloneable) serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal27 = strComparableSchema16.getMultipleOf();
        java.lang.String str28 = strComparableSchema16.get$ref();
        java.lang.String[] strArray33 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        strComparableSchema16.setRequired((java.util.List<java.lang.String>) strList34);
        schema15.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema16.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema16.type("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        boolean boolean42 = serverListOptional5.equals((java.lang.Object) strComparableSchema16);
        strComparableSchema16.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(cloneableOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test08488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08488");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal4 = null;
        strComparableSchema0.setMinimum(bigDecimal4);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema14.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.multipleOf(bigDecimal33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        schema34.setExternalDocs(externalDocumentation35);
        boolean boolean37 = strComparableSchema0.equals((java.lang.Object) schema34);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test08489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08489");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = strComparableSchema6.getProperties();
        strComparableSchema6.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema6.getAdditionalProperties();
        java.lang.Boolean boolean29 = schema28.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test08490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08490");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema6.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test08491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08491");
        java.util.Optional<java.io.Serializable> serializableOptional1 = java.util.Optional.ofNullable((java.io.Serializable) '4');
        java.lang.Class<?> wildcardClass2 = serializableOptional1.getClass();
        org.junit.Assert.assertNotNull(serializableOptional1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test08492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08492");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        schema46.setExtensions(strMap61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema46.maximum(bigDecimal63);
        java.lang.Boolean boolean65 = schema64.getReadOnly();
        io.swagger.oas.models.media.Schema schema67 = schema64.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema64.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test08493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08493");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.lang.Boolean boolean11 = strComparableSchema0.getUniqueItems();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) true);
        strComparableSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test08494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08494");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.properties(strMap33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        strComparableSchema10.setExternalDocs(externalDocumentation35);
        java.lang.Object obj37 = strComparableSchema10.getExample();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema10.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema39.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.multipleOf(bigDecimal42);
        java.lang.Object obj44 = schema41.getExample();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test08495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08495");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        strComparableSchema6.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema6.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema31.setExternalDocs(externalDocumentation32);
        strComparableSchema2.setDefault((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema35.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        strComparableSchema35.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema35.title("Optional.empty");
        java.lang.Integer int51 = strComparableSchema35.getMinProperties();
        io.swagger.oas.models.media.Schema schema52 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.math.BigDecimal bigDecimal53 = null;
        schema52.setMaximum(bigDecimal53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal66 = strComparableSchema55.getMultipleOf();
        java.lang.String str67 = strComparableSchema55.get$ref();
        java.lang.String[] strArray72 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        strComparableSchema55.setRequired((java.util.List<java.lang.String>) strList73);
        java.lang.Integer int76 = strComparableSchema55.getMaxLength();
        strComparableSchema55.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema55.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        schema80.setExternalDocs(externalDocumentation81);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str84 = strComparableSchema83.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema85 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema85.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema83.not((io.swagger.oas.models.media.Schema) strComparableSchema85);
        strComparableSchema83.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema92 = strComparableSchema83.exclusiveMinimum((java.lang.Boolean) false);
        schema80.setExample((java.lang.Object) strComparableSchema83);
        io.swagger.oas.models.media.Schema schema94 = schema52.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema83);
        schema52.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str97 = schema52.getPattern();
        io.swagger.oas.models.media.Schema schema99 = schema52.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(str97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test08496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08496");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.properties(strMap11);
        java.lang.Boolean boolean13 = schema12.getNullable();
        java.lang.String str14 = schema12.getType();
        schema12.setTitle("#/components/schemas/");
        schema12.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema12.addRequiredItem("*/*");
        schema20.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema20.description("Optional.empty");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = schema9.not(schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal40 = strComparableSchema29.getMultipleOf();
        java.lang.String str41 = strComparableSchema29.get$ref();
        java.lang.String[] strArray46 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        strComparableSchema29.setRequired((java.util.List<java.lang.String>) strList47);
        java.lang.Integer int50 = strComparableSchema29.getMaxLength();
        strComparableSchema29.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema29.$ref("#/components/schemas/");
        strComparableSchema29.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal57 = null;
        strComparableSchema29.setMinimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema29.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema60);
        io.swagger.oas.models.media.Schema schema63 = schema9.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test08497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08497");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean32 = schema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema34 = schema31.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str35 = schema34.getName();
        java.lang.Integer int36 = schema34.getMinItems();
        io.swagger.oas.models.media.Schema schema38 = schema34.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.xml(xML39);
        java.util.List<java.lang.String> strList41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.required(strList41);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test08498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08498");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.pattern("");
        java.lang.String str14 = strComparableSchema2.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal26 = strComparableSchema15.getMultipleOf();
        java.lang.String str27 = strComparableSchema15.get$ref();
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        strComparableSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.Integer int36 = strComparableSchema15.getMaxLength();
        java.lang.Integer int37 = strComparableSchema15.getMaxProperties();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema40.setDescription("hi!");
        strComparableSchema40.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal51 = strComparableSchema40.getMultipleOf();
        java.lang.String str52 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema schema53 = schema39.example((java.lang.Object) strComparableSchema40);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema40.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList63 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean65 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean66 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean67 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean68 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean69 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema55.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList63);
        strComparableSchema2.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList63);
        java.lang.String str73 = strComparableSchema2.getFormat();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = strComparableSchema2.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str14, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(strMap74);
    }

    @Test
    public void test08499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08499");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        java.lang.Boolean boolean10 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator11 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator12 = strComparableSchema0.getDiscriminator();
        java.lang.String str13 = strComparableSchema0.getPattern();
        strComparableSchema0.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = strComparableSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        strComparableSchema19.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal30 = strComparableSchema19.getMultipleOf();
        java.lang.String str31 = strComparableSchema19.get$ref();
        java.lang.String[] strArray36 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        strComparableSchema19.setRequired((java.util.List<java.lang.String>) strList37);
        java.lang.Integer int40 = strComparableSchema19.getMaxLength();
        strComparableSchema19.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema19.$ref("#/components/schemas/");
        strComparableSchema19.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal47 = null;
        strComparableSchema19.setMinimum(bigDecimal47);
        java.math.BigDecimal bigDecimal49 = strComparableSchema19.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray58 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional59 = io.swagger.jaxrs2.OperationParser.getTags(strArray58);
        schema52.setExample((java.lang.Object) tagSetOptional59);
        io.swagger.oas.models.media.Schema schema62 = schema52.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema19.additionalProperties(schema64);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema0.example((java.lang.Object) schema64);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(tagSetOptional59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test08500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test08500");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal16 = strComparableSchema5.getMultipleOf();
        java.lang.String str17 = strComparableSchema5.get$ref();
        strComparableSchema5.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema5.description("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.math.BigDecimal bigDecimal24 = schema21.getMinimum();
        schema21.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema21.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.writeOnly((java.lang.Boolean) false);
        schema31.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema31.title("#/components/schemas/");
        schema35.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal38 = schema35.getMinimum();
        java.lang.String str39 = schema35.getTitle();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema35.multipleOf(bigDecimal40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = strComparableSchema42.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema42.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = strComparableSchema47.getProperties();
        io.swagger.oas.models.media.Schema schema61 = schema45.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.lang.Boolean boolean62 = schema61.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator63 = null;
        schema61.setDiscriminator(discriminator63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema61.getProperties();
        io.swagger.oas.models.media.Schema schema66 = schema35.properties(strMap65);
        io.swagger.oas.models.media.Schema schema67 = schema28.properties(strMap65);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema0.properties(strMap65);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "#/components/schemas/" + "'", str39, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
    }
}

