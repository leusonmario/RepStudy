import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest18 {

    public static boolean debug = false;

    @Test
    public void test09001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09001");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema2.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.properties(strMap8);
        java.lang.Boolean boolean10 = schema9.getUniqueItems();
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal13 = null;
        schema9.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.externalDocs(externalDocumentation15);
        io.swagger.oas.annotations.servers.Server server17 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray18 = new io.swagger.oas.annotations.servers.Server[] { server17 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray18);
        boolean boolean20 = serverListOptional19.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.lang.String str27 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema21.getNot();
        boolean boolean29 = serverListOptional19.equals((java.lang.Object) schema28);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema28.multipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema32 = schema9.not(schema31);
        io.swagger.oas.models.media.Schema schema34 = schema31.exclusiveMaximum((java.lang.Boolean) true);
        schema31.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal48 = strComparableSchema37.getMultipleOf();
        strComparableSchema37.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str51 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema37.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema55 = schema53.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str57 = strComparableSchema56.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.not((io.swagger.oas.models.media.Schema) strComparableSchema58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str63 = strComparableSchema62.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema64.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema62.not((io.swagger.oas.models.media.Schema) strComparableSchema64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str69 = strComparableSchema68.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema68.not((io.swagger.oas.models.media.Schema) strComparableSchema70);
        strComparableSchema68.setDescription("hi!");
        strComparableSchema68.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema62.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema68);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema62);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema58.externalDocs(externalDocumentation81);
        java.lang.Object obj83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.example(obj83);
        io.swagger.oas.models.media.Discriminator discriminator85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema84.discriminator(discriminator85);
        schema55.setAdditionalProperties(schema86);
        io.swagger.oas.models.media.Schema schema89 = schema86.readOnly((java.lang.Boolean) true);
        schema31.setNot(schema89);
        java.util.List<java.lang.String> strList91 = schema31.getRequired();
        boolean boolean92 = schema2.equals((java.lang.Object) schema31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap93 = schema2.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertNotNull(serverListOptional19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(strList91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(strMap93);
    }

    @Test
    public void test09002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09002");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        java.lang.Boolean boolean24 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.properties(strMap26);
        java.lang.Boolean boolean28 = schema27.getUniqueItems();
        schema27.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj31 = schema27.getExample();
        boolean boolean32 = strComparableSchema0.equals(obj31);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(obj31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test09003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09003");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema13.maximum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.lang.String[] strArray34 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        strComparableSchema17.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = strComparableSchema17.getMaxLength();
        java.lang.Integer int39 = strComparableSchema17.getMaxProperties();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema17.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema17.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = schema43.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str59 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema58.setDescription("hi!");
        strComparableSchema58.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        strComparableSchema48.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj73 = strComparableSchema48.getExample();
        io.swagger.oas.models.media.Schema schema74 = schema43.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = schema74.getExtensions();
        schema16.setExtensions(strMap75);
        io.swagger.oas.models.media.Schema schema78 = schema16.minItems((java.lang.Integer) 10);
        schema78.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test09004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09004");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema0.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema19.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList38 = schema37.getEnum();
        io.swagger.oas.models.media.Schema schema40 = schema37.type("*/*");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema0.addProperties("#/components/schemas/", schema37);
        io.swagger.oas.models.media.Schema schema43 = schema37.format("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int44 = schema43.getMinLength();
        io.swagger.oas.models.media.Schema schema46 = schema43.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strComparableList38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test09005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09005");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.uniqueItems((java.lang.Boolean) false);
        strComparableSchema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.xml(xML29);
        strComparableSchema2.setNot(schema26);
        io.swagger.oas.models.media.Schema schema33 = schema26.name("*/*");
        java.lang.String str34 = schema26.toString();
        io.swagger.oas.models.media.Schema schema36 = schema26.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = schema26.format("no description");
        java.lang.Integer int39 = schema38.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str34, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test09006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09006");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.lang.String str16 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema22.setExtensions(strMap26);
        strComparableSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = strComparableSchema30.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.uniqueItems((java.lang.Boolean) false);
        strComparableSchema22.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        schema18.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strComparableSchema22);
        java.math.BigDecimal bigDecimal38 = strComparableSchema22.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        strComparableSchema41.setExtensions(strMap45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        strComparableSchema41.setProperties(strMap47);
        strComparableSchema22.setNot((io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.lang.String str50 = strComparableSchema41.toString();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema41.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str50, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test09007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09007");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = schema8.title("hi!");
        java.util.List<java.lang.String> strList11 = schema8.getRequired();
        io.swagger.oas.annotations.servers.Server server13 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray14 = new io.swagger.oas.annotations.servers.Server[] { server13 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray14);
        boolean boolean16 = serverListOptional15.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.lang.String str23 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema17.getNot();
        boolean boolean25 = serverListOptional15.equals((java.lang.Object) schema24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema24.properties(strMap26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        java.math.BigDecimal bigDecimal36 = null;
        strComparableSchema28.setMaximum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        java.lang.String[] strArray55 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        strComparableSchema38.setRequired((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema28.required((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema28.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str63 = strComparableSchema62.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema64.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema62.not((io.swagger.oas.models.media.Schema) strComparableSchema64);
        java.lang.String str68 = strComparableSchema62.get$ref();
        java.lang.String[] strArray73 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional76 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList74);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema62.required((java.util.List<java.lang.String>) strList74);
        io.swagger.oas.models.media.Schema schema78 = schema61.required((java.util.List<java.lang.String>) strList74);
        io.swagger.oas.models.media.Schema schema79 = schema24.required((java.util.List<java.lang.String>) strList74);
        schema79.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = schema79.addRequiredItem("*/*");
        schema8.addExtension("#/components/schemas/", (java.lang.Object) schema83);
        io.swagger.oas.models.media.Schema schema86 = schema8.description(",");
        java.lang.Integer int87 = schema86.getMaxLength();
        java.lang.Integer int88 = schema86.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertNotNull(serverListOptional15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNull(int88);
    }

    @Test
    public void test09008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09008");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation3 = null;
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.externalDocs(externalDocumentation3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = strComparableSchema5.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = schema8.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.externalDocs(externalDocumentation11);
        java.lang.String str13 = schema10.getType();
        java.math.BigDecimal bigDecimal14 = null;
        schema10.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema10.discriminator(discriminator16);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema10.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.not(schema10);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09009");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema11.minLength((java.lang.Integer) 10);
        schema11.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema11.maximum(bigDecimal19);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.discriminator(discriminator21);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test09010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09010");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        strComparableSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema22.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal43 = strComparableSchema32.getMultipleOf();
        java.lang.String str44 = strComparableSchema32.get$ref();
        java.lang.String[] strArray49 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        strComparableSchema32.setRequired((java.util.List<java.lang.String>) strList50);
        schema31.setNot((io.swagger.oas.models.media.Schema) strComparableSchema32);
        java.lang.Integer int54 = strComparableSchema32.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema32.properties(strMap55);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        strComparableSchema32.setExternalDocs(externalDocumentation57);
        java.lang.Object obj59 = strComparableSchema32.getExample();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema32.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema63 = schema61.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema63.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema0.not(schema63);
        io.swagger.oas.models.media.Schema schema68 = schema66.deprecated((java.lang.Boolean) false);
        schema66.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema72.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray80 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional81 = io.swagger.jaxrs2.OperationParser.getTags(strArray80);
        schema74.setExample((java.lang.Object) tagSetOptional81);
        io.swagger.oas.models.media.Schema schema84 = schema74.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema86 = schema84.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema88 = schema84.$ref(",");
        schema66.addExtension("#/components/schemas/hi!", (java.lang.Object) ",");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(tagSetOptional81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test09011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09011");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.writeOnly((java.lang.Boolean) false);
        schema18.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal21 = schema18.getMaximum();
        io.swagger.oas.models.media.Schema schema22 = schema15.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema23.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        strComparableSchema23.setExternalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema23.title("Optional.empty");
        schema38.setReadOnly((java.lang.Boolean) true);
        java.lang.String str41 = schema38.getName();
        schema38.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.properties(strMap45);
        java.lang.Boolean boolean47 = schema46.getUniqueItems();
        schema46.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal50 = null;
        schema46.setMultipleOf(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = schema46.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema53.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema53.title("hi!");
        java.lang.String str58 = schema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = strComparableSchema59.getExternalDocs();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema59.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str65 = strComparableSchema64.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema64.not((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema64.setDescription("hi!");
        strComparableSchema64.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema64.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = strComparableSchema64.getProperties();
        io.swagger.oas.models.media.Schema schema78 = schema62.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema64);
        java.lang.Boolean boolean79 = schema78.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator80 = null;
        schema78.setDiscriminator(discriminator80);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema78.getProperties();
        io.swagger.oas.models.media.Schema schema83 = schema57.properties(strMap82);
        schema38.setProperties(strMap82);
        schema18.setProperties(strMap82);
        io.swagger.oas.models.media.Schema schema86 = schema5.properties(strMap82);
        schema86.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(externalDocumentation60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test09012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09012");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.xml(xML6);
        java.lang.String str8 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.xml(xML11);
        io.swagger.oas.annotations.servers.Server server13 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray14 = new io.swagger.oas.annotations.servers.Server[] { server13 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray14);
        boolean boolean16 = serverListOptional15.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.lang.String str23 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema17.getNot();
        boolean boolean25 = serverListOptional15.equals((java.lang.Object) schema24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema24.properties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema24.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema12.not(schema24);
        java.lang.Boolean boolean33 = schema32.getReadOnly();
        java.lang.Boolean boolean34 = schema32.getDeprecated();
        io.swagger.oas.models.media.Schema schema36 = schema32.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertNotNull(serverListOptional15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test09013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09013");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Discriminator discriminator16 = schema15.getDiscriminator();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("");
        io.swagger.oas.models.media.Schema schema20 = schema18.title("*/*");
        io.swagger.oas.models.media.Schema schema22 = schema18.description("no description");
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema25.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.uniqueItems((java.lang.Boolean) false);
        strComparableSchema25.setDescription("");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList33 = strComparableSchema25.getEnum();
        java.lang.String str34 = strComparableSchema25.getDescription();
        strComparableSchema25.setPattern("#/components/schemas/");
        strComparableSchema25.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean39 = strComparableSchema25.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.properties(strMap41);
        java.lang.Boolean boolean43 = schema42.getUniqueItems();
        schema42.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = null;
        strComparableSchema48.setExtensions(strMap52);
        strComparableSchema48.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema48.minimum(bigDecimal56);
        java.math.BigDecimal bigDecimal58 = strComparableSchema48.getMinimum();
        io.swagger.oas.models.media.Schema schema59 = schema42.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema schema61 = schema42.format("no description");
        java.lang.String str62 = schema42.getType();
        java.lang.String str63 = schema42.getFormat();
        schema42.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema25.additionalProperties(schema42);
        io.swagger.oas.models.media.Schema schema67 = schema22.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strComparableList33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "no description" + "'", str63, "no description");
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test09014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09014");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.properties(strMap35);
        java.lang.Boolean boolean37 = schema36.getUniqueItems();
        schema36.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal40 = null;
        schema36.setMultipleOf(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema36.deprecated((java.lang.Boolean) true);
        java.lang.Integer int44 = schema43.getMaxProperties();
        schema43.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int47 = schema43.getMinLength();
        io.swagger.oas.models.media.Schema schema49 = schema43.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) false);
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema10.additionalProperties(schema53);
        io.swagger.oas.models.media.Schema schema58 = schema56.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test09015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09015");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.writeOnly((java.lang.Boolean) false);
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema3.additionalProperties(schema6);
        java.lang.String str11 = schema6.getPattern();
        io.swagger.oas.models.media.Schema schema13 = schema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.lang.Boolean boolean25 = strComparableSchema14.getUniqueItems();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) true);
        strComparableSchema14.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema14.format("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema13.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test09016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09016");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.properties(strMap28);
        java.lang.Boolean boolean30 = schema29.getNullable();
        java.lang.String str31 = schema29.getType();
        schema29.setTitle("#/components/schemas/");
        schema29.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema29.addRequiredItem("*/*");
        strComparableSchema0.setExample((java.lang.Object) schema29);
        io.swagger.oas.models.media.Schema schema40 = schema29.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        java.math.BigDecimal bigDecimal49 = null;
        strComparableSchema41.setMaximum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema41.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean53 = strComparableSchema41.getWriteOnly();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema41.multipleOf(bigDecimal54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema41.externalDocs(externalDocumentation56);
        java.lang.String str58 = schema57.getPattern();
        schema29.setNot(schema57);
        io.swagger.oas.models.media.Schema schema61 = schema57.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema63 = schema61.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema65 = schema61.description("#/components/schemas/no description");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test09017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09017");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = strComparableSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Boolean boolean21 = strComparableSchema15.getReadOnly();
        strComparableSchema15.setType("");
        strComparableSchema15.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema15.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal39 = strComparableSchema28.getMultipleOf();
        java.lang.String str40 = strComparableSchema28.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        strComparableSchema28.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.Integer int49 = strComparableSchema28.getMaxLength();
        java.lang.Integer int50 = strComparableSchema28.getMaxProperties();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal64 = strComparableSchema53.getMultipleOf();
        java.lang.String str65 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema schema66 = schema52.example((java.lang.Object) strComparableSchema53);
        boolean boolean67 = strComparableSchema15.equals((java.lang.Object) schema52);
        java.math.BigDecimal bigDecimal68 = null;
        schema52.setMinimum(bigDecimal68);
        schema52.setMinProperties((java.lang.Integer) 0);
        schema14.setDefault((java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema schema74 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema74.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test09018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09018");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        io.swagger.oas.models.media.Schema schema14 = schema11.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema11.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        io.swagger.oas.models.media.Schema schema42 = schema41.getAdditionalProperties();
        schema16.setDefault((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML44 = schema41.getXml();
        io.swagger.oas.models.media.Schema schema46 = schema41.minLength((java.lang.Integer) 0);
        schema46.setDescription("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNull(xML44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test09019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09019");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema5.multipleOf(bigDecimal12);
        schema13.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        io.swagger.oas.models.media.Schema schema17 = schema13.minItems((java.lang.Integer) 10);
        java.lang.String str18 = schema13.getTitle();
        io.swagger.oas.annotations.servers.Server server19 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray20 = new io.swagger.oas.annotations.servers.Server[] { server19 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        boolean boolean22 = serverListOptional21.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.lang.String str29 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema23.getNot();
        boolean boolean31 = serverListOptional21.equals((java.lang.Object) schema30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema30.properties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = schema30.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema30.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.discriminator(discriminator38);
        io.swagger.oas.models.media.Schema schema41 = schema37.type("Optional.empty");
        schema13.setExample((java.lang.Object) schema41);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(serverArray20);
        org.junit.Assert.assertNotNull(serverListOptional21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test09020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09020");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        schema15.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str18 = schema15.getName();
        java.lang.Integer int19 = schema15.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.Integer int47 = strComparableSchema26.getMaxLength();
        java.lang.Integer int48 = strComparableSchema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema26.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema26.maxLength((java.lang.Integer) 10);
        strComparableSchema22.setExample((java.lang.Object) strComparableSchema26);
        java.lang.Comparable<java.lang.String> strComparable54 = strComparableSchema26.getDefault();
        java.lang.String str55 = strComparableSchema26.getTitle();
        schema15.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        schema15.setFormat("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strComparable54);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test09021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09021");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.format("Optional.empty");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean29 = schema28.getExclusiveMaximum();
        java.lang.String str30 = schema28.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Optional.empty" + "'", str30, "Optional.empty");
    }

    @Test
    public void test09022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09022");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = strComparableSchema0.getDeprecated();
        strComparableSchema0.set$ref("hi!");
        java.math.BigDecimal bigDecimal30 = null;
        strComparableSchema0.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema32.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = strComparableSchema32.getProperties();
        java.lang.Boolean boolean46 = strComparableSchema32.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable47 = strComparableSchema32.getDefault();
        java.lang.String str48 = strComparableSchema32.getFormat();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = strComparableSchema32.getProperties();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema32.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema51.setTitle("");
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema0.not(schema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str57 = strComparableSchema56.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.not((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema56.setDescription("hi!");
        strComparableSchema56.addExtension("", (java.lang.Object) 0.0f);
        java.lang.Boolean boolean67 = strComparableSchema56.getUniqueItems();
        java.lang.Integer int68 = strComparableSchema56.getMinProperties();
        java.math.BigDecimal bigDecimal69 = null;
        strComparableSchema56.setMinimum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema56.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str74 = strComparableSchema73.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema75.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema73.not((io.swagger.oas.models.media.Schema) strComparableSchema75);
        strComparableSchema73.setDescription("hi!");
        java.lang.Integer int81 = strComparableSchema73.getMinItems();
        strComparableSchema73.set$ref(",");
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema73.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema73.title("");
        io.swagger.oas.models.media.Schema schema88 = schema72.additionalProperties(schema87);
        java.math.BigDecimal bigDecimal89 = null;
        schema72.setMultipleOf(bigDecimal89);
        io.swagger.oas.models.media.Schema schema91 = schema54.addProperties("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema72);
        schema54.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(strComparable47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test09023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09023");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList10 = strComparableSchema2.getRequired();
        strComparableSchema2.setNullable((java.lang.Boolean) true);
        java.lang.Comparable<java.lang.String> strComparable13 = strComparableSchema2.getDefault();
        strComparableSchema2.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strComparable13);
    }

    @Test
    public void test09024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09024");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        boolean boolean15 = serverListOptional14.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional14.orElse(serverList16);
        io.swagger.oas.models.servers.Server[] serverArray18 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList19 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList19, serverArray18);
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.lang.String str23 = serverListOptional1.toString();
        io.swagger.oas.models.servers.Server[] serverArray24 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList25 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList25, serverArray24);
        java.util.List<io.swagger.oas.models.servers.Server> serverList27 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList25);
        io.swagger.oas.annotations.servers.Server[] serverArray28 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional29 = io.swagger.jaxrs2.OperationParser.getServers(serverArray28);
        java.lang.String str30 = serverListOptional29.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray31 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional32 = io.swagger.jaxrs2.OperationParser.getServers(serverArray31);
        java.lang.String str33 = serverListOptional32.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray34 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional35 = io.swagger.jaxrs2.OperationParser.getServers(serverArray34);
        boolean boolean36 = serverListOptional35.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList37 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList38 = serverListOptional35.orElse(serverList37);
        io.swagger.oas.models.servers.Server[] serverArray39 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList40 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList40, serverArray39);
        java.util.List<io.swagger.oas.models.servers.Server> serverList42 = serverListOptional35.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList40);
        java.util.List<io.swagger.oas.models.servers.Server> serverList43 = serverListOptional32.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList40);
        java.util.List<io.swagger.oas.models.servers.Server> serverList44 = serverListOptional29.orElse(serverList43);
        java.util.List<io.swagger.oas.models.servers.Server> serverList45 = serverListOptional1.orElse(serverList43);
        java.lang.Class<?> wildcardClass46 = serverList43.getClass();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serverList21);
        org.junit.Assert.assertNotNull(serverList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Optional.empty" + "'", str23, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(serverList27);
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertNotNull(serverListOptional29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Optional.empty" + "'", str30, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray31);
        org.junit.Assert.assertNotNull(serverListOptional32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Optional.empty" + "'", str33, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray34);
        org.junit.Assert.assertNotNull(serverListOptional35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(serverList38);
        org.junit.Assert.assertNotNull(serverArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(serverList42);
        org.junit.Assert.assertNotNull(serverList43);
        org.junit.Assert.assertNotNull(serverList44);
        org.junit.Assert.assertNotNull(serverList45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test09025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09025");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema2.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema13.setNullable((java.lang.Boolean) false);
        java.lang.String str26 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema13.name("");
        java.math.BigDecimal bigDecimal29 = null;
        strComparableSchema13.setMinimum(bigDecimal29);
        java.lang.Boolean boolean31 = strComparableSchema13.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList32 = strComparableSchema13.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList33 = strComparableSchema13.getEnum();
        strComparableSchema13.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema13.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema40 = schema10.not(schema37);
        schema10.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(strComparableList32);
        org.junit.Assert.assertNull(strComparableList33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test09026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09026");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema31.type("no description");
        io.swagger.oas.models.media.Schema schema48 = schema46.pattern("no description");
        io.swagger.oas.models.media.XML xML49 = null;
        schema46.setXml(xML49);
        io.swagger.oas.models.media.Schema schema52 = schema46.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test09027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09027");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.annotations.servers.Server server10 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray11 = new io.swagger.oas.annotations.servers.Server[] { server10 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray11);
        boolean boolean13 = serverListOptional12.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.String str20 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.getNot();
        boolean boolean22 = serverListOptional12.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema21.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema2.not(schema24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = schema24.getExternalDocs();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList27 = schema24.getEnum();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema24.minimum(bigDecimal28);
        schema29.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = schema29.getProperties();
        java.math.BigDecimal bigDecimal33 = schema29.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema29.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema37 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertNotNull(serverListOptional12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNull(strComparableList27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test09028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09028");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.discriminator(discriminator29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation33);
        java.lang.Integer int35 = strComparableSchema0.getMinProperties();
        java.lang.String str36 = strComparableSchema0.getPattern();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test09029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09029");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertNotNull(serverListOptional9);
        org.junit.Assert.assertNotNull(serverListOptional10);
        org.junit.Assert.assertNotNull(serverListOptional11);
        org.junit.Assert.assertNotNull(serverListOptional12);
    }

    @Test
    public void test09030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09030");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.lang.Integer int23 = schema22.getMaxItems();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema27.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema27.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.xml(xML32);
        io.swagger.oas.models.media.Schema schema35 = schema27.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal47 = strComparableSchema36.getMultipleOf();
        java.lang.String str48 = strComparableSchema36.get$ref();
        java.lang.String[] strArray53 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        strComparableSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        java.util.Optional<java.lang.Iterable<java.lang.String>> strIterableOptional57 = java.util.Optional.ofNullable((java.lang.Iterable<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema58 = schema27.required((java.util.List<java.lang.String>) strList54);
        java.util.Optional<java.util.AbstractList<java.lang.String>> strListOptional59 = java.util.Optional.of((java.util.AbstractList<java.lang.String>) strList54);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strIterableOptional57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strListOptional59);
    }

    @Test
    public void test09031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09031");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        schema2.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setNullable((java.lang.Boolean) false);
        java.lang.String str29 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema16.name("");
        java.math.BigDecimal bigDecimal32 = null;
        strComparableSchema16.setMinimum(bigDecimal32);
        java.lang.Boolean boolean34 = strComparableSchema16.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema16.description("*/*");
        boolean boolean37 = schema2.equals((java.lang.Object) schema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema51.setDescription("hi!");
        strComparableSchema51.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema45.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema41.externalDocs(externalDocumentation64);
        java.lang.Object obj66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.example(obj66);
        java.lang.Object obj68 = schema65.getExample();
        java.lang.Integer int69 = schema65.getMaxProperties();
        schema65.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema72 = schema36.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema65);
        java.lang.String str73 = schema36.getName();
        io.swagger.oas.models.media.Schema schema75 = schema36.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test09032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09032");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = schema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.not(schema7);
        java.lang.Integer int9 = strComparableSchema0.getMinLength();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test09033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09033");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.format("*/*");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema19.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema19.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = schema19.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test09034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09034");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setMinItems((java.lang.Integer) (-1));
        strComparableSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test09035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09035");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal14 = null;
        strComparableSchema0.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = strComparableSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test09036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09036");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("Optional.empty");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        schema11.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema16.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema16.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.String str56 = strComparableSchema50.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema50.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema49.required((java.util.List<java.lang.String>) strList62);
        java.lang.String str67 = schema49.getTitle();
        schema49.setName("*/*");
        java.lang.Integer int70 = schema49.getMinProperties();
        boolean boolean71 = schema11.equals((java.lang.Object) int70);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test09037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09037");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.getNot();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09038");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        schema9.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator12);
    }

    @Test
    public void test09039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09039");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.String str12 = schema11.getName();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema11.maxLength((java.lang.Integer) (-1));
        java.lang.String str17 = schema16.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test09040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09040");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal15 = strComparableSchema0.getMinimum();
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = strComparableSchema0.getMultipleOf();
        java.lang.Integer int23 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema25.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09041");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        java.lang.String str8 = strComparableSchema0.getName();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test09042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09042");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.XML xML14 = strComparableSchema0.getXml();
        io.swagger.oas.models.media.XML xML15 = strComparableSchema0.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        java.lang.String str22 = strComparableSchema16.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional30 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema16.required((java.util.List<java.lang.String>) strList28);
        strComparableSchema16.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        java.math.BigDecimal bigDecimal42 = null;
        strComparableSchema34.setMaximum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema34.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList46 = strComparableSchema34.getRequired();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.required(strList46);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema0.required(strList46);
        java.lang.String str49 = schema48.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema48.externalDocs(externalDocumentation50);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNull(xML14);
        org.junit.Assert.assertNull(xML15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test09043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09043");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        schema15.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str18 = schema15.getName();
        io.swagger.oas.models.media.Schema schema20 = schema15.maxItems((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = schema20.getProperties();
        schema20.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
    }

    @Test
    public void test09044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09044");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = strComparableSchema0.getDeprecated();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strComparableSchema0.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test09045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09045");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        schema30.setExample((java.lang.Object) tagSetOptional37);
        java.lang.Object obj40 = null;
        schema30.addExtension("*/*", obj40);
        java.lang.String str42 = schema30.getDescription();
        java.lang.String str43 = schema30.getType();
        java.lang.String str44 = schema30.getName();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema2.addProperties("*/*", schema30);
        java.math.BigDecimal bigDecimal46 = schema45.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema schema49 = schema45.name(",");
        schema49.setMinLength((java.lang.Integer) 10);
        java.lang.Boolean boolean52 = schema49.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean52);
    }

    @Test
    public void test09046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09046");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        schema4.setTitle("Optional.empty");
        java.lang.String str7 = schema4.getPattern();
        io.swagger.oas.models.media.Schema schema9 = schema4.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema11 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test09047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09047");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        java.lang.Boolean boolean4 = schema2.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        java.math.BigDecimal bigDecimal13 = null;
        strComparableSchema5.setMaximum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema15 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema5.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09048");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        java.lang.Integer int4 = schema3.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.properties(strMap6);
        java.lang.Boolean boolean8 = schema7.getUniqueItems();
        schema7.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        schema7.setMultipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema7.deprecated((java.lang.Boolean) true);
        java.lang.Integer int15 = schema14.getMaxProperties();
        schema14.setReadOnly((java.lang.Boolean) true);
        boolean boolean18 = schema3.equals((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema20 = schema3.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09049");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema2.format("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.discriminator(discriminator12);
        schema13.setDescription(",");
        io.swagger.oas.models.media.Schema schema17 = schema13.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = schema17.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema20 = schema17.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09050");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema10.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = strComparableSchema10.getProperties();
        strComparableSchema10.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.writeOnly((java.lang.Boolean) false);
        schema28.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema28.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        io.swagger.oas.models.media.Schema schema36 = schema32.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema32.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str41 = schema32.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = strComparableSchema42.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable44 = strComparableSchema42.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str58 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        strComparableSchema57.setDescription("hi!");
        strComparableSchema57.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema51.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema57);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        java.lang.Boolean boolean70 = strComparableSchema47.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList79 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean81 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean82 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean83 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean84 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean85 = strComparableList79.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean86 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean87 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema47.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList79);
        strComparableSchema42.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList79);
        schema32.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList79);
        strComparableSchema10.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList79);
        schema9.setExample((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation93 = null;
        schema9.setExternalDocs(externalDocumentation93);
        schema9.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNull(strComparable44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test09051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09051");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema17.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema17.description("");
        java.lang.String str22 = schema21.getDescription();
        io.swagger.oas.models.media.Schema schema24 = schema21.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int25 = schema21.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test09052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09052");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = schema3.deprecated((java.lang.Boolean) true);
        schema21.setMinProperties((java.lang.Integer) (-1));
        schema21.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema21.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema21.nullable((java.lang.Boolean) true);
        schema29.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09053");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.description("Optional.empty");
        schema7.setDefault((java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema8.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str15 = strComparableSchema8.getPattern();
        java.lang.Boolean boolean16 = strComparableSchema8.getWriteOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList17 = strComparableSchema8.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema18.setMaximum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal39 = strComparableSchema28.getMultipleOf();
        java.lang.String str40 = strComparableSchema28.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        strComparableSchema28.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema18.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema52.setExtensions(strMap56);
        strComparableSchema52.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema52.minimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema62 = schema49.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.media.Schema schema64 = schema49.type("no description");
        io.swagger.oas.models.media.Schema schema66 = schema64.pattern("no description");
        java.lang.String str67 = schema66.getDescription();
        strComparableSchema8.setExample((java.lang.Object) schema66);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str15, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(strComparableList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
    }

    @Test
    public void test09054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09054");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        java.lang.String str11 = schema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = schema10.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean14 = schema13.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema16 = schema13.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema18 = schema13.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test09055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09055");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.multipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema13.minProperties((java.lang.Integer) 1);
        schema15.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09056");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        io.swagger.oas.models.media.XML xML8 = null;
        schema5.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema5.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema12.title("");
        io.swagger.oas.models.media.Schema schema22 = schema5.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.maximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema29.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.externalDocs(externalDocumentation32);
        java.lang.String str34 = schema33.getPattern();
        boolean boolean35 = schema5.equals((java.lang.Object) schema33);
        java.lang.Boolean boolean36 = schema5.getWriteOnly();
        java.math.BigDecimal bigDecimal37 = schema5.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(bigDecimal37);
    }

    @Test
    public void test09057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09057");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema16.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema16.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.String str56 = strComparableSchema50.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema50.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema49.required((java.util.List<java.lang.String>) strList62);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional67 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema0.required((java.util.List<java.lang.String>) strList62);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema0.multipleOf(bigDecimal69);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        schema70.setExternalDocs(externalDocumentation71);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strCollectionOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test09058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09058");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema6.getExternalDocs();
        java.lang.Integer int8 = strComparableSchema6.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema6.not(schema13);
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.type("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Boolean boolean18 = schema17.getWriteOnly();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test09059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09059");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        schema2.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.writeOnly((java.lang.Boolean) false);
        schema21.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema18.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema27 = schema25.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int28 = schema27.getMinProperties();
        java.math.BigDecimal bigDecimal29 = null;
        schema27.setMinimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema2.not(schema27);
        io.swagger.oas.models.media.Schema schema32 = schema2.getNot();
        schema32.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = schema32.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.minimum(bigDecimal37);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test09060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09060");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema40.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema43 = schema40.getNot();
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList46 = schema43.getRequired();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = schema43.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strMap47);
    }

    @Test
    public void test09061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09061");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.annotations.servers.Server server16 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray17 = new io.swagger.oas.annotations.servers.Server[] { server16 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray17);
        boolean boolean19 = serverListOptional18.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.lang.String str26 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.getNot();
        boolean boolean28 = serverListOptional18.equals((java.lang.Object) schema27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema27.properties(strMap29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.multipleOf(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema30.title("");
        java.lang.Boolean boolean35 = schema34.getNullable();
        io.swagger.oas.models.media.Schema schema36 = schema15.example((java.lang.Object) schema34);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(serverArray17);
        org.junit.Assert.assertNotNull(serverListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test09062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09062");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.XML xML6 = null;
        strComparableSchema0.setXml(xML6);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.discriminator(discriminator8);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str12 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal34 = strComparableSchema23.getMultipleOf();
        java.lang.String str35 = strComparableSchema23.get$ref();
        java.lang.String[] strArray40 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        strComparableSchema23.setRequired((java.util.List<java.lang.String>) strList41);
        schema22.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        schema22.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema48 = schema22.format("Optional.empty");
        strComparableSchema0.setExample((java.lang.Object) "Optional.empty");
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.minLength((java.lang.Integer) 1);
        java.lang.Integer int52 = strComparableSchema0.getMaxItems();
        java.lang.Boolean boolean53 = strComparableSchema0.getExclusiveMinimum();
        strComparableSchema0.set$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNull(boolean53);
    }

    @Test
    public void test09063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09063");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        schema9.setTitle(",");
        java.lang.Boolean boolean12 = schema9.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema15 = schema9.getNot();
        schema15.setNullable((java.lang.Boolean) false);
        java.lang.String str18 = schema15.getName();
        java.lang.Class<?> wildcardClass19 = schema15.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test09064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09064");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getExclusiveMinimum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList8 = schema2.getEnum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.discriminator(discriminator11);
        java.lang.String str13 = schema12.getType();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema12.minimum(bigDecimal14);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(strComparableList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09065");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional4 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        java.lang.String str8 = serverListOptional7.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray9 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray9);
        boolean boolean11 = serverListOptional10.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList13 = serverListOptional10.orElse(serverList12);
        io.swagger.oas.models.servers.Server[] serverArray14 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList15 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList15, serverArray14);
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional10.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList15);
        java.util.List<io.swagger.oas.models.servers.Server> serverList18 = serverListOptional7.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList15);
        java.lang.String str19 = serverListOptional7.toString();
        boolean boolean20 = serverListOptional7.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = strComparableSchema21.getExternalDocs();
        java.lang.Integer int23 = strComparableSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.minItems((java.lang.Integer) 1);
        java.util.Optional<java.lang.Object> objOptional26 = java.util.Optional.ofNullable((java.lang.Object) schema25);
        boolean boolean27 = serverListOptional7.equals((java.lang.Object) objOptional26);
        io.swagger.oas.annotations.servers.Server[] serverArray28 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional29 = io.swagger.jaxrs2.OperationParser.getServers(serverArray28);
        java.lang.String str30 = serverListOptional29.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray31 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional32 = io.swagger.jaxrs2.OperationParser.getServers(serverArray31);
        boolean boolean33 = serverListOptional32.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList34 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList35 = serverListOptional32.orElse(serverList34);
        io.swagger.oas.models.servers.Server[] serverArray36 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList37 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList37, serverArray36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional32.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList37);
        java.util.List<io.swagger.oas.models.servers.Server> serverList40 = serverListOptional29.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList37);
        java.lang.String str41 = serverListOptional29.toString();
        boolean boolean42 = serverListOptional29.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray43 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional44 = io.swagger.jaxrs2.OperationParser.getServers(serverArray43);
        boolean boolean45 = serverListOptional44.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList46 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList47 = serverListOptional44.orElse(serverList46);
        io.swagger.oas.models.servers.Server[] serverArray48 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList49 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList49, serverArray48);
        java.util.List<io.swagger.oas.models.servers.Server> serverList51 = serverListOptional44.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList49);
        java.util.List<io.swagger.oas.models.servers.Server> serverList52 = serverListOptional29.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList49);
        java.util.List<io.swagger.oas.models.servers.Server> serverList53 = serverListOptional7.orElse(serverList52);
        java.util.List<io.swagger.oas.models.servers.Server> serverList54 = serverListOptional5.orElse(serverList52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        java.math.BigDecimal bigDecimal63 = null;
        strComparableSchema55.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        strComparableSchema65.setDescription("hi!");
        strComparableSchema65.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal76 = strComparableSchema65.getMultipleOf();
        java.lang.String str77 = strComparableSchema65.get$ref();
        java.lang.String[] strArray82 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        strComparableSchema65.setRequired((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema55.required((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Discriminator discriminator87 = null;
        io.swagger.oas.models.media.Schema schema88 = schema86.discriminator(discriminator87);
        boolean boolean89 = serverListOptional5.equals((java.lang.Object) discriminator87);
        io.swagger.oas.annotations.servers.Server[] serverArray90 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional91 = io.swagger.jaxrs2.OperationParser.getServers(serverArray90);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional92 = java.util.Optional.ofNullable(serverArray90);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional93 = io.swagger.jaxrs2.OperationParser.getServers(serverArray90);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional94 = io.swagger.jaxrs2.OperationParser.getServers(serverArray90);
        boolean boolean95 = serverListOptional5.equals((java.lang.Object) serverArray90);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverArrayOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Optional.empty" + "'", str8, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray9);
        org.junit.Assert.assertNotNull(serverListOptional10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serverList13);
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(serverList17);
        org.junit.Assert.assertNotNull(serverList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Optional.empty" + "'", str19, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(externalDocumentation22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(objOptional26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertNotNull(serverListOptional29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Optional.empty" + "'", str30, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray31);
        org.junit.Assert.assertNotNull(serverListOptional32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(serverList35);
        org.junit.Assert.assertNotNull(serverArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(serverList39);
        org.junit.Assert.assertNotNull(serverList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Optional.empty" + "'", str41, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(serverArray43);
        org.junit.Assert.assertNotNull(serverListOptional44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(serverList47);
        org.junit.Assert.assertNotNull(serverArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(serverList51);
        org.junit.Assert.assertNotNull(serverList52);
        org.junit.Assert.assertNotNull(serverList53);
        org.junit.Assert.assertNotNull(serverList54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(bigDecimal76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(serverArray90);
        org.junit.Assert.assertNotNull(serverListOptional91);
        org.junit.Assert.assertNotNull(serverArrayOptional92);
        org.junit.Assert.assertNotNull(serverListOptional93);
        org.junit.Assert.assertNotNull(serverListOptional94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test09066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09066");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = null;
        io.swagger.oas.models.media.Schema schema5 = schema2.addProperties("*/*", schema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = schema2.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.String str25 = schema2.getPattern();
        io.swagger.oas.models.media.Schema schema27 = schema2.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int30 = schema27.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal48 = strComparableSchema37.getMultipleOf();
        java.lang.String str49 = strComparableSchema37.get$ref();
        java.lang.String[] strArray54 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        strComparableSchema37.setRequired((java.util.List<java.lang.String>) strList55);
        java.lang.Integer int58 = strComparableSchema37.getMaxLength();
        java.lang.Integer int59 = strComparableSchema37.getMaxProperties();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema37.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema37.maxLength((java.lang.Integer) 10);
        strComparableSchema33.setExample((java.lang.Object) strComparableSchema37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = null;
        strComparableSchema33.setExternalDocs(externalDocumentation65);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema33.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str70 = strComparableSchema69.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema71.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema69.not((io.swagger.oas.models.media.Schema) strComparableSchema71);
        strComparableSchema69.setDescription("hi!");
        strComparableSchema69.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema69.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        strComparableSchema69.setExternalDocs(externalDocumentation81);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema69.title("Optional.empty");
        java.math.BigDecimal bigDecimal85 = schema84.getMultipleOf();
        schema84.addEnumItemObject((java.lang.Comparable<java.lang.String>) ",");
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = schema84.getExtensions();
        strComparableSchema33.setExtensions(strMap88);
        schema27.setExtensions(strMap88);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(bigDecimal85);
        org.junit.Assert.assertNotNull(strMap88);
    }

    @Test
    public void test09067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09067");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.String str12 = schema11.getName();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.minimum(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = schema14.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
    }

    @Test
    public void test09068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09068");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.annotations.servers.Server server7 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray8 = new io.swagger.oas.annotations.servers.Server[] { server7 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray8);
        boolean boolean10 = serverListOptional9.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.lang.String str17 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema11.getNot();
        boolean boolean19 = serverListOptional9.equals((java.lang.Object) schema18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema18.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema18.uniqueItems((java.lang.Boolean) false);
        schema23.setName("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator26 = schema23.getDiscriminator();
        schema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean29 = schema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema6.not(schema23);
        schema23.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertNotNull(serverListOptional9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test09069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09069");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.name("hi!");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema6.type("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.lang.Boolean boolean35 = strComparableSchema29.getReadOnly();
        strComparableSchema29.setType("");
        strComparableSchema29.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema29.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.not(schema42);
        schema41.setUniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        schema41.setProperties(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema50.setMaxLength((java.lang.Integer) 0);
        strComparableSchema50.setMaxProperties((java.lang.Integer) 100);
        schema41.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = strComparableSchema59.getExternalDocs();
        java.lang.Integer int61 = strComparableSchema59.getMaxLength();
        java.lang.Integer int62 = strComparableSchema59.getMaxProperties();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = strComparableSchema65.getExternalDocs();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema65.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.not((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema70.setDescription("hi!");
        strComparableSchema70.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema70.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = strComparableSchema70.getProperties();
        io.swagger.oas.models.media.Schema schema84 = schema68.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean85 = schema84.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator86 = null;
        schema84.setDiscriminator(discriminator86);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema84.getProperties();
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema59.properties(strMap88);
        io.swagger.oas.models.media.Schema schema90 = schema41.properties(strMap88);
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema6.properties(strMap88);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation92 = schema91.getExternalDocs();
        java.lang.Boolean boolean93 = schema91.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(externalDocumentation60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(externalDocumentation92);
        org.junit.Assert.assertNull(boolean93);
    }

    @Test
    public void test09070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09070");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema12.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = schema12.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
    }

    @Test
    public void test09071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09071");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        schema26.setMaxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema26.getMaxLength();
        java.lang.Boolean boolean30 = schema26.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = schema26.minProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean33 = schema26.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
    }

    @Test
    public void test09072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09072");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.lang.Integer int33 = strComparableSchema10.getMaxLength();
        java.lang.String str34 = strComparableSchema10.getType();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema10.description("");
        strComparableSchema10.set$ref("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test09073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09073");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema0.setMinimum(bigDecimal25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        strComparableSchema0.setProperties(strMap27);
        java.lang.Integer int29 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.nullable((java.lang.Boolean) true);
        strComparableSchema0.setFormat(",");
        java.lang.String str34 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.name("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test09074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09074");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalOptional5 = java.util.Optional.of(serverListOptional4);
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        java.lang.String str8 = serverListOptional7.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray9 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray9);
        boolean boolean11 = serverListOptional10.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList13 = serverListOptional10.orElse(serverList12);
        io.swagger.oas.models.servers.Server[] serverArray14 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList15 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList15, serverArray14);
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional10.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList15);
        java.util.List<io.swagger.oas.models.servers.Server> serverList18 = serverListOptional7.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList15);
        java.lang.String str19 = serverListOptional7.toString();
        boolean boolean20 = serverListOptional7.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = strComparableSchema21.getExternalDocs();
        java.lang.Integer int23 = strComparableSchema21.getMinProperties();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema21.minItems((java.lang.Integer) 1);
        java.util.Optional<java.lang.Object> objOptional26 = java.util.Optional.ofNullable((java.lang.Object) schema25);
        boolean boolean27 = serverListOptional7.equals((java.lang.Object) objOptional26);
        io.swagger.oas.annotations.servers.Server[] serverArray28 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional29 = io.swagger.jaxrs2.OperationParser.getServers(serverArray28);
        java.lang.String str30 = serverListOptional29.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray31 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional32 = io.swagger.jaxrs2.OperationParser.getServers(serverArray31);
        boolean boolean33 = serverListOptional32.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList34 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList35 = serverListOptional32.orElse(serverList34);
        io.swagger.oas.models.servers.Server[] serverArray36 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList37 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList37, serverArray36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional32.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList37);
        java.util.List<io.swagger.oas.models.servers.Server> serverList40 = serverListOptional29.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList37);
        java.lang.String str41 = serverListOptional29.toString();
        boolean boolean42 = serverListOptional29.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray43 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional44 = io.swagger.jaxrs2.OperationParser.getServers(serverArray43);
        boolean boolean45 = serverListOptional44.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList46 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList47 = serverListOptional44.orElse(serverList46);
        io.swagger.oas.models.servers.Server[] serverArray48 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList49 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList49, serverArray48);
        java.util.List<io.swagger.oas.models.servers.Server> serverList51 = serverListOptional44.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList49);
        java.util.List<io.swagger.oas.models.servers.Server> serverList52 = serverListOptional29.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList49);
        java.util.List<io.swagger.oas.models.servers.Server> serverList53 = serverListOptional7.orElse(serverList52);
        java.util.List<io.swagger.oas.models.servers.Server> serverList54 = serverListOptional4.orElse(serverList53);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptionalOptional5);
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Optional.empty" + "'", str8, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray9);
        org.junit.Assert.assertNotNull(serverListOptional10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serverList13);
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(serverList17);
        org.junit.Assert.assertNotNull(serverList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Optional.empty" + "'", str19, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(externalDocumentation22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(objOptional26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertNotNull(serverListOptional29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Optional.empty" + "'", str30, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray31);
        org.junit.Assert.assertNotNull(serverListOptional32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(serverList35);
        org.junit.Assert.assertNotNull(serverArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(serverList39);
        org.junit.Assert.assertNotNull(serverList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Optional.empty" + "'", str41, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(serverArray43);
        org.junit.Assert.assertNotNull(serverListOptional44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(serverList47);
        org.junit.Assert.assertNotNull(serverArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(serverList51);
        org.junit.Assert.assertNotNull(serverList52);
        org.junit.Assert.assertNotNull(serverList53);
        org.junit.Assert.assertNotNull(serverList54);
    }

    @Test
    public void test09075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09075");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = strComparableSchema8.getExternalDocs();
        io.swagger.oas.models.media.XML xML24 = strComparableSchema8.getXml();
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema8.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema30 = schema28.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean31 = schema28.getWriteOnly();
        java.lang.String str32 = schema28.getDescription();
        java.util.List<java.lang.String> strList33 = schema28.getRequired();
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema28.discriminator(discriminator34);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNull(xML24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test09076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09076");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.annotations.servers.Server server10 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray11 = new io.swagger.oas.annotations.servers.Server[] { server10 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray11);
        boolean boolean13 = serverListOptional12.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.String str20 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.getNot();
        boolean boolean22 = serverListOptional12.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema21.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema2.not(schema24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = schema24.getExternalDocs();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList27 = schema24.getEnum();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema24.minimum(bigDecimal28);
        schema29.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = schema29.getProperties();
        java.math.BigDecimal bigDecimal33 = schema29.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema29.externalDocs(externalDocumentation34);
        java.lang.String str36 = schema35.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertNotNull(serverListOptional12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNull(strComparableList27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test09077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09077");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema36.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean40 = schema39.getUniqueItems();
        schema39.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema39.xml(xML43);
        java.util.List<java.lang.String> strList45 = schema39.getRequired();
        schema39.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test09078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09078");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        schema13.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema17.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema17.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema17.multipleOf(bigDecimal29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        strComparableSchema17.setProperties(strMap31);
        schema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema schema35 = schema13.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema36.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.uniqueItems((java.lang.Boolean) false);
        schema41.setDescription("");
        io.swagger.oas.models.media.XML xML44 = null;
        schema41.setXml(xML44);
        io.swagger.oas.models.media.Schema schema47 = schema41.$ref("Optional.empty");
        io.swagger.oas.models.media.Schema schema49 = schema47.readOnly((java.lang.Boolean) false);
        java.lang.String str50 = schema47.getPattern();
        schema35.setAdditionalProperties(schema47);
        java.lang.String str52 = schema47.get$ref();
        io.swagger.oas.models.media.Schema schema54 = schema47.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema56 = schema47.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Optional.empty" + "'", str52, "Optional.empty");
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test09079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09079");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.setMinLength((java.lang.Integer) 100);
        java.lang.String str30 = strComparableSchema20.getDescription();
        schema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.lang.String str32 = schema17.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema17.externalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema schema36 = schema17.minLength((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strMap37);
    }

    @Test
    public void test09080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09080");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        io.swagger.oas.annotations.servers.Server[] serverArray9 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray9);
        boolean boolean11 = serverListOptional10.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList13 = serverListOptional10.orElse(serverList12);
        io.swagger.oas.annotations.servers.Server[] serverArray14 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray14);
        java.lang.String str16 = serverListOptional15.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray17 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray17);
        boolean boolean19 = serverListOptional18.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList20 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional18.orElse(serverList20);
        io.swagger.oas.models.servers.Server[] serverArray22 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList23 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList23, serverArray22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional18.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList23);
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional15.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList23);
        io.swagger.oas.annotations.servers.Server[] serverArray27 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional28 = io.swagger.jaxrs2.OperationParser.getServers(serverArray27);
        java.lang.String str29 = serverListOptional28.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        boolean boolean32 = serverListOptional31.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList33 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList34 = serverListOptional31.orElse(serverList33);
        io.swagger.oas.models.servers.Server[] serverArray35 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList36 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList36, serverArray35);
        java.util.List<io.swagger.oas.models.servers.Server> serverList38 = serverListOptional31.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional28.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList40 = serverListOptional15.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList41 = serverListOptional10.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList42 = serverListOptional8.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList36);
        boolean boolean43 = serverListOptional8.isPresent();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertNotNull(serverArray9);
        org.junit.Assert.assertNotNull(serverListOptional10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(serverList13);
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertNotNull(serverListOptional15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Optional.empty" + "'", str16, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray17);
        org.junit.Assert.assertNotNull(serverListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(serverList21);
        org.junit.Assert.assertNotNull(serverArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serverList25);
        org.junit.Assert.assertNotNull(serverList26);
        org.junit.Assert.assertNotNull(serverArray27);
        org.junit.Assert.assertNotNull(serverListOptional28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Optional.empty" + "'", str29, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(serverList34);
        org.junit.Assert.assertNotNull(serverArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(serverList38);
        org.junit.Assert.assertNotNull(serverList39);
        org.junit.Assert.assertNotNull(serverList40);
        org.junit.Assert.assertNotNull(serverList41);
        org.junit.Assert.assertNotNull(serverList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test09081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09081");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema0.getEnum();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        schema24.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test09082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09082");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray24 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray24);
        schema18.setExample((java.lang.Object) tagSetOptional25);
        io.swagger.oas.models.media.Schema schema28 = schema18.format("#/components/schemas/");
        strComparableSchema0.setAdditionalProperties(schema18);
        schema18.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema18.discriminator(discriminator32);
        java.lang.String str34 = schema33.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(tagSetOptional25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test09083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09083");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema12 = schema2.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema2.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema14.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.maxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test09084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09084");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        strComparableSchema0.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema9.setExtensions(strMap13);
        strComparableSchema9.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int17 = strComparableSchema9.getMaxItems();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema20.setMaximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList32 = strComparableSchema20.getRequired();
        io.swagger.oas.models.media.Schema schema33 = schema19.required(strList32);
        strComparableSchema0.setRequired(strList32);
        strComparableSchema0.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09085");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        java.lang.Boolean boolean11 = schema10.getUniqueItems();
        schema10.setName("#/components/schemas/");
        java.math.BigDecimal bigDecimal14 = schema10.getMaximum();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema10.minimum(bigDecimal15);
        schema16.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09086");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        java.lang.Integer int17 = schema16.getMaxLength();
        java.lang.Boolean boolean18 = schema16.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema16.setDiscriminator(discriminator21);
        java.lang.Boolean boolean23 = schema16.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test09087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09087");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.maximum(bigDecimal39);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema25.xml(xML41);
        schema42.setMinProperties((java.lang.Integer) (-1));
        schema42.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test09088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09088");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.Schema schema12 = schema2.minItems((java.lang.Integer) 0);
        java.lang.String str13 = schema2.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        java.lang.Integer int16 = strComparableSchema14.getMaxLength();
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema14.setMaximum(bigDecimal17);
        strComparableSchema14.setMinItems((java.lang.Integer) 100);
        strComparableSchema14.setType("hi!");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema14.$ref("hi!");
        boolean boolean25 = schema2.equals((java.lang.Object) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema26 = schema2.getAdditionalProperties();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema2.multipleOf(bigDecimal27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema29.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.uniqueItems((java.lang.Boolean) false);
        schema34.setDescription("");
        schema34.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        schema34.setExternalDocs(externalDocumentation39);
        io.swagger.oas.models.media.Schema schema42 = schema34.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = strComparableSchema43.getExternalDocs();
        io.swagger.oas.models.media.Schema schema45 = schema34.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema schema47 = schema45.uniqueItems((java.lang.Boolean) false);
        schema47.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        schema47.setExternalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema schema52 = schema28.example((java.lang.Object) schema47);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema28.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(externalDocumentation44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap53);
    }

    @Test
    public void test09089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09089");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.lang.String str13 = serverListOptional2.toString();
        java.lang.String str14 = serverListOptional2.toString();
        java.lang.String str15 = serverListOptional2.toString();
        boolean boolean16 = serverListOptional2.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional2.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Optional.empty" + "'", str13, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Optional.empty" + "'", str15, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09090");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.String str40 = strComparableSchema34.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional48 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema33.required((java.util.List<java.lang.String>) strList46);
        java.lang.String str51 = schema33.getTitle();
        schema33.setName("*/*");
        io.swagger.oas.models.media.Schema schema55 = schema33.maxProperties((java.lang.Integer) 100);
        java.lang.Object obj56 = null;
        boolean boolean57 = schema55.equals(obj56);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test09091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09091");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        strComparableSchema0.setProperties(strMap7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.properties(strMap10);
        java.lang.Boolean boolean12 = schema11.getUniqueItems();
        schema11.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        schema11.setMultipleOf(bigDecimal15);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema11.externalDocs(externalDocumentation17);
        java.lang.Boolean boolean19 = schema11.getNullable();
        strComparableSchema0.setNot(schema11);
        io.swagger.oas.models.media.Schema schema21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema11.not(schema21);
        io.swagger.oas.models.media.Schema schema24 = schema22.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema31.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML34 = schema33.getXml();
        java.lang.Integer int35 = schema33.getMaxProperties();
        io.swagger.oas.models.media.Schema schema37 = schema33.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema38 = schema22.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema22.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
    }

    @Test
    public void test09092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09092");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        schema26.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema26.minProperties((java.lang.Integer) 1);
        schema30.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test09093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09093");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList14 = strComparableSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.lang.String[] strArray34 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        strComparableSchema17.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = strComparableSchema17.getMaxLength();
        strComparableSchema17.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema42.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        strComparableSchema42.setExternalDocs(externalDocumentation54);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema42.format("");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema17.additionalProperties(schema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        strComparableSchema71.setDescription("hi!");
        strComparableSchema71.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema65.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema71);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = null;
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema61.externalDocs(externalDocumentation84);
        strComparableSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema89.minimum(bigDecimal90);
        io.swagger.oas.models.media.Schema schema93 = schema91.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal94 = null;
        schema91.setMultipleOf(bigDecimal94);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test09094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09094");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema2.deprecated((java.lang.Boolean) false);
        schema2.setDescription("#/components/schemas/");
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = schema2.getUniqueItems();
        java.math.BigDecimal bigDecimal19 = schema2.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test09095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09095");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        java.lang.Boolean boolean35 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int38 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.pattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal41 = null;
        strComparableSchema0.setMinimum(bigDecimal41);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + true + "'", boolean35, true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test09096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09096");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList14 = strComparableSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.lang.String[] strArray34 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        strComparableSchema17.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = strComparableSchema17.getMaxLength();
        strComparableSchema17.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema42.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        strComparableSchema42.setExternalDocs(externalDocumentation54);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema42.format("");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema17.additionalProperties(schema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        strComparableSchema71.setDescription("hi!");
        strComparableSchema71.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema65.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema71);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = null;
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema61.externalDocs(externalDocumentation84);
        strComparableSchema17.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema89.minimum(bigDecimal90);
        schema89.setFormat("#/components/schemas/hi!");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test09097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09097");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.lang.String str16 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema21.setExtensions(strMap25);
        strComparableSchema21.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema21.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema21.pattern("");
        java.lang.String str33 = strComparableSchema21.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        strComparableSchema34.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal45 = strComparableSchema34.getMultipleOf();
        java.lang.String str46 = strComparableSchema34.get$ref();
        java.lang.String[] strArray51 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        strComparableSchema34.setRequired((java.util.List<java.lang.String>) strList52);
        java.lang.Integer int55 = strComparableSchema34.getMaxLength();
        java.lang.Integer int56 = strComparableSchema34.getMaxProperties();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema34.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        strComparableSchema59.setDescription("hi!");
        strComparableSchema59.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal70 = strComparableSchema59.getMultipleOf();
        java.lang.String str71 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema schema72 = schema58.example((java.lang.Object) strComparableSchema59);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema59.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList82 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean83 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean84 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean85 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean86 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean87 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean88 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean89 = strComparableList82.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema74.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList82);
        strComparableSchema21.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList82);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList82);
        java.lang.Boolean boolean93 = strComparableSchema0.getExclusiveMaximum();
        java.lang.Integer int94 = strComparableSchema0.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(boolean93);
        org.junit.Assert.assertNull(int94);
    }

    @Test
    public void test09098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09098");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal52 = strComparableSchema41.getMultipleOf();
        java.lang.String str53 = strComparableSchema41.get$ref();
        java.lang.String[] strArray58 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        strComparableSchema41.setRequired((java.util.List<java.lang.String>) strList59);
        java.lang.Integer int62 = strComparableSchema41.getMaxLength();
        java.lang.Integer int63 = strComparableSchema41.getMaxProperties();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema41.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        strComparableSchema66.setDescription("hi!");
        strComparableSchema66.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal77 = strComparableSchema66.getMultipleOf();
        java.lang.String str78 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema schema79 = schema65.example((java.lang.Object) strComparableSchema66);
        io.swagger.oas.models.media.Schema schema81 = schema79.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML82 = schema81.getXml();
        io.swagger.oas.models.media.Schema schema84 = schema81.uniqueItems((java.lang.Boolean) true);
        schema40.setNot(schema84);
        io.swagger.oas.models.media.Discriminator discriminator86 = schema40.getDiscriminator();
        java.lang.String str87 = schema40.getName();
        io.swagger.oas.models.media.Schema schema89 = schema40.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(bigDecimal77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(xML82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(discriminator86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test09099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09099");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema37.getNot();
        io.swagger.oas.models.media.Schema schema40 = schema38.type("no description");
        io.swagger.oas.models.media.Schema schema42 = schema38.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 1);
        java.lang.Boolean boolean45 = schema42.getNullable();
        java.lang.String str46 = schema42.getDescription();
        io.swagger.oas.models.media.Schema schema48 = schema42.deprecated((java.lang.Boolean) false);
        java.lang.String str49 = schema48.get$ref();
        java.lang.Object obj50 = schema48.getExample();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(obj50);
    }

    @Test
    public void test09100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09100");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.lang.Integer int23 = schema22.getMaxItems();
        schema22.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema22.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.minimum(bigDecimal28);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09101");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        schema13.setFormat("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema13.discriminator(discriminator17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema21 = schema20.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test09102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09102");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema5.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal33 = strComparableSchema22.getMultipleOf();
        java.lang.String str34 = strComparableSchema22.get$ref();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema22.maximum(bigDecimal35);
        io.swagger.oas.models.media.Discriminator discriminator37 = strComparableSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema22.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema39.minProperties((java.lang.Integer) 0);
        schema21.setNot(schema39);
        io.swagger.oas.models.media.Schema schema44 = schema21.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema44.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema46.nullable((java.lang.Boolean) true);
        schema46.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str51 = schema46.getDescription();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
    }

    @Test
    public void test09103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09103");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.Boolean boolean4 = schema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema6 = schema2.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean7 = schema2.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
    }

    @Test
    public void test09104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09104");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        java.lang.String str11 = schema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = schema10.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal14 = schema10.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test09105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09105");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema0.setMinLength((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList13 = strComparableSchema0.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test09106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09106");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        schema24.setDiscriminator(discriminator27);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test09107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09107");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.lang.Object obj5 = null;
        schema2.setExample(obj5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray15 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray15);
        schema9.setExample((java.lang.Object) tagSetOptional16);
        io.swagger.oas.models.media.Schema schema19 = schema9.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.properties(strMap21);
        java.lang.Boolean boolean23 = schema22.getNullable();
        java.lang.String str24 = schema22.getType();
        schema22.setTitle("#/components/schemas/");
        schema22.setFormat("#/components/schemas/");
        schema22.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema19.not(schema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema33.setDescription("hi!");
        strComparableSchema33.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal44 = strComparableSchema33.getMultipleOf();
        java.lang.String str45 = strComparableSchema33.get$ref();
        java.lang.String[] strArray50 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        strComparableSchema33.setRequired((java.util.List<java.lang.String>) strList51);
        java.lang.Integer int54 = strComparableSchema33.getMaxLength();
        strComparableSchema33.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema33.$ref("#/components/schemas/");
        strComparableSchema33.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal61 = null;
        strComparableSchema33.setMinimum(bigDecimal61);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema33.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema33.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean67 = schema66.getReadOnly();
        io.swagger.oas.models.media.Schema schema68 = schema19.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str70 = strComparableSchema69.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema71.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema69.not((io.swagger.oas.models.media.Schema) strComparableSchema71);
        strComparableSchema69.setDescription("hi!");
        strComparableSchema69.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal80 = strComparableSchema69.getMultipleOf();
        java.lang.String str81 = strComparableSchema69.get$ref();
        java.lang.String[] strArray86 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        strComparableSchema69.setRequired((java.util.List<java.lang.String>) strList87);
        schema19.setRequired((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema91 = schema2.required((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema93 = schema91.pattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(tagSetOptional16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test09108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09108");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList10 = strComparableSchema2.getRequired();
        strComparableSchema2.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        strComparableSchema2.setExternalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema2.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09109");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray23 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        schema17.setExample((java.lang.Object) tagSetOptional24);
        io.swagger.oas.models.media.Schema schema27 = schema17.minItems((java.lang.Integer) 0);
        java.lang.String str28 = schema17.getPattern();
        io.swagger.oas.models.media.Schema schema29 = schema17.getNot();
        schema14.setExample((java.lang.Object) schema29);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(schema29);
    }

    @Test
    public void test09110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09110");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        schema24.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = schema24.minProperties((java.lang.Integer) 100);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList29 = schema24.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strComparableList29);
    }

    @Test
    public void test09111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09111");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = strComparableSchema0.getProperties();
        strComparableSchema0.setDescription("#/components/schemas/");
        java.lang.Boolean boolean18 = strComparableSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema21.setNullable((java.lang.Boolean) false);
        java.lang.String str34 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema21.name("");
        io.swagger.oas.models.media.Schema schema37 = null;
        schema36.setNot(schema37);
        java.lang.Boolean boolean39 = schema36.getReadOnly();
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema36.xml(xML40);
        java.lang.String str42 = schema36.getPattern();
        boolean boolean43 = strComparableSchema0.equals((java.lang.Object) schema36);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test09112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09112");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.String str17 = schema16.getTitle();
        java.lang.Integer int18 = schema16.getMaxProperties();
        io.swagger.oas.models.media.Schema schema20 = schema16.format("hi!");
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09113");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        io.swagger.oas.models.media.Schema schema9 = schema5.maxItems((java.lang.Integer) 1);
        java.lang.Boolean boolean10 = schema9.getWriteOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = schema9.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(strComparableList11);
    }

    @Test
    public void test09114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09114");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema27.setNullable((java.lang.Boolean) false);
        java.lang.String str40 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema27.name("");
        io.swagger.oas.models.media.Schema schema44 = schema42.minProperties((java.lang.Integer) 10);
        boolean boolean45 = schema26.equals((java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema47 = schema26.writeOnly((java.lang.Boolean) true);
        schema47.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema51 = schema47.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema47.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema47.externalDocs(externalDocumentation54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str57 = strComparableSchema56.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.not((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema56.setDescription("hi!");
        java.math.BigDecimal bigDecimal64 = null;
        strComparableSchema56.setMaximum(bigDecimal64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        strComparableSchema66.setDescription("hi!");
        strComparableSchema66.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal77 = strComparableSchema66.getMultipleOf();
        java.lang.String str78 = strComparableSchema66.get$ref();
        java.lang.String[] strArray83 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList84 = new java.util.ArrayList<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        strComparableSchema66.setRequired((java.util.List<java.lang.String>) strList84);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema56.required((java.util.List<java.lang.String>) strList84);
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema56.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema89.externalDocs(externalDocumentation90);
        java.math.BigDecimal bigDecimal92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema89.multipleOf(bigDecimal92);
        io.swagger.oas.models.media.Schema schema94 = schema55.not(schema93);
        io.swagger.oas.models.media.Schema schema96 = schema93.pattern("");
        java.lang.Boolean boolean97 = schema93.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(bigDecimal77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(boolean97);
    }

    @Test
    public void test09115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09115");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        java.lang.Boolean boolean10 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator11 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator12 = strComparableSchema0.getDiscriminator();
        java.lang.String str13 = strComparableSchema0.getPattern();
        strComparableSchema0.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09116");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.xml(xML20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.maxLength((java.lang.Integer) 0);
        java.lang.String str25 = schema24.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test09117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09117");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        schema46.setExtensions(strMap61);
        java.math.BigDecimal bigDecimal63 = null;
        schema46.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        strComparableSchema65.setDescription("hi!");
        strComparableSchema65.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema65.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        strComparableSchema65.setExternalDocs(externalDocumentation77);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema65.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema81 = schema46.example((java.lang.Object) schema80);
        io.swagger.oas.models.media.Schema schema82 = schema46.getNot();
        java.lang.Integer int83 = schema82.getMinLength();
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema82.multipleOf(bigDecimal84);
        java.math.BigDecimal bigDecimal86 = schema85.getMinimum();
        io.swagger.oas.models.media.Schema schema88 = schema85.maxProperties((java.lang.Integer) (-1));
        java.lang.String str89 = schema85.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(bigDecimal86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test09118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09118");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema0.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.readOnly((java.lang.Boolean) false);
        strComparableSchema0.setMinLength((java.lang.Integer) 10);
        java.lang.String str26 = strComparableSchema0.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "#/components/schemas/" + "'", str26, "#/components/schemas/");
    }

    @Test
    public void test09119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09119");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema16.writeOnly((java.lang.Boolean) false);
        java.lang.String str19 = schema18.getDescription();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = schema18.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.properties(strMap23);
        java.lang.Boolean boolean25 = schema24.getUniqueItems();
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal28 = null;
        schema24.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema24.externalDocs(externalDocumentation30);
        io.swagger.oas.annotations.servers.Server server32 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray33 = new io.swagger.oas.annotations.servers.Server[] { server32 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional34 = io.swagger.jaxrs2.OperationParser.getServers(serverArray33);
        boolean boolean35 = serverListOptional34.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        java.lang.String str42 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema36.getNot();
        boolean boolean44 = serverListOptional34.equals((java.lang.Object) schema43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema43.multipleOf(bigDecimal45);
        io.swagger.oas.models.media.Schema schema47 = schema24.not(schema46);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = schema46.getExternalDocs();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList49 = schema46.getEnum();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema46.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = schema18.addProperties("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.properties(strMap54);
        java.lang.Integer int56 = schema55.getMaxLength();
        io.swagger.oas.models.media.Schema schema58 = schema55.writeOnly((java.lang.Boolean) false);
        schema58.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema62 = schema58.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema62.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema65 = schema52.additionalProperties(schema64);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(serverArray33);
        org.junit.Assert.assertNotNull(serverListOptional34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(externalDocumentation48);
        org.junit.Assert.assertNull(strComparableList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test09120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09120");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema2.maxProperties((java.lang.Integer) 0);
        java.lang.Integer int29 = schema28.getMinItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema28.externalDocs(externalDocumentation30);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test09121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09121");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema2.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema2.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        java.lang.Integer int35 = strComparableSchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema schema51 = schema37.example((java.lang.Object) strComparableSchema38);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema38.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        schema53.setExternalDocs(externalDocumentation54);
        io.swagger.oas.models.media.Schema schema57 = schema53.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML58 = schema57.getXml();
        schema12.setDefault((java.lang.Object) xML58);
        java.math.BigDecimal bigDecimal60 = schema12.getMinimum();
        java.lang.String str61 = schema12.getTitle();
        schema12.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(xML58);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#/components/schemas/" + "'", str61, "#/components/schemas/");
    }

    @Test
    public void test09122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09122");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.discriminator(discriminator29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.example(obj33);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test09123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09123");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean6 = strComparableSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal9 = null;
        schema8.setMultipleOf(bigDecimal9);
        java.lang.String str11 = schema8.getPattern();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09124");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        strComparableSchema0.setProperties(strMap5);
        strComparableSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = strComparableSchema0.getMaxProperties();
        java.lang.Boolean boolean12 = strComparableSchema0.getDeprecated();
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test09125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09125");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema11 = schema9.description("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09126");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.addRequiredItem("");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setDescription("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema23.getNot();
        java.math.BigDecimal bigDecimal27 = schema23.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
    }

    @Test
    public void test09127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09127");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.String str25 = strComparableSchema0.toString();
        strComparableSchema0.setPattern("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj28 = strComparableSchema0.getExample();
        java.lang.String str29 = strComparableSchema0.getName();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str25, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test09128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09128");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema16.getNot();
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 1);
        schema19.setMaxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.maximum(bigDecimal22);
        java.math.BigDecimal bigDecimal24 = schema23.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
    }

    @Test
    public void test09129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09129");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        java.lang.Integer int15 = schema14.getMaxLength();
        schema14.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema19.setUniqueItems((java.lang.Boolean) false);
        java.lang.Integer int22 = schema19.getMinItems();
        io.swagger.oas.models.media.Schema schema24 = schema19.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test09130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09130");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional45 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema2.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList49 = schema48.getEnum();
        java.lang.Integer int50 = schema48.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        java.lang.String str57 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema51.getNot();
        schema48.setDefault((java.lang.Object) schema58);
        schema48.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strComparableList49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test09131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09131");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        strComparableSchema0.setMinProperties((java.lang.Integer) 100);
        strComparableSchema0.setMaxItems((java.lang.Integer) 10);
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test09132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09132");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.lang.Integer int33 = strComparableSchema10.getMaxLength();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema10.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML36 = null;
        strComparableSchema10.setXml(xML36);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test09133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09133");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str59 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema58.setDescription("hi!");
        strComparableSchema58.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema48.externalDocs(externalDocumentation71);
        strComparableSchema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema4.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str76 = strComparableSchema4.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema77.properties(strMap78);
        java.lang.Boolean boolean80 = schema79.getNullable();
        java.lang.Boolean boolean81 = schema79.getExclusiveMinimum();
        java.lang.Class<?> wildcardClass82 = schema79.getClass();
        strComparableSchema4.setDefault((java.lang.Object) wildcardClass82);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test09134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09134");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        schema17.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.properties(strMap23);
        java.lang.Boolean boolean25 = schema24.getNullable();
        java.lang.String str26 = schema24.getType();
        schema24.setTitle("#/components/schemas/");
        schema24.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema24.addRequiredItem("*/*");
        java.lang.String str33 = schema24.getName();
        io.swagger.oas.models.media.Schema schema35 = schema24.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList36 = schema24.getRequired();
        io.swagger.oas.models.media.Schema schema37 = schema17.additionalProperties(schema24);
        java.math.BigDecimal bigDecimal38 = null;
        schema17.setMaximum(bigDecimal38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        schema17.setExternalDocs(externalDocumentation40);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test09135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09135");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.List<java.lang.String> strList20 = strComparableSchema5.getRequired();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema5.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema5.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.properties(strMap26);
        java.lang.Boolean boolean28 = schema27.getNullable();
        java.lang.String str29 = schema27.getType();
        schema27.setTitle("#/components/schemas/");
        java.lang.Boolean boolean32 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema34 = schema27.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal37 = schema27.getMaximum();
        io.swagger.oas.models.media.Schema schema39 = schema27.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema27.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = strComparableSchema42.getExternalDocs();
        java.lang.Integer int44 = strComparableSchema42.getMinProperties();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema46.format("");
        java.lang.String str49 = schema46.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.properties(strMap51);
        java.lang.Boolean boolean53 = schema52.getUniqueItems();
        schema52.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal56 = null;
        schema52.setMultipleOf(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = schema52.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema59.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema59.title("hi!");
        java.lang.String str64 = schema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = strComparableSchema65.getExternalDocs();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema65.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.not((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema70.setDescription("hi!");
        strComparableSchema70.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema70.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = strComparableSchema70.getProperties();
        io.swagger.oas.models.media.Schema schema84 = schema68.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean85 = schema84.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator86 = null;
        schema84.setDiscriminator(discriminator86);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema84.getProperties();
        io.swagger.oas.models.media.Schema schema89 = schema63.properties(strMap88);
        schema46.setProperties(strMap88);
        io.swagger.oas.models.media.Schema schema91 = schema27.properties(strMap88);
        strComparableSchema5.setProperties(strMap88);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test09136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09136");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal19 = strComparableSchema8.getMultipleOf();
        strComparableSchema8.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str22 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema8.maxItems((java.lang.Integer) 0);
        strComparableSchema8.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema8.setMinProperties((java.lang.Integer) 0);
        schema7.setExample((java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema36.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema36.name("hi!");
        java.lang.Object obj57 = strComparableSchema36.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = strComparableSchema36.getProperties();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema36.pattern("");
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.maximum(bigDecimal61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str64 = strComparableSchema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        strComparableSchema63.setDescription("hi!");
        strComparableSchema63.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal74 = strComparableSchema63.getMultipleOf();
        java.lang.String str75 = strComparableSchema63.get$ref();
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema63.maximum(bigDecimal76);
        io.swagger.oas.models.media.Discriminator discriminator78 = strComparableSchema63.getDiscriminator();
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema63.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema82 = schema80.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal83 = schema80.getMinimum();
        java.util.List<java.lang.String> strList84 = schema80.getRequired();
        java.math.BigDecimal bigDecimal85 = schema80.getMinimum();
        schema62.setDefault((java.lang.Object) schema80);
        schema62.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema89 = schema7.example((java.lang.Object) schema62);
        java.lang.Integer int90 = schema62.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(bigDecimal74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(discriminator78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(bigDecimal83);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNull(bigDecimal85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(int90);
    }

    @Test
    public void test09137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09137");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.String> strList7 = strComparableSchema0.getRequired();
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.maximum(bigDecimal10);
        schema11.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test09138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09138");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.minProperties((java.lang.Integer) 1);
        java.lang.String str31 = strComparableSchema0.getName();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test09139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09139");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = strComparableSchema4.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable6 = strComparableSchema4.getDefault();
        boolean boolean8 = strComparableSchema4.equals((java.lang.Object) (short) 10);
        strComparableSchema4.setNullable((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = strComparableSchema4.getEnum();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema4.multipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema4.maxLength((java.lang.Integer) 10);
        schema2.setExample((java.lang.Object) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema17.setType("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        strComparableSchema17.setProperties(strMap22);
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema17.setMinimum(bigDecimal24);
        schema2.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema schema28 = schema2.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal29 = null;
        schema28.setMinimum(bigDecimal29);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(externalDocumentation5);
        org.junit.Assert.assertNull(strComparable6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strComparableList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09140");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        io.swagger.oas.annotations.media.Content[] contentArray8 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components13);
        boolean boolean15 = schema5.equals((java.lang.Object) contentArray8);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional17 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional19 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional21 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional23 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional25 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional27 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional29 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional31 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional33 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional35 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional37 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components36);
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional39 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components38);
        io.swagger.oas.models.Components components40 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional41 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components40);
        java.util.Optional<io.swagger.oas.annotations.media.Content[]> contentArrayOptional42 = java.util.Optional.of(contentArray8);
        java.util.Optional<io.swagger.oas.annotations.media.Content[]> contentArrayOptional43 = java.util.Optional.of(contentArray8);
        io.swagger.oas.models.Components components44 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional45 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components44);
        io.swagger.oas.models.Components components46 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional47 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components46);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(contentArray8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(contentOptional17);
        org.junit.Assert.assertNotNull(contentOptional19);
        org.junit.Assert.assertNotNull(contentOptional21);
        org.junit.Assert.assertNotNull(contentOptional23);
        org.junit.Assert.assertNotNull(contentOptional25);
        org.junit.Assert.assertNotNull(contentOptional27);
        org.junit.Assert.assertNotNull(contentOptional29);
        org.junit.Assert.assertNotNull(contentOptional31);
        org.junit.Assert.assertNotNull(contentOptional33);
        org.junit.Assert.assertNotNull(contentOptional35);
        org.junit.Assert.assertNotNull(contentOptional37);
        org.junit.Assert.assertNotNull(contentOptional39);
        org.junit.Assert.assertNotNull(contentOptional41);
        org.junit.Assert.assertNotNull(contentArrayOptional42);
        org.junit.Assert.assertNotNull(contentArrayOptional43);
        org.junit.Assert.assertNotNull(contentOptional45);
        org.junit.Assert.assertNotNull(contentOptional47);
    }

    @Test
    public void test09141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09141");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal12 = strComparableSchema0.getMultipleOf();
        java.lang.Object obj13 = strComparableSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema14.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = strComparableSchema14.getProperties();
        java.lang.Boolean boolean28 = strComparableSchema14.getReadOnly();
        strComparableSchema14.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean31 = strComparableSchema14.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema32.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        strComparableSchema32.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.XML xML46 = strComparableSchema32.getXml();
        io.swagger.oas.models.media.XML xML47 = strComparableSchema32.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.lang.String str54 = strComparableSchema48.get$ref();
        java.lang.String[] strArray59 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional62 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema48.required((java.util.List<java.lang.String>) strList60);
        strComparableSchema48.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        strComparableSchema66.setDescription("hi!");
        java.math.BigDecimal bigDecimal74 = null;
        strComparableSchema66.setMaximum(bigDecimal74);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema66.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList78 = strComparableSchema66.getRequired();
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema48.required(strList78);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema32.required(strList78);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema14.required(strList78);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = strComparableSchema14.getExtensions();
        strComparableSchema0.setExtensions(strMap82);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNull(xML46);
        org.junit.Assert.assertNull(xML47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strMap82);
    }

    @Test
    public void test09142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09142");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema2.maxProperties((java.lang.Integer) 10);
        java.lang.Integer int7 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.multipleOf(bigDecimal43);
        io.swagger.oas.models.media.Schema schema45 = schema17.not(schema44);
        io.swagger.oas.models.media.Schema schema47 = schema44.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.lang.String str54 = strComparableSchema48.get$ref();
        java.lang.String[] strArray59 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional62 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema48.required((java.util.List<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema64 = schema44.required((java.util.List<java.lang.String>) strList60);
        java.util.Optional<java.util.Collection<java.lang.String>> strCollectionOptional65 = java.util.Optional.of((java.util.Collection<java.lang.String>) strList60);
        java.util.Optional<java.util.ArrayList<java.lang.String>> strListOptional66 = java.util.Optional.ofNullable(strList60);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional67 = java.util.Optional.of((java.util.List<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema68 = schema2.required((java.util.List<java.lang.String>) strList60);
        schema68.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strCollectionOptional65);
        org.junit.Assert.assertNotNull(strListOptional66);
        org.junit.Assert.assertNotNull(strListOptional67);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test09143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09143");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = strComparableSchema8.getExternalDocs();
        io.swagger.oas.models.media.XML xML24 = strComparableSchema8.getXml();
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema8.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema8.getNot();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNull(xML24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test09144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09144");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean20 = strComparableSchema0.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.externalDocs(externalDocumentation21);
        schema22.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = schema22.pattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema22.getAdditionalProperties();
        schema22.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test09145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09145");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.lang.String str26 = strComparableSchema14.get$ref();
        java.lang.String[] strArray31 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        strComparableSchema14.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = strComparableSchema14.getMaxLength();
        java.lang.Integer int36 = strComparableSchema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        schema38.setMinLength((java.lang.Integer) 100);
        strComparableSchema2.setNot(schema38);
        java.math.BigDecimal bigDecimal42 = schema38.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal42);
    }

    @Test
    public void test09146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09146");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema0.setMinimum(bigDecimal28);
        java.math.BigDecimal bigDecimal30 = strComparableSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional40 = io.swagger.jaxrs2.OperationParser.getTags(strArray39);
        schema33.setExample((java.lang.Object) tagSetOptional40);
        io.swagger.oas.models.media.Schema schema43 = schema33.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema0.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.not((io.swagger.oas.models.media.Schema) strComparableSchema62);
        strComparableSchema60.setDescription("hi!");
        strComparableSchema60.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema54.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = null;
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema50.externalDocs(externalDocumentation73);
        java.lang.Object obj75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema74.example(obj75);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList77 = schema74.getEnum();
        io.swagger.oas.models.media.Schema schema79 = schema74.minProperties((java.lang.Integer) 10);
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) schema74);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema74.externalDocs(externalDocumentation81);
        java.math.BigDecimal bigDecimal83 = schema82.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(tagSetOptional40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(strComparableList77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(bigDecimal83);
    }

    @Test
    public void test09147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09147");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        schema13.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = schema13.maxLength((java.lang.Integer) 100);
        schema13.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.maxLength((java.lang.Integer) 0);
        java.lang.String str24 = schema23.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test09148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09148");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        java.math.BigDecimal bigDecimal46 = null;
        schema45.setMultipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema45.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = schema45.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema45.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema55 = schema45.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test09149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09149");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        java.lang.Integer int39 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.lang.String str46 = strComparableSchema40.get$ref();
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional54 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema40.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = schema38.required((java.util.List<java.lang.String>) strList52);
        schema38.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str59 = schema38.getPattern();
        io.swagger.oas.models.media.Schema schema61 = schema38.writeOnly((java.lang.Boolean) true);
        java.lang.Integer int62 = schema38.getMaxItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
    }

    @Test
    public void test09150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09150");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int23 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema25.name("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09151");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        java.util.List<java.lang.String> strList8 = strComparableSchema2.getRequired();
        strComparableSchema2.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator11 = strComparableSchema2.getDiscriminator();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09152");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        schema36.setProperties(strMap38);
        java.lang.String str40 = schema36.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal52 = strComparableSchema41.getMultipleOf();
        java.lang.String str53 = strComparableSchema41.get$ref();
        java.lang.String[] strArray58 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        strComparableSchema41.setRequired((java.util.List<java.lang.String>) strList59);
        java.lang.Integer int62 = strComparableSchema41.getMaxLength();
        strComparableSchema41.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema41.getNot();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema41.deprecated((java.lang.Boolean) false);
        strComparableSchema41.setMaxItems((java.lang.Integer) 1);
        java.lang.Boolean boolean70 = strComparableSchema41.getNullable();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema41.getNot();
        io.swagger.oas.models.media.Schema schema72 = schema36.example((java.lang.Object) schema71);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema73.properties(strMap74);
        java.lang.Boolean boolean76 = schema75.getUniqueItems();
        schema75.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal79 = null;
        schema75.setMultipleOf(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = schema75.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema84 = schema82.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema82.xml(xML85);
        io.swagger.oas.models.media.Schema schema87 = schema72.example((java.lang.Object) xML85);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test09153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09153");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        boolean boolean2 = serverListOptional1.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList4 = serverListOptional1.orElse(serverList3);
        io.swagger.oas.models.servers.Server[] serverArray5 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList6 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList6, serverArray5);
        java.util.List<io.swagger.oas.models.servers.Server> serverList8 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList6);
        io.swagger.oas.annotations.servers.Server[] serverArray9 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray9);
        java.lang.String str11 = serverListOptional10.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray12 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray12);
        java.lang.String str14 = serverListOptional13.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray15 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray15);
        boolean boolean17 = serverListOptional16.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList18 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList19 = serverListOptional16.orElse(serverList18);
        io.swagger.oas.models.servers.Server[] serverArray20 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList21 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList21, serverArray20);
        java.util.List<io.swagger.oas.models.servers.Server> serverList23 = serverListOptional16.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList21);
        java.util.List<io.swagger.oas.models.servers.Server> serverList24 = serverListOptional13.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList21);
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional10.orElse(serverList24);
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional1.orElse(serverList24);
        boolean boolean27 = serverListOptional1.isPresent();
        java.lang.String str28 = serverListOptional1.toString();
        java.util.List<io.swagger.oas.models.servers.Server> serverList29 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList30 = serverListOptional1.orElse(serverList29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema31.setDescription("hi!");
        java.math.BigDecimal bigDecimal39 = null;
        strComparableSchema31.setMaximum(bigDecimal39);
        strComparableSchema31.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema31.readOnly((java.lang.Boolean) true);
        java.lang.String str45 = strComparableSchema31.getTitle();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema31.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = schema47.getNot();
        io.swagger.oas.models.media.Schema schema50 = schema48.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema48.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList53 = schema48.getRequired();
        boolean boolean54 = serverListOptional1.equals((java.lang.Object) strList53);
        boolean boolean55 = serverListOptional1.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(serverList4);
        org.junit.Assert.assertNotNull(serverArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(serverList8);
        org.junit.Assert.assertNotNull(serverArray9);
        org.junit.Assert.assertNotNull(serverListOptional10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Optional.empty" + "'", str11, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray12);
        org.junit.Assert.assertNotNull(serverListOptional13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray15);
        org.junit.Assert.assertNotNull(serverListOptional16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(serverList19);
        org.junit.Assert.assertNotNull(serverArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(serverList23);
        org.junit.Assert.assertNotNull(serverList24);
        org.junit.Assert.assertNotNull(serverList25);
        org.junit.Assert.assertNotNull(serverList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Optional.empty" + "'", str28, "Optional.empty");
        org.junit.Assert.assertNull(serverList30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "*/*" + "'", str45, "*/*");
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test09154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09154");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setMinItems((java.lang.Integer) 1);
        java.lang.String str3 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema4.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strComparableSchema4.getProperties();
        java.lang.Boolean boolean18 = strComparableSchema4.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema4);
        java.lang.String str22 = strComparableSchema4.getName();
        strComparableSchema4.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema4.setMultipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema4.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal29 = null;
        strComparableSchema4.setMinimum(bigDecimal29);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str3, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09155");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        java.math.BigDecimal bigDecimal38 = null;
        schema37.setMaximum(bigDecimal38);
        schema37.setMaxLength((java.lang.Integer) (-1));
        schema37.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int44 = schema37.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int44);
    }

    @Test
    public void test09156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09156");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        java.lang.String str5 = serverListOptional4.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        boolean boolean8 = serverListOptional7.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList9 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList10 = serverListOptional7.orElse(serverList9);
        io.swagger.oas.models.servers.Server[] serverArray11 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList12 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList12, serverArray11);
        java.util.List<io.swagger.oas.models.servers.Server> serverList14 = serverListOptional7.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList12);
        java.util.List<io.swagger.oas.models.servers.Server> serverList15 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList12);
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = serverListOptional1.orElse(serverList15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = null;
        strComparableSchema19.setExtensions(strMap23);
        strComparableSchema19.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int27 = strComparableSchema19.getMaxItems();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema19.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        java.math.BigDecimal bigDecimal38 = null;
        strComparableSchema30.setMaximum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema30.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList42 = strComparableSchema30.getRequired();
        io.swagger.oas.models.media.Schema schema43 = schema29.required(strList42);
        boolean boolean44 = serverListOptional1.equals((java.lang.Object) strList42);
        io.swagger.oas.annotations.servers.Server[] serverArray45 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional46 = io.swagger.jaxrs2.OperationParser.getServers(serverArray45);
        java.lang.String str47 = serverListOptional46.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray48 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional49 = io.swagger.jaxrs2.OperationParser.getServers(serverArray48);
        boolean boolean50 = serverListOptional49.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList51 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList52 = serverListOptional49.orElse(serverList51);
        io.swagger.oas.models.servers.Server[] serverArray53 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList54 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList54, serverArray53);
        java.util.List<io.swagger.oas.models.servers.Server> serverList56 = serverListOptional49.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList54);
        java.util.List<io.swagger.oas.models.servers.Server> serverList57 = serverListOptional46.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList54);
        io.swagger.oas.annotations.servers.Server[] serverArray58 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional59 = io.swagger.jaxrs2.OperationParser.getServers(serverArray58);
        boolean boolean60 = serverListOptional59.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList61 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList62 = serverListOptional59.orElse(serverList61);
        io.swagger.oas.models.servers.Server[] serverArray63 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList64 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList64, serverArray63);
        java.util.List<io.swagger.oas.models.servers.Server> serverList66 = serverListOptional59.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList64);
        java.util.List<io.swagger.oas.models.servers.Server> serverList67 = serverListOptional46.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList64);
        java.lang.String str68 = serverListOptional46.toString();
        io.swagger.oas.models.servers.Server[] serverArray69 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList70 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList70, serverArray69);
        java.util.List<io.swagger.oas.models.servers.Server> serverList72 = serverListOptional46.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList70);
        io.swagger.oas.models.servers.Server[] serverArray73 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList74 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList74, serverArray73);
        java.util.List<io.swagger.oas.models.servers.Server> serverList76 = serverListOptional46.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList74);
        io.swagger.oas.models.servers.Server[] serverArray77 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList78 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList78, serverArray77);
        java.util.List<io.swagger.oas.models.servers.Server> serverList80 = serverListOptional46.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList78);
        java.util.List<io.swagger.oas.models.servers.Server> serverList81 = serverListOptional1.orElse(serverList80);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = strComparableSchema82.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable84 = strComparableSchema82.getDefault();
        java.lang.Integer int85 = strComparableSchema82.getMinProperties();
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema82.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = null;
        strComparableSchema82.setExtensions(strMap88);
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema82.exclusiveMinimum((java.lang.Boolean) true);
        strComparableSchema82.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean94 = serverListOptional1.equals((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Optional.empty" + "'", str5, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(serverList10);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(serverList14);
        org.junit.Assert.assertNotNull(serverList15);
        org.junit.Assert.assertNotNull(serverList16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(serverArray45);
        org.junit.Assert.assertNotNull(serverListOptional46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Optional.empty" + "'", str47, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray48);
        org.junit.Assert.assertNotNull(serverListOptional49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(serverList52);
        org.junit.Assert.assertNotNull(serverArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serverList56);
        org.junit.Assert.assertNotNull(serverList57);
        org.junit.Assert.assertNotNull(serverArray58);
        org.junit.Assert.assertNotNull(serverListOptional59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(serverList62);
        org.junit.Assert.assertNotNull(serverArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(serverList66);
        org.junit.Assert.assertNotNull(serverList67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Optional.empty" + "'", str68, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(serverList72);
        org.junit.Assert.assertNotNull(serverArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(serverList76);
        org.junit.Assert.assertNotNull(serverArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(serverList80);
        org.junit.Assert.assertNotNull(serverList81);
        org.junit.Assert.assertNull(externalDocumentation83);
        org.junit.Assert.assertNull(strComparable84);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test09157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09157");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.type("#/components/schemas/");
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.xml(xML11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema13.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        strComparableSchema13.setExternalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema13.format("");
        strComparableSchema13.setReadOnly((java.lang.Boolean) true);
        strComparableSchema13.setDefault((java.lang.Object) 0.0d);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema13.maximum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList36 = strComparableSchema35.getRequired();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema35.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal50 = strComparableSchema39.getMultipleOf();
        java.lang.String str51 = strComparableSchema39.get$ref();
        java.lang.String[] strArray56 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        strComparableSchema39.setRequired((java.util.List<java.lang.String>) strList57);
        java.lang.Integer int60 = strComparableSchema39.getMaxLength();
        strComparableSchema39.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str65 = strComparableSchema64.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema64.not((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema64.setDescription("hi!");
        strComparableSchema64.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema64.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation76 = null;
        strComparableSchema64.setExternalDocs(externalDocumentation76);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema64.format("");
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema39.additionalProperties(schema79);
        java.lang.Boolean boolean81 = schema80.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = schema80.getExtensions();
        schema34.setExtensions(strMap82);
        schema12.setExtensions(strMap82);
        java.math.BigDecimal bigDecimal85 = null;
        schema12.setMultipleOf(bigDecimal85);
        io.swagger.oas.models.media.Schema schema88 = schema12.format(",");
        schema12.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(schema75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test09158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09158");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema3.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.externalDocs(externalDocumentation6);
        java.lang.Boolean boolean8 = schema5.getExclusiveMaximum();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
    }

    @Test
    public void test09159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09159");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.media.Content[] contentArray13 = null;
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional15 = io.swagger.jaxrs2.OperationParser.getContents(contentArray13, components14);
        boolean boolean16 = serverListOptional1.equals((java.lang.Object) contentArray13);
        boolean boolean17 = serverListOptional1.isPresent();
        boolean boolean18 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.properties(strMap20);
        java.lang.Boolean boolean22 = schema21.getUniqueItems();
        schema21.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema27.setExtensions(strMap31);
        strComparableSchema27.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.minimum(bigDecimal35);
        java.math.BigDecimal bigDecimal37 = strComparableSchema27.getMinimum();
        io.swagger.oas.models.media.Schema schema38 = schema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.media.Schema schema40 = schema21.maxProperties((java.lang.Integer) 1);
        schema40.setNullable((java.lang.Boolean) true);
        schema40.setWriteOnly((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList45 = schema40.getRequired();
        boolean boolean46 = serverListOptional1.equals((java.lang.Object) strList45);
        boolean boolean47 = serverListOptional1.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(contentOptional15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test09160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09160");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal15 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.xml(xML16);
        java.lang.Integer int18 = schema17.getMinProperties();
        java.lang.Integer int19 = schema17.getMinProperties();
        java.lang.Object obj20 = schema17.getExample();
        io.swagger.oas.models.media.Schema schema22 = schema17.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema25.setExtensions(strMap29);
        strComparableSchema25.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        schema36.setProperties(strMap37);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.multipleOf(bigDecimal39);
        io.swagger.oas.models.media.Schema schema41 = schema36.getAdditionalProperties();
        schema17.setExample((java.lang.Object) schema36);
        schema36.setNullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal45 = schema36.getMultipleOf();
        java.lang.Boolean boolean46 = schema36.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + false + "'", boolean46, false);
    }

    @Test
    public void test09161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09161");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        java.lang.String str8 = strComparableSchema2.getDescription();
        strComparableSchema2.setFormat("#/components/schemas/");
        java.lang.String str11 = strComparableSchema2.getDescription();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.name("");
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.xml(xML14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.writeOnly((java.lang.Boolean) true);
        schema17.setDeprecated((java.lang.Boolean) true);
        schema17.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str24 = schema17.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test09162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09162");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        schema2.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.maximum(bigDecimal11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        schema14.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09163");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        schema15.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str18 = schema15.getName();
        io.swagger.oas.models.media.Schema schema20 = schema15.maxItems((java.lang.Integer) (-1));
        schema20.setMaxProperties((java.lang.Integer) 10);
        schema20.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema27.setExtensions(strMap31);
        strComparableSchema27.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int35 = strComparableSchema27.getMaxItems();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema27.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema38 = schema20.not(schema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema39.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = strComparableSchema39.getProperties();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema39.type("");
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema39.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema39.format("*/*");
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.minimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = schema58.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema58.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema20.additionalProperties(schema64);
        java.util.List<java.lang.String> strList66 = schema64.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strList66);
    }

    @Test
    public void test09164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09164");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        java.lang.Object obj32 = schema31.getExample();
        schema31.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema31.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema31.setExclusiveMaximum((java.lang.Boolean) true);
        schema31.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test09165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09165");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema15.nullable((java.lang.Boolean) true);
        java.lang.String str18 = schema15.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema31.setDescription("hi!");
        strComparableSchema31.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema21.externalDocs(externalDocumentation44);
        java.lang.Object obj46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.example(obj46);
        java.lang.Object obj48 = schema45.getExample();
        java.lang.Integer int49 = schema45.getMaxProperties();
        io.swagger.oas.models.media.Schema schema51 = schema45.addRequiredItem("no description");
        schema45.setExclusiveMinimum((java.lang.Boolean) false);
        schema45.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema45.description("");
        schema15.setAdditionalProperties(schema45);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test09166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09166");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.String str40 = strComparableSchema34.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional48 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema33.required((java.util.List<java.lang.String>) strList46);
        java.lang.String str51 = schema33.getTitle();
        java.math.BigDecimal bigDecimal52 = schema33.getMinimum();
        io.swagger.oas.models.media.Schema schema54 = schema33.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema56 = schema33.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test09167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09167");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList25 = strComparableSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strComparableList25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test09168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09168");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Integer int15 = strComparableSchema0.getMinLength();
        strComparableSchema0.setName("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.maxItems((java.lang.Integer) 1);
        schema20.setMinItems((java.lang.Integer) (-1));
        java.util.Optional<java.lang.Object> objOptional23 = java.util.Optional.ofNullable((java.lang.Object) schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = strComparableSchema24.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable26 = strComparableSchema24.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema33.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        java.lang.Boolean boolean52 = strComparableSchema29.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList61 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean62 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean63 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean64 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean65 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean66 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean67 = strComparableList61.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean68 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean69 = strComparableList61.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema29.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList61);
        strComparableSchema24.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList61);
        schema20.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList61);
        io.swagger.oas.models.media.Schema schema74 = schema20.description("hi!");
        schema20.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(objOptional23);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNull(strComparable26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test09169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09169");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema44.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setNullable((java.lang.Boolean) false);
        java.lang.String str60 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema47.name("");
        java.math.BigDecimal bigDecimal63 = null;
        strComparableSchema47.setMinimum(bigDecimal63);
        java.lang.Boolean boolean65 = strComparableSchema47.getReadOnly();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema47.description("*/*");
        boolean boolean68 = schema46.equals((java.lang.Object) strComparableSchema47);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema47.multipleOf(bigDecimal69);
        io.swagger.oas.models.media.XML xML71 = null;
        schema70.setXml(xML71);
        io.swagger.oas.models.media.Schema schema74 = schema70.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal75 = schema74.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
    }

    @Test
    public void test09170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09170");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        java.lang.Boolean boolean4 = schema2.getDeprecated();
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.minimum(bigDecimal5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.maximum(bigDecimal7);
        java.lang.Integer int9 = schema8.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test09171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09171");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema21 = schema2.maxProperties((java.lang.Integer) 1);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList22 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema24 = schema21.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strComparableList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09172");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema25.setNullable((java.lang.Boolean) true);
        strComparableSchema25.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int42 = strComparableSchema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema34.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        java.math.BigDecimal bigDecimal53 = null;
        strComparableSchema45.setMaximum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema45.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList57 = strComparableSchema45.getRequired();
        io.swagger.oas.models.media.Schema schema58 = schema44.required(strList57);
        strComparableSchema25.setRequired(strList57);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional60 = java.util.Optional.of(strList57);
        strComparableSchema0.setRequired(strList57);
        java.lang.Boolean boolean62 = strComparableSchema0.getWriteOnly();
        java.lang.String str63 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema65.setFormat("");
        java.math.BigDecimal bigDecimal68 = schema65.getMinimum();
        java.lang.String str69 = schema65.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strListOptional60);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(bigDecimal68);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test09173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09173");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxProperties((java.lang.Integer) 0);
        java.lang.Integer int7 = schema6.getMinProperties();
        java.lang.Integer int8 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema9.setDescription("hi!");
        java.lang.Integer int17 = strComparableSchema9.getMinItems();
        strComparableSchema9.set$ref(",");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema9.exclusiveMaximum((java.lang.Boolean) false);
        schema6.setNot(schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema6.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList26 = strComparableSchema25.getRequired();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema25.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal40 = strComparableSchema29.getMultipleOf();
        java.lang.String str41 = strComparableSchema29.get$ref();
        java.lang.String[] strArray46 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        strComparableSchema29.setRequired((java.util.List<java.lang.String>) strList47);
        java.lang.Integer int50 = strComparableSchema29.getMaxLength();
        strComparableSchema29.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        strComparableSchema54.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema54.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        strComparableSchema54.setExternalDocs(externalDocumentation66);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema54.format("");
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema29.additionalProperties(schema69);
        java.math.BigDecimal bigDecimal71 = null;
        schema70.setMultipleOf(bigDecimal71);
        io.swagger.oas.models.media.Schema schema74 = schema70.exclusiveMaximum((java.lang.Boolean) false);
        schema70.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema78 = schema70.exclusiveMaximum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList79 = schema78.getRequired();
        java.util.Optional<java.util.List<java.lang.String>> strListOptional80 = java.util.Optional.of(strList79);
        io.swagger.oas.models.media.Schema schema81 = schema6.required(strList79);
        java.lang.String str82 = schema6.getFormat();
        java.lang.Boolean boolean83 = schema6.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(strListOptional80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(boolean83);
    }

    @Test
    public void test09174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09174");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = schema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.not(schema7);
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        schema8.setMinLength((java.lang.Integer) 10);
        java.lang.String str13 = schema8.getTitle();
        io.swagger.oas.models.media.Schema schema15 = schema8.addRequiredItem("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal16 = schema15.getMaximum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList17 = schema15.getEnum();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(strComparableList17);
    }

    @Test
    public void test09175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09175");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal23 = strComparableSchema12.getMultipleOf();
        java.lang.String str24 = strComparableSchema12.get$ref();
        java.lang.String[] strArray29 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        strComparableSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int33 = strComparableSchema12.getMaxLength();
        java.lang.Integer int34 = strComparableSchema12.getMaxProperties();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema12.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal48 = strComparableSchema37.getMultipleOf();
        java.lang.String str49 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema schema50 = schema36.example((java.lang.Object) strComparableSchema37);
        java.lang.Integer int51 = schema50.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.lang.String str58 = strComparableSchema52.get$ref();
        java.lang.String[] strArray63 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional66 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema52.required((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema68 = schema50.required((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema70 = schema68.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema11.additionalProperties(schema68);
        io.swagger.oas.models.media.Schema schema73 = schema71.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int74 = schema73.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
    }

    @Test
    public void test09176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09176");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema0.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Integer int24 = schema23.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test09177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09177");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.name("hi!");
        strComparableSchema6.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        schema33.setFormat("#/components/schemas/");
        java.util.List<java.lang.String> strList40 = schema33.getRequired();
        boolean boolean41 = strComparableSchema6.equals((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = strComparableSchema42.getExternalDocs();
        java.lang.Integer int44 = strComparableSchema42.getMinProperties();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema42.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema46.format("");
        java.lang.String str49 = schema46.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.properties(strMap51);
        java.lang.Boolean boolean53 = schema52.getUniqueItems();
        schema52.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal56 = null;
        schema52.setMultipleOf(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = schema52.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema59.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema59.title("hi!");
        java.lang.String str64 = schema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = strComparableSchema65.getExternalDocs();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema65.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.not((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema70.setDescription("hi!");
        strComparableSchema70.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema70.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = strComparableSchema70.getProperties();
        io.swagger.oas.models.media.Schema schema84 = schema68.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean85 = schema84.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator86 = null;
        schema84.setDiscriminator(discriminator86);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema84.getProperties();
        io.swagger.oas.models.media.Schema schema89 = schema63.properties(strMap88);
        schema46.setProperties(strMap88);
        schema46.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema93 = strComparableSchema6.example((java.lang.Object) schema46);
        io.swagger.oas.models.media.Schema schema95 = schema93.maxProperties((java.lang.Integer) 100);
        java.lang.Integer int96 = schema93.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(int96);
    }

    @Test
    public void test09178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09178");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema0.getEnum();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09179");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema6.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable8 = strComparableSchema6.getDefault();
        java.lang.Integer int9 = strComparableSchema6.getMinProperties();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.minItems((java.lang.Integer) 0);
        strComparableSchema0.setDefault((java.lang.Object) strComparableSchema6);
        strComparableSchema6.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal27 = strComparableSchema16.getMultipleOf();
        java.lang.String str28 = strComparableSchema16.get$ref();
        java.lang.String[] strArray33 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        strComparableSchema16.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.Integer int37 = strComparableSchema16.getMaxLength();
        strComparableSchema16.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema40.setDescription("hi!");
        strComparableSchema40.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal51 = strComparableSchema40.getMultipleOf();
        java.lang.String str52 = strComparableSchema40.get$ref();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema40.maximum(bigDecimal53);
        io.swagger.oas.models.media.Discriminator discriminator55 = strComparableSchema40.getDiscriminator();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema16.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str58 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str64 = strComparableSchema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str70 = strComparableSchema69.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema71.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema69.not((io.swagger.oas.models.media.Schema) strComparableSchema71);
        strComparableSchema69.setDescription("hi!");
        strComparableSchema69.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema63.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema69);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema81.multipleOf(bigDecimal82);
        java.lang.Integer int84 = schema83.getMaxItems();
        strComparableSchema16.setAdditionalProperties(schema83);
        io.swagger.oas.models.media.Schema schema87 = schema83.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema89 = schema83.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema90 = strComparableSchema6.addProperties("", schema83);
        io.swagger.oas.models.media.Schema schema92 = schema83.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean93 = schema92.getReadOnly();
        schema92.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML96 = schema92.getXml();
        java.lang.String str97 = schema92.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(strComparable8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(boolean93);
        org.junit.Assert.assertNull(xML96);
        org.junit.Assert.assertNull(str97);
    }

    @Test
    public void test09180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09180");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.annotations.links.Link[] linkArray10 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray10);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray10);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray10);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray10);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray10);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional16 = java.util.Optional.ofNullable(linkArray10);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray10);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray10);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray10);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray10);
        io.swagger.oas.models.media.Schema schema21 = schema9.example((java.lang.Object) strMap20);
        schema21.setName("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(linkArray10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(linkArrayOptional16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test09181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09181");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        strComparableSchema0.setName("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation20);
        java.lang.Boolean boolean22 = strComparableSchema0.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal34 = strComparableSchema23.getMultipleOf();
        java.lang.String str35 = strComparableSchema23.get$ref();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema23.maximum(bigDecimal36);
        strComparableSchema23.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean40 = strComparableSchema23.getWriteOnly();
        strComparableSchema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema23.discriminator(discriminator43);
        strComparableSchema0.setDefault((java.lang.Object) strComparableSchema23);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test09182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09182");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema24.setExternalDocs(externalDocumentation25);
        java.lang.String str27 = schema24.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        java.math.BigDecimal bigDecimal36 = null;
        strComparableSchema28.setMaximum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        java.lang.String[] strArray55 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        strComparableSchema38.setRequired((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema28.required((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema28.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.externalDocs(externalDocumentation62);
        java.lang.Boolean boolean64 = schema63.getUniqueItems();
        io.swagger.oas.models.media.Schema schema65 = schema24.example((java.lang.Object) boolean64);
        io.swagger.oas.models.media.Schema schema67 = schema24.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int68 = schema67.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
    }

    @Test
    public void test09183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09183");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema14.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema22.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator35 = strComparableSchema22.getDiscriminator();
        strComparableSchema14.addExtension("Optional.empty", (java.lang.Object) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.lang.Object obj38 = strComparableSchema14.getExample();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema43.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema49 = schema45.maxProperties((java.lang.Integer) 100);
        strComparableSchema14.setDefault((java.lang.Object) schema49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema14.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(obj38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test09184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09184");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        strComparableSchema4.setDescription("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema4.getAdditionalProperties();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema31);
    }

    @Test
    public void test09185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09185");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        java.lang.String str16 = schema15.get$ref();
        io.swagger.oas.models.media.Schema schema18 = schema15.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal19 = schema18.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#/components/schemas/no description" + "'", str16, "#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
    }

    @Test
    public void test09186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09186");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.addRequiredItem("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int19 = strComparableSchema0.getMinLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.externalDocs(externalDocumentation20);
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test09187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09187");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.multipleOf(bigDecimal12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strComparableSchema0.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = strComparableSchema0.getExternalDocs();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.multipleOf(bigDecimal22);
        strComparableSchema0.setType("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test09188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09188");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal15 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.xml(xML16);
        java.lang.Boolean boolean18 = schema17.getExclusiveMinimum();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema17.getExtensions();
        schema17.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema22.title("");
        schema31.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        schema35.setExternalDocs(externalDocumentation36);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList38 = schema35.getEnum();
        schema17.setEnum(strComparableList38);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strComparableList38);
    }

    @Test
    public void test09189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09189");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.String str5 = serverListOptional4.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        strComparableSchema18.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema12.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema8.externalDocs(externalDocumentation31);
        java.lang.Object obj33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.example(obj33);
        java.lang.Object obj35 = schema32.getExample();
        java.lang.Integer int36 = schema32.getMaxProperties();
        io.swagger.oas.models.media.Schema schema38 = schema32.addRequiredItem("no description");
        schema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = schema32.getMaximum();
        boolean boolean42 = serverListOptional4.equals((java.lang.Object) schema32);
        java.util.List<java.lang.String> strList43 = schema32.getRequired();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Optional.empty" + "'", str5, "Optional.empty");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strList43);
    }

    @Test
    public void test09190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09190");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional6 = java.util.Optional.of(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        boolean boolean8 = serverListOptional7.isPresent();
        java.lang.String str9 = serverListOptional7.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverArrayOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Optional.empty" + "'", str9, "Optional.empty");
    }

    @Test
    public void test09191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09191");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.name("*/*");
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        strComparableSchema19.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal30 = strComparableSchema19.getMultipleOf();
        java.lang.String str31 = strComparableSchema19.get$ref();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema19.maximum(bigDecimal32);
        io.swagger.oas.models.media.Discriminator discriminator34 = strComparableSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema19.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema36.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.setMinLength((java.lang.Integer) 100);
        java.lang.String str49 = strComparableSchema39.getDescription();
        schema36.setNot((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        strComparableSchema53.setExtensions(strMap57);
        strComparableSchema53.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int61 = strComparableSchema53.getMaxItems();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema53.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str65 = strComparableSchema64.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema64.not((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema64.setDescription("hi!");
        java.math.BigDecimal bigDecimal72 = null;
        strComparableSchema64.setMaximum(bigDecimal72);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema64.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList76 = strComparableSchema64.getRequired();
        io.swagger.oas.models.media.Schema schema77 = schema63.required(strList76);
        strComparableSchema39.setRequired(strList76);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema39.pattern("#/components/schemas/");
        java.math.BigDecimal bigDecimal81 = schema80.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema80.externalDocs(externalDocumentation82);
        io.swagger.oas.models.media.Schema schema84 = schema16.additionalProperties(schema83);
        io.swagger.oas.models.media.Schema schema86 = schema84.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator87 = schema86.getDiscriminator();
        io.swagger.oas.models.media.Schema schema89 = schema86.type("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(discriminator87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test09192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09192");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 10);
        java.util.List<java.lang.String> strList9 = schema8.getRequired();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema8.setProperties(strMap10);
        schema8.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int16 = schema8.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test09193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09193");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        java.lang.Class<?> wildcardClass20 = schema19.getClass();
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional21 = java.util.Optional.ofNullable((java.lang.reflect.GenericDeclaration) wildcardClass20);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(genericDeclarationOptional21);
    }

    @Test
    public void test09194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09194");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.addRequiredItem("*/*");
        java.math.BigDecimal bigDecimal20 = null;
        schema19.setMinimum(bigDecimal20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.maximum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        strComparableSchema24.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str38 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema24.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema42 = schema40.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema49.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema45.externalDocs(externalDocumentation68);
        java.lang.Object obj70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.example(obj70);
        io.swagger.oas.models.media.Discriminator discriminator72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.discriminator(discriminator72);
        schema42.setAdditionalProperties(schema73);
        io.swagger.oas.models.media.XML xML75 = null;
        schema42.setXml(xML75);
        schema19.setAdditionalProperties(schema42);
        java.lang.String str78 = schema19.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
    }

    @Test
    public void test09195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09195");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        boolean boolean2 = serverListOptional1.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList4 = serverListOptional1.orElse(serverList3);
        io.swagger.oas.annotations.servers.Server[] serverArray5 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray5);
        java.lang.String str7 = serverListOptional6.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray8 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray8);
        boolean boolean10 = serverListOptional9.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional9.orElse(serverList11);
        io.swagger.oas.models.servers.Server[] serverArray13 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList14 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList14, serverArray13);
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = serverListOptional9.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList14);
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional6.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList14);
        io.swagger.oas.annotations.servers.Server[] serverArray18 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray18);
        java.lang.String str20 = serverListOptional19.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray21 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        boolean boolean23 = serverListOptional22.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList24 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional22.orElse(serverList24);
        io.swagger.oas.models.servers.Server[] serverArray26 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList27 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList27, serverArray26);
        java.util.List<io.swagger.oas.models.servers.Server> serverList29 = serverListOptional22.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList27);
        java.util.List<io.swagger.oas.models.servers.Server> serverList30 = serverListOptional19.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList27);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional6.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList27);
        java.util.List<io.swagger.oas.models.servers.Server> serverList32 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList27);
        java.lang.String str33 = serverListOptional1.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.properties(strMap35);
        java.lang.Boolean boolean37 = schema36.getUniqueItems();
        java.lang.Boolean boolean38 = schema36.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        java.math.BigDecimal bigDecimal47 = null;
        strComparableSchema39.setMaximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = schema36.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        boolean boolean50 = serverListOptional1.equals((java.lang.Object) strComparableSchema39);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema39.maxLength((java.lang.Integer) 0);
        java.lang.Comparable<java.lang.String> strComparable53 = strComparableSchema39.getDefault();
        strComparableSchema39.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Comparable<java.lang.String> strComparable56 = strComparableSchema39.getDefault();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(serverList4);
        org.junit.Assert.assertNotNull(serverArray5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertNotNull(serverListOptional9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(serverList16);
        org.junit.Assert.assertNotNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertNotNull(serverListOptional19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Optional.empty" + "'", str20, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertNotNull(serverListOptional22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(serverList25);
        org.junit.Assert.assertNotNull(serverArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(serverList29);
        org.junit.Assert.assertNotNull(serverList30);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNotNull(serverList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Optional.empty" + "'", str33, "Optional.empty");
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strComparable53);
        org.junit.Assert.assertNull(strComparable56);
    }

    @Test
    public void test09196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09196");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.additionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema37 = schema35.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema39 = schema35.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int40 = schema39.getMaxLength();
        io.swagger.oas.models.media.Schema schema42 = schema39.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal43 = schema42.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
    }

    @Test
    public void test09197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09197");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.nullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        schema26.setName("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
    }

    @Test
    public void test09198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09198");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.XML xML7 = schema2.getXml();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.minimum(bigDecimal8);
        schema9.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean12 = schema9.getReadOnly();
        schema9.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test09199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09199");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.List<io.swagger.oas.models.servers.Server> serverList2 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = serverListOptional1.orElse(serverList2);
        java.lang.String str4 = serverListOptional1.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = strComparableSchema5.getExternalDocs();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema5.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema10.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = strComparableSchema10.getProperties();
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator26 = schema24.getDiscriminator();
        schema24.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema24.name("#/components/schemas/");
        boolean boolean33 = serverListOptional1.equals((java.lang.Object) schema32);
        boolean boolean34 = serverListOptional1.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNull(serverList3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Optional.empty" + "'", str4, "Optional.empty");
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test09200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09200");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema16.writeOnly((java.lang.Boolean) false);
        java.lang.String str19 = schema18.getDescription();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = schema18.getProperties();
        java.lang.Integer int21 = schema18.getMinItems();
        io.swagger.oas.models.media.Discriminator discriminator22 = schema18.getDiscriminator();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(discriminator22);
    }

    @Test
    public void test09201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09201");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.lang.String str16 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test09202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09202");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema24.pattern(",");
        schema42.setWriteOnly((java.lang.Boolean) false);
        schema42.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema42.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema48.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = schema52.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(externalDocumentation53);
    }

    @Test
    public void test09203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09203");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        java.lang.Integer int4 = schema3.getMaxLength();
        schema3.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        strComparableSchema7.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema7.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.lang.String[] strArray34 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        strComparableSchema17.setRequired((java.util.List<java.lang.String>) strList35);
        schema16.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Integer int39 = strComparableSchema17.getMaxItems();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema17.multipleOf(bigDecimal40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList43 = strComparableSchema42.getRequired();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema42.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema46.setDescription("hi!");
        strComparableSchema46.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal57 = strComparableSchema46.getMultipleOf();
        java.lang.String str58 = strComparableSchema46.get$ref();
        java.lang.String[] strArray63 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        strComparableSchema46.setRequired((java.util.List<java.lang.String>) strList64);
        java.lang.Integer int67 = strComparableSchema46.getMaxLength();
        strComparableSchema46.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        strComparableSchema71.setDescription("hi!");
        strComparableSchema71.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema71.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        strComparableSchema71.setExternalDocs(externalDocumentation83);
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema71.format("");
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema46.additionalProperties(schema86);
        java.lang.Boolean boolean88 = schema87.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = schema87.getExtensions();
        strComparableSchema17.setExtensions(strMap89);
        io.swagger.oas.models.media.Schema schema92 = strComparableSchema17.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema93 = schema3.not(schema92);
        io.swagger.oas.models.media.Schema schema95 = schema3.exclusiveMaximum((java.lang.Boolean) false);
        schema95.set$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(bigDecimal57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(schema82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(boolean88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test09204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09204");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema26.getMinItems();
        io.swagger.oas.models.media.Schema schema31 = schema26.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema33 = schema31.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09205");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        strComparableSchema0.setDefault((java.lang.Object) 0.0d);
        java.lang.String str20 = strComparableSchema0.getType();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: Optional.empty\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test09206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09206");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional3 = java.util.Optional.of(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional5 = java.util.Optional.of(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional6 = java.util.Optional.of(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        org.junit.Assert.assertNotNull(linkArray0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(linkArrayOptional3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(linkArrayOptional5);
        org.junit.Assert.assertNotNull(linkArrayOptional6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test09207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09207");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        io.swagger.oas.models.media.XML xML8 = null;
        schema5.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema5.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean12 = schema5.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema19.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.lang.Boolean boolean38 = strComparableSchema15.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema40.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema40.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema15.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.String[] strArray55 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional58 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema15.required((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema61 = schema59.$ref("*/*");
        schema5.setExample((java.lang.Object) "*/*");
        io.swagger.oas.models.media.Discriminator discriminator63 = schema5.getDiscriminator();
        schema5.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator66 = null;
        schema5.setDiscriminator(discriminator66);
        schema5.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(discriminator63);
    }

    @Test
    public void test09208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09208");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String str2 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.title("#/components/schemas/");
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal7 = strComparableSchema0.getMultipleOf();
        java.lang.Object obj8 = strComparableSchema0.getExample();
        strComparableSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: Optional.empty\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNull(obj8);
    }

    @Test
    public void test09209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09209");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.maximum(bigDecimal30);
        io.swagger.oas.models.media.Discriminator discriminator32 = strComparableSchema17.getDiscriminator();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) true);
        schema34.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema37.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        strComparableSchema37.setExternalDocs(externalDocumentation49);
        io.swagger.oas.models.media.XML xML51 = strComparableSchema37.getXml();
        io.swagger.oas.models.media.XML xML52 = strComparableSchema37.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        java.lang.String str59 = strComparableSchema53.get$ref();
        java.lang.String[] strArray64 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional67 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema53.required((java.util.List<java.lang.String>) strList65);
        strComparableSchema53.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        strComparableSchema71.setDescription("hi!");
        java.math.BigDecimal bigDecimal79 = null;
        strComparableSchema71.setMaximum(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema71.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList83 = strComparableSchema71.getRequired();
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema53.required(strList83);
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema37.required(strList83);
        io.swagger.oas.models.media.Schema schema86 = schema34.required(strList83);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional87 = java.util.Optional.of(strList83);
        schema16.setRequired(strList83);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertNull(xML51);
        org.junit.Assert.assertNull(xML52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strListOptional87);
    }

    @Test
    public void test09210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09210");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema8.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        strComparableSchema8.setExternalDocs(externalDocumentation20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema8.maximum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema24 = schema7.additionalProperties(schema23);
        io.swagger.oas.models.media.Schema schema26 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int27 = schema24.getMinLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        schema24.setExternalDocs(externalDocumentation28);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test09211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09211");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.name("hi!");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema6.type("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.lang.Boolean boolean35 = strComparableSchema29.getReadOnly();
        strComparableSchema29.setType("");
        strComparableSchema29.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema29.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.not(schema42);
        schema41.setUniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        schema41.setProperties(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema50.setMaxLength((java.lang.Integer) 0);
        strComparableSchema50.setMaxProperties((java.lang.Integer) 100);
        schema41.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = strComparableSchema59.getExternalDocs();
        java.lang.Integer int61 = strComparableSchema59.getMaxLength();
        java.lang.Integer int62 = strComparableSchema59.getMaxProperties();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = strComparableSchema65.getExternalDocs();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema65.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.not((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema70.setDescription("hi!");
        strComparableSchema70.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema70.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = strComparableSchema70.getProperties();
        io.swagger.oas.models.media.Schema schema84 = schema68.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean85 = schema84.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator86 = null;
        schema84.setDiscriminator(discriminator86);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema84.getProperties();
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema59.properties(strMap88);
        io.swagger.oas.models.media.Schema schema90 = schema41.properties(strMap88);
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema6.properties(strMap88);
        java.lang.Boolean boolean92 = strComparableSchema6.getExclusiveMaximum();
        java.lang.Boolean boolean93 = strComparableSchema6.getDeprecated();
        io.swagger.oas.models.media.Discriminator discriminator94 = null;
        strComparableSchema6.setDiscriminator(discriminator94);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(externalDocumentation60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(boolean92);
        org.junit.Assert.assertNull(boolean93);
    }

    @Test
    public void test09212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09212");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema2.maxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test09213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09213");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema16.getNot();
        io.swagger.oas.models.media.Schema schema19 = schema17.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema17.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList22 = schema17.getRequired();
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema17.xml(xML23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.externalDocs(externalDocumentation25);
        schema24.setMaxLength((java.lang.Integer) 0);
        java.lang.Integer int29 = schema24.getMinLength();
        io.swagger.oas.models.media.Schema schema30 = schema24.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = schema30.getType();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(schema30);
    }

    @Test
    public void test09214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09214");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        java.lang.Integer int35 = strComparableSchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema schema51 = schema37.example((java.lang.Object) strComparableSchema38);
        boolean boolean52 = strComparableSchema0.equals((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema54.setName("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML57 = schema54.getXml();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema54.minimum(bigDecimal58);
        schema54.setMinProperties((java.lang.Integer) 100);
        schema54.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(xML57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test09215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09215");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional6 = java.util.Optional.of(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str9 = serverListOptional8.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverArrayOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Optional.empty" + "'", str9, "Optional.empty");
    }

    @Test
    public void test09216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09216");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        java.lang.String str11 = schema10.getPattern();
        io.swagger.oas.models.media.Schema schema13 = schema10.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema13.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.minimum(bigDecimal16);
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        schema13.setDiscriminator(discriminator18);
        io.swagger.oas.models.media.Schema schema21 = schema13.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test09217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09217");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.not(schema6);
        schema7.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test09218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09218");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.lang.String str26 = strComparableSchema14.get$ref();
        java.lang.String[] strArray31 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        strComparableSchema14.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = strComparableSchema14.getMaxLength();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema14.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema38 = schema2.addProperties("#/components/schemas/", schema37);
        schema37.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema37.multipleOf(bigDecimal41);
        java.lang.Boolean boolean43 = schema37.getUniqueItems();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema37.maximum(bigDecimal44);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test09219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09219");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = strComparableSchema25.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableSchema25.getDefault();
        java.lang.Integer int28 = strComparableSchema25.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema25.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema2.not(schema36);
        java.lang.String str38 = strComparableSchema2.getDescription();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema2.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal52 = strComparableSchema41.getMultipleOf();
        java.lang.String str53 = strComparableSchema41.get$ref();
        java.lang.String[] strArray58 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        strComparableSchema41.setRequired((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema2.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema schema64 = schema62.writeOnly((java.lang.Boolean) false);
        java.lang.String str65 = schema64.getFormat();
        schema64.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNull(strComparable27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test09220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09220");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.lang.String str13 = serverListOptional1.toString();
        boolean boolean14 = serverListOptional1.isPresent();
        java.lang.String str15 = serverListOptional1.toString();
        boolean boolean16 = serverListOptional1.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Optional.empty" + "'", str13, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Optional.empty" + "'", str15, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test09221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09221");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema16.writeOnly((java.lang.Boolean) false);
        java.lang.String str19 = schema18.getDescription();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = schema18.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.properties(strMap23);
        java.lang.Boolean boolean25 = schema24.getUniqueItems();
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal28 = null;
        schema24.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema24.externalDocs(externalDocumentation30);
        io.swagger.oas.annotations.servers.Server server32 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray33 = new io.swagger.oas.annotations.servers.Server[] { server32 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional34 = io.swagger.jaxrs2.OperationParser.getServers(serverArray33);
        boolean boolean35 = serverListOptional34.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        java.lang.String str42 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema36.getNot();
        boolean boolean44 = serverListOptional34.equals((java.lang.Object) schema43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema43.multipleOf(bigDecimal45);
        io.swagger.oas.models.media.Schema schema47 = schema24.not(schema46);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = schema46.getExternalDocs();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList49 = schema46.getEnum();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema46.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = schema18.addProperties("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema51);
        java.lang.Boolean boolean53 = schema51.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(serverArray33);
        org.junit.Assert.assertNotNull(serverListOptional34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(externalDocumentation48);
        org.junit.Assert.assertNull(strComparableList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
    }

    @Test
    public void test09222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09222");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        io.swagger.oas.models.media.Schema schema47 = schema44.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema44.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test09223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09223");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        io.swagger.oas.models.media.XML xML8 = null;
        schema5.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema5.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema12.title("");
        io.swagger.oas.models.media.Schema schema22 = schema5.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema23 = schema21.getNot();
        java.math.BigDecimal bigDecimal24 = null;
        schema21.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema26.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        strComparableSchema26.setExternalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema26.format("");
        strComparableSchema26.setReadOnly((java.lang.Boolean) true);
        strComparableSchema26.setDefault((java.lang.Object) 0.0d);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema26.maximum(bigDecimal46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList49 = strComparableSchema48.getRequired();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema48.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema52.setDescription("hi!");
        strComparableSchema52.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal63 = strComparableSchema52.getMultipleOf();
        java.lang.String str64 = strComparableSchema52.get$ref();
        java.lang.String[] strArray69 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        strComparableSchema52.setRequired((java.util.List<java.lang.String>) strList70);
        java.lang.Integer int73 = strComparableSchema52.getMaxLength();
        strComparableSchema52.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str78 = strComparableSchema77.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema79.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema77.not((io.swagger.oas.models.media.Schema) strComparableSchema79);
        strComparableSchema77.setDescription("hi!");
        strComparableSchema77.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema77.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation89 = null;
        strComparableSchema77.setExternalDocs(externalDocumentation89);
        io.swagger.oas.models.media.Schema schema92 = strComparableSchema77.format("");
        io.swagger.oas.models.media.Schema schema93 = strComparableSchema52.additionalProperties(schema92);
        java.lang.Boolean boolean94 = schema93.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap95 = schema93.getExtensions();
        schema47.setExtensions(strMap95);
        schema21.setExtensions(strMap95);
        java.math.BigDecimal bigDecimal98 = null;
        schema21.setMinimum(bigDecimal98);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(schema88);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(boolean94);
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test09224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09224");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMaxLength();
        java.lang.Integer int3 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema6.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema11.setDescription("hi!");
        strComparableSchema11.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema11.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = strComparableSchema11.getProperties();
        io.swagger.oas.models.media.Schema schema25 = schema9.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.lang.Boolean boolean26 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        schema25.setDiscriminator(discriminator27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema25.getProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema32.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema34.getAdditionalProperties();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema35);
    }

    @Test
    public void test09225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09225");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str27 = strComparableSchema2.getTitle();
        strComparableSchema2.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema36.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.Boolean boolean55 = strComparableSchema32.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList64 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean67 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean68 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean69 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList64.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean71 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean72 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema32.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        java.util.Optional<java.lang.Cloneable> cloneableOptional74 = java.util.Optional.of((java.lang.Cloneable) strComparableList64);
        strComparableSchema2.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        java.lang.Boolean boolean76 = strComparableSchema2.getReadOnly();
        strComparableSchema2.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(cloneableOptional74);
        org.junit.Assert.assertNull(boolean76);
    }

    @Test
    public void test09226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09226");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema31.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema46.setDescription("hi!");
        strComparableSchema46.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema40.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema36.externalDocs(externalDocumentation59);
        java.math.BigDecimal bigDecimal61 = strComparableSchema36.getMaximum();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema36.uniqueItems((java.lang.Boolean) true);
        java.lang.String str64 = strComparableSchema36.getType();
        boolean boolean65 = schema31.equals((java.lang.Object) strComparableSchema36);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test09227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09227");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        strComparableSchema0.setProperties(strMap3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema11.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema24.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema26.title("hi!");
        schema26.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema11.addProperties(",", schema26);
        java.lang.Integer int32 = schema31.getMaxItems();
        schema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema6.example((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = schema35.getAdditionalProperties();
        java.lang.Boolean boolean37 = schema35.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = schema35.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test09228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09228");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertNotNull(serverListOptional9);
    }

    @Test
    public void test09229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09229");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        java.lang.Boolean boolean4 = schema2.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        java.math.BigDecimal bigDecimal13 = null;
        strComparableSchema5.setMaximum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema15 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema17.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal38 = strComparableSchema27.getMultipleOf();
        java.lang.String str39 = strComparableSchema27.get$ref();
        java.lang.String[] strArray44 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        strComparableSchema27.setRequired((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema17.required((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema17.exclusiveMaximum((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList51 = schema50.getEnum();
        io.swagger.oas.models.media.Schema schema52 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.discriminator(discriminator53);
        io.swagger.oas.models.media.Schema schema56 = schema50.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = schema56.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strComparableList51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test09230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09230");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema6 = schema2.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema2.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema12 = schema2.maxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09231");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.List<java.lang.String> strList20 = strComparableSchema5.getRequired();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema5.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.discriminator(discriminator23);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.xml(xML25);
        schema26.setFormat("");
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.xml(xML29);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test09232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09232");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        java.lang.Integer int5 = schema2.getMaxItems();
        schema2.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setMaxProperties((java.lang.Integer) 100);
        java.lang.String str10 = schema2.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test09233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09233");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        strComparableSchema0.setMaxItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList19 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        strComparableSchema20.setExternalDocs(externalDocumentation32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema20.title("Optional.empty");
        schema35.setReadOnly((java.lang.Boolean) true);
        java.lang.String str38 = schema35.getName();
        boolean boolean39 = strComparableSchema0.equals((java.lang.Object) str38);
        java.lang.Boolean boolean40 = strComparableSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema0.minLength((java.lang.Integer) 0);
        strComparableSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test09234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09234");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema37.getNot();
        io.swagger.oas.models.media.Schema schema40 = schema38.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema40.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test09235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09235");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        strComparableSchema0.setMaxItems((java.lang.Integer) 1);
        java.lang.String str29 = strComparableSchema0.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test09236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09236");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        io.swagger.oas.models.media.XML xML8 = null;
        schema5.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema5.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema12.title("");
        io.swagger.oas.models.media.Schema schema22 = schema5.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema24 = schema5.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.writeOnly((java.lang.Boolean) false);
        schema27.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.title("#/components/schemas/");
        schema31.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema31.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema31.discriminator(discriminator35);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        schema31.setExternalDocs(externalDocumentation37);
        schema5.setNot(schema31);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema31.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema41.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test09237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09237");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.multipleOf(bigDecimal12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strComparableSchema0.setProperties(strMap14);
        java.lang.Boolean boolean16 = strComparableSchema0.getDeprecated();
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal32 = strComparableSchema21.getMultipleOf();
        java.lang.String str33 = strComparableSchema21.get$ref();
        java.lang.String[] strArray38 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        strComparableSchema21.setRequired((java.util.List<java.lang.String>) strList39);
        java.lang.Integer int42 = strComparableSchema21.getMaxLength();
        strComparableSchema21.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal56 = strComparableSchema45.getMultipleOf();
        java.lang.String str57 = strComparableSchema45.get$ref();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema45.maximum(bigDecimal58);
        io.swagger.oas.models.media.Discriminator discriminator60 = strComparableSchema45.getDiscriminator();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema45.pattern(",");
        schema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = schema20.example((java.lang.Object) false);
        io.swagger.oas.annotations.servers.Server server67 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray68 = new io.swagger.oas.annotations.servers.Server[] { server67 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional69 = io.swagger.jaxrs2.OperationParser.getServers(serverArray68);
        boolean boolean70 = serverListOptional69.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        java.lang.String str77 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema71.getNot();
        boolean boolean79 = serverListOptional69.equals((java.lang.Object) schema78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema78.properties(strMap80);
        io.swagger.oas.models.media.Schema schema83 = schema78.uniqueItems((java.lang.Boolean) false);
        java.lang.String str84 = schema83.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator85 = schema83.getDiscriminator();
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema83.multipleOf(bigDecimal86);
        schema87.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema90 = schema66.additionalProperties(schema87);
        schema66.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(discriminator60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(serverArray68);
        org.junit.Assert.assertNotNull(serverListOptional69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(discriminator85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test09238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09238");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        java.lang.String str18 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        strComparableSchema19.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema19.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = strComparableSchema19.getProperties();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema19.type("");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema19.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean37 = strComparableSchema19.getNullable();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema19.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = null;
        strComparableSchema41.setExtensions(strMap51);
        strComparableSchema41.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema41.getNot();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema19.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.util.List<java.lang.String> strList57 = strComparableSchema19.getRequired();
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.lang.Comparable<java.lang.String> strComparable59 = strComparableSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation60);
        strComparableSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + boolean37 + "' != '" + false + "'", boolean37, false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strComparable59);
    }

    @Test
    public void test09239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09239");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator13 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.properties(strMap15);
        java.lang.Boolean boolean17 = schema16.getUniqueItems();
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = null;
        schema16.setMultipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.example((java.lang.Object) schema23);
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        strComparableSchema0.setDiscriminator(discriminator25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = strComparableSchema27.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable29 = strComparableSchema27.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema36.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.Boolean boolean55 = strComparableSchema32.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList64 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean65 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean66 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean67 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean68 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean69 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList64.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean71 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean72 = strComparableList64.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema32.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        strComparableSchema27.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList64);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNull(strComparable29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test09240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09240");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = schema3.deprecated((java.lang.Boolean) true);
        schema21.setMinProperties((java.lang.Integer) (-1));
        schema21.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema21.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList28 = schema21.getEnum();
        java.math.BigDecimal bigDecimal29 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList38 = strComparableSchema37.getRequired();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema37.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal52 = strComparableSchema41.getMultipleOf();
        java.lang.String str53 = strComparableSchema41.get$ref();
        java.lang.String[] strArray58 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        strComparableSchema41.setRequired((java.util.List<java.lang.String>) strList59);
        java.lang.Integer int62 = strComparableSchema41.getMaxLength();
        strComparableSchema41.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Discriminator discriminator66 = null;
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema37.discriminator(discriminator66);
        java.lang.Boolean boolean68 = strComparableSchema37.getDeprecated();
        boolean boolean69 = strComparableSchema31.equals((java.lang.Object) boolean68);
        io.swagger.oas.models.media.Schema schema70 = schema21.addProperties("", (io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema72 = schema70.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strComparableList28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test09241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09241");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.not(schema13);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema12.getEnum();
        schema12.setMinItems((java.lang.Integer) 0);
        schema12.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema12.externalDocs(externalDocumentation20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema24 = schema21.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema24);
    }

    @Test
    public void test09242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09242");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional45 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema2.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList49 = schema48.getEnum();
        java.lang.Integer int50 = schema48.getMaxProperties();
        io.swagger.oas.models.media.Discriminator discriminator51 = schema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema53 = schema48.description("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strComparableList49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(discriminator51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test09243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09243");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema13.maxProperties((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList16 = schema13.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test09244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09244");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional6 = java.util.Optional.ofNullable(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional7 = java.util.Optional.ofNullable(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        org.junit.Assert.assertNotNull(linkArray0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(linkArrayOptional6);
        org.junit.Assert.assertNotNull(linkArrayOptional7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test09245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09245");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema4.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema4.setNullable((java.lang.Boolean) true);
        strComparableSchema4.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema13.setExtensions(strMap17);
        strComparableSchema13.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int21 = strComparableSchema13.getMaxItems();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        java.math.BigDecimal bigDecimal32 = null;
        strComparableSchema24.setMaximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema24.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList36 = strComparableSchema24.getRequired();
        io.swagger.oas.models.media.Schema schema37 = schema23.required(strList36);
        strComparableSchema4.setRequired(strList36);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional39 = java.util.Optional.of(strList36);
        strComparableSchema0.setRequired(strList36);
        java.lang.Comparable<java.lang.String> strComparable41 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema0.xml(xML42);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        java.lang.String str46 = schema45.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strListOptional39);
        org.junit.Assert.assertNull(strComparable41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test09246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09246");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        schema26.setMaxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema26.getMaxLength();
        java.lang.Boolean boolean30 = schema26.getWriteOnly();
        java.math.BigDecimal bigDecimal31 = schema26.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNull(bigDecimal31);
    }

    @Test
    public void test09247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09247");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.Schema schema12 = schema2.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.properties(strMap14);
        java.lang.Boolean boolean16 = schema15.getNullable();
        java.lang.String str17 = schema15.getType();
        schema15.setTitle("#/components/schemas/");
        schema15.setFormat("#/components/schemas/");
        schema15.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema15);
        io.swagger.oas.models.media.Schema schema26 = schema24.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema24.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema24.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema31 = schema24.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
    }

    @Test
    public void test09248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09248");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.lang.String str13 = serverListOptional2.toString();
        boolean boolean14 = serverListOptional2.isPresent();
        java.lang.String str15 = serverListOptional2.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema16.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema16.addRequiredItem("hi!");
        java.lang.Integer int28 = schema27.getMinLength();
        schema27.setWriteOnly((java.lang.Boolean) true);
        boolean boolean31 = serverListOptional2.equals((java.lang.Object) schema27);
        boolean boolean32 = serverListOptional2.isPresent();
        java.lang.String str33 = serverListOptional2.toString();
        java.lang.String str34 = serverListOptional2.toString();
        java.lang.String str35 = serverListOptional2.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.properties(strMap37);
        java.lang.Boolean boolean39 = schema38.getUniqueItems();
        schema38.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        strComparableSchema44.setExtensions(strMap48);
        strComparableSchema44.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema44.minimum(bigDecimal52);
        java.math.BigDecimal bigDecimal54 = strComparableSchema44.getMinimum();
        io.swagger.oas.models.media.Schema schema55 = schema38.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema schema57 = schema38.format("no description");
        java.lang.String str58 = schema38.getType();
        java.lang.String str59 = schema38.getFormat();
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema38.minimum(bigDecimal60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema64.addProperties("*/*", schema66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str69 = strComparableSchema68.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema68.not((io.swagger.oas.models.media.Schema) strComparableSchema70);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str75 = strComparableSchema74.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema76.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema74.not((io.swagger.oas.models.media.Schema) strComparableSchema76);
        strComparableSchema74.setDescription("hi!");
        strComparableSchema74.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema68.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema74);
        io.swagger.oas.models.media.Schema schema86 = schema64.not((io.swagger.oas.models.media.Schema) strComparableSchema74);
        io.swagger.oas.models.media.Schema schema87 = schema61.additionalProperties(schema86);
        schema87.setTitle("");
        boolean boolean90 = serverListOptional2.equals((java.lang.Object) schema87);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Optional.empty" + "'", str13, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Optional.empty" + "'", str15, "Optional.empty");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Optional.empty" + "'", str33, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Optional.empty" + "'", str34, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Optional.empty" + "'", str35, "Optional.empty");
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "no description" + "'", str59, "no description");
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test09249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09249");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema0.xml(xML37);
        strComparableSchema0.setName("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema42.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        strComparableSchema42.setExternalDocs(externalDocumentation54);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema42.maximum(bigDecimal56);
        java.lang.String str58 = schema57.getName();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList59 = schema57.getEnum();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema0.addProperties("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema57);
        io.swagger.oas.models.media.Schema schema62 = schema57.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean63 = schema62.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList64 = schema62.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(strComparableList59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNull(strComparableList64);
    }

    @Test
    public void test09250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09250");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMaxProperties();
        schema9.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema schema15 = schema9.type("#/components/schemas/");
        java.lang.Integer int16 = schema9.getMaxLength();
        schema9.setMinLength((java.lang.Integer) 10);
        schema9.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test09251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09251");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema0.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.exclusiveMinimum((java.lang.Boolean) true);
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = schema9.getNullable();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test09252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09252");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.lang.Cloneable> cloneableOptional4 = java.util.Optional.ofNullable((java.lang.Cloneable) serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.maximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema13.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        schema13.setMaximum(bigDecimal18);
        java.lang.Boolean boolean20 = schema13.getWriteOnly();
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema13.xml(xML21);
        java.lang.String str23 = schema13.getDescription();
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema13.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        boolean boolean27 = serverListOptional6.equals((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Optional<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalOptional28 = java.util.Optional.of(serverListOptional6);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(cloneableOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(serverListOptionalOptional28);
    }

    @Test
    public void test09253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09253");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.externalDocs(externalDocumentation34);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.multipleOf(bigDecimal36);
        java.lang.String str38 = schema37.getType();
        java.lang.Boolean boolean39 = schema37.getExclusiveMaximum();
        java.lang.Boolean boolean40 = schema37.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + true + "'", boolean39, true);
        org.junit.Assert.assertNull(boolean40);
    }

    @Test
    public void test09254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09254");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = strComparableSchema16.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableSchema16.getDefault();
        java.math.BigDecimal bigDecimal19 = null;
        strComparableSchema16.setMaximum(bigDecimal19);
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation17);
        org.junit.Assert.assertNull(strComparable18);
    }

    @Test
    public void test09255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09255");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.title("");
        io.swagger.oas.models.media.XML xML12 = null;
        strComparableSchema0.setXml(xML12);
        java.lang.Object obj14 = strComparableSchema0.getExample();
        io.swagger.oas.annotations.servers.Server server15 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray16 = new io.swagger.oas.annotations.servers.Server[] { server15 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray16);
        boolean boolean18 = serverListOptional17.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.lang.String str25 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema19.getNot();
        boolean boolean27 = serverListOptional17.equals((java.lang.Object) schema26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema26.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema26.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema26.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.discriminator(discriminator34);
        java.lang.Boolean boolean36 = schema35.getNullable();
        schema35.setDescription("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean39 = strComparableSchema0.equals((java.lang.Object) "class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(serverArray16);
        org.junit.Assert.assertNotNull(serverListOptional17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test09256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09256");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional45 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema2.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList49 = schema48.getEnum();
        java.math.BigDecimal bigDecimal50 = null;
        schema48.setMultipleOf(bigDecimal50);
        schema48.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strComparableList49);
    }

    @Test
    public void test09257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09257");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.multipleOf(bigDecimal66);
        java.lang.Integer int68 = schema67.getMaxItems();
        strComparableSchema0.setAdditionalProperties(schema67);
        io.swagger.oas.models.media.Schema schema71 = schema67.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal72 = schema67.getMultipleOf();
        java.lang.Integer int73 = schema67.getMaxProperties();
        io.swagger.oas.models.media.Schema schema75 = schema67.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(bigDecimal72);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test09258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09258");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        java.lang.Integer int7 = schema2.getMinItems();
        java.lang.String str8 = schema2.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test09259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09259");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema17.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal38 = strComparableSchema27.getMultipleOf();
        java.lang.String str39 = strComparableSchema27.get$ref();
        java.lang.String[] strArray44 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        strComparableSchema27.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.Integer int48 = strComparableSchema27.getMaxLength();
        strComparableSchema27.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema27.getNot();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema27.deprecated((java.lang.Boolean) false);
        schema53.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setAdditionalProperties(schema53);
        schema24.setName("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = schema24.getProperties();
        java.lang.Boolean boolean60 = schema24.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(boolean60);
    }

    @Test
    public void test09260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09260");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML41 = schema40.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema49.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema45.externalDocs(externalDocumentation68);
        java.lang.Object obj70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.example(obj70);
        java.lang.Object obj72 = schema69.getExample();
        io.swagger.oas.models.media.Schema schema74 = schema69.deprecated((java.lang.Boolean) true);
        schema40.addExtension("#/components/schemas/", (java.lang.Object) schema74);
        java.lang.String str76 = schema40.getFormat();
        io.swagger.oas.models.media.Schema schema78 = schema40.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList79 = schema78.getEnum();
        java.math.BigDecimal bigDecimal80 = schema78.getMaximum();
        schema78.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(strComparableList79);
        org.junit.Assert.assertNull(bigDecimal80);
    }

    @Test
    public void test09261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09261");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = strComparableSchema0.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal31);
    }

    @Test
    public void test09262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09262");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = strComparableSchema0.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test09263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09263");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        java.lang.Integer int12 = strComparableSchema10.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema14.description("");
        java.lang.Integer int17 = schema14.getMaxItems();
        io.swagger.oas.models.media.Schema schema19 = schema14.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = schema19.getMultipleOf();
        schema2.setAdditionalProperties(schema19);
        io.swagger.oas.models.media.Schema schema23 = schema2.addRequiredItem(",");
        java.lang.Integer int24 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema schema26 = schema2.$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema27.setNullable((java.lang.Boolean) false);
        java.lang.String str40 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema27.name("");
        io.swagger.oas.models.media.Schema schema43 = null;
        schema42.setNot(schema43);
        io.swagger.oas.models.media.Schema schema46 = schema42.name(",");
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = schema46.getExtensions();
        schema26.setExtensions(strMap47);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test09264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09264");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.addRequiredItem("");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maximum(bigDecimal18);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML22 = strComparableSchema0.getXml();
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.additionalProperties(schema23);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(xML22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test09265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09265");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal16 = strComparableSchema5.getMultipleOf();
        java.lang.String str17 = strComparableSchema5.get$ref();
        java.lang.String[] strArray22 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        strComparableSchema5.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.Integer int26 = strComparableSchema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema5.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema5.getNot();
        java.lang.Integer int30 = strComparableSchema5.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema31.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema31.title("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema5.not(schema40);
        schema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema46 = schema4.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test09266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09266");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.not(schema13);
        schema12.setUniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        schema12.setProperties(strMap17);
        java.lang.Boolean boolean19 = schema12.getNullable();
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray20 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray20, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray20, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray20, produces29, produces30, components31);
        io.swagger.oas.models.media.Schema schema33 = schema12.example((java.lang.Object) components31);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(apiResponseArray20);
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09267");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        schema46.setExtensions(strMap61);
        java.math.BigDecimal bigDecimal63 = null;
        schema46.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        strComparableSchema65.setDescription("hi!");
        strComparableSchema65.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema65.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        strComparableSchema65.setExternalDocs(externalDocumentation77);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema65.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema81 = schema46.example((java.lang.Object) schema80);
        schema80.setMaxLength((java.lang.Integer) 0);
        schema80.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test09268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09268");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema13.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str16 = schema15.getDescription();
        io.swagger.oas.models.media.Schema schema18 = schema15.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.lang.Boolean boolean25 = strComparableSchema19.getReadOnly();
        strComparableSchema19.setType("");
        strComparableSchema19.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema19.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal43 = strComparableSchema32.getMultipleOf();
        java.lang.String str44 = strComparableSchema32.get$ref();
        java.lang.String[] strArray49 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        strComparableSchema32.setRequired((java.util.List<java.lang.String>) strList50);
        java.lang.Integer int53 = strComparableSchema32.getMaxLength();
        java.lang.Integer int54 = strComparableSchema32.getMaxProperties();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema32.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str58 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        strComparableSchema57.setDescription("hi!");
        strComparableSchema57.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal68 = strComparableSchema57.getMultipleOf();
        java.lang.String str69 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema schema70 = schema56.example((java.lang.Object) strComparableSchema57);
        boolean boolean71 = strComparableSchema19.equals((java.lang.Object) schema56);
        java.math.BigDecimal bigDecimal72 = null;
        schema56.setMinimum(bigDecimal72);
        schema56.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema77 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema79 = schema77.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema81 = schema79.deprecated((java.lang.Boolean) true);
        schema15.setAdditionalProperties(schema79);
        java.lang.Boolean boolean83 = schema15.getExclusiveMinimum();
        java.lang.Integer int84 = schema15.getMaxProperties();
        java.lang.Integer int85 = schema15.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(bigDecimal68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNull(int85);
    }

    @Test
    public void test09269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09269");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional4 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str8 = serverListOptional7.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverArrayOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Optional.empty" + "'", str8, "Optional.empty");
    }

    @Test
    public void test09270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09270");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        schema9.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema9.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema9.setExternalDocs(externalDocumentation14);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09271");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj27 = strComparableSchema2.getExample();
        java.lang.Boolean boolean28 = strComparableSchema2.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray65 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        schema59.setExample((java.lang.Object) tagSetOptional66);
        java.lang.Object obj69 = null;
        schema59.addExtension("*/*", obj69);
        java.lang.String str71 = schema59.getDescription();
        java.lang.String str72 = schema59.getType();
        java.lang.String str73 = schema59.getName();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema31.addProperties("*/*", schema59);
        java.math.BigDecimal bigDecimal75 = schema74.getMultipleOf();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema2.additionalProperties(schema74);
        java.lang.Boolean boolean77 = schema74.getDeprecated();
        java.math.BigDecimal bigDecimal78 = null;
        schema74.setMultipleOf(bigDecimal78);
        schema74.setName("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(boolean77);
    }

    @Test
    public void test09272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09272");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        schema23.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.multipleOf(bigDecimal26);
        schema27.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema31 = schema27.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList33 = strComparableSchema32.getRequired();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema32.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal47 = strComparableSchema36.getMultipleOf();
        java.lang.String str48 = strComparableSchema36.get$ref();
        java.lang.String[] strArray53 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        strComparableSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.Integer int57 = strComparableSchema36.getMaxLength();
        strComparableSchema36.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        strComparableSchema61.setDescription("hi!");
        strComparableSchema61.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema61.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = null;
        strComparableSchema61.setExternalDocs(externalDocumentation73);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema61.format("");
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema36.additionalProperties(schema76);
        java.lang.Boolean boolean78 = schema77.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = schema77.getExtensions();
        schema31.setExtensions(strMap79);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(strMap79);
    }

    @Test
    public void test09273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09273");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        strComparableSchema0.setName("no description");
        strComparableSchema0.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.minimum(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.minimum(bigDecimal19);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09274");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList48 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean51 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean52 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean53 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean54 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList48);
        java.lang.Boolean boolean57 = schema40.getNullable();
        io.swagger.oas.models.media.Schema schema59 = schema40.pattern("no description");
        java.lang.Integer int60 = schema40.getMaxProperties();
        io.swagger.oas.models.media.Schema schema62 = schema40.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.addEnumItemObject((java.lang.Comparable<java.lang.String>) "*/*");
        io.swagger.oas.models.media.Schema schema66 = schema40.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema67.setDescription("hi!");
        strComparableSchema67.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal78 = strComparableSchema67.getMultipleOf();
        java.lang.String str79 = strComparableSchema67.get$ref();
        strComparableSchema67.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema67.multipleOf(bigDecimal82);
        java.lang.String str84 = schema83.get$ref();
        schema83.setMinItems((java.lang.Integer) 1);
        schema40.setDefault((java.lang.Object) schema83);
        schema40.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(bigDecimal78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test09275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09275");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = schema2.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test09276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09276");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("Optional.empty");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema16.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.writeOnly((java.lang.Boolean) false);
        schema22.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal25 = schema22.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema19.additionalProperties(schema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema27.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        strComparableSchema27.setExternalDocs(externalDocumentation39);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema27.title("Optional.empty");
        schema42.setReadOnly((java.lang.Boolean) true);
        java.lang.String str45 = schema42.getName();
        schema42.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.properties(strMap49);
        java.lang.Boolean boolean51 = schema50.getUniqueItems();
        schema50.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal54 = null;
        schema50.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema50.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema57.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema57.title("hi!");
        java.lang.String str62 = schema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = strComparableSchema63.getExternalDocs();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema63.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str69 = strComparableSchema68.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema68.not((io.swagger.oas.models.media.Schema) strComparableSchema70);
        strComparableSchema68.setDescription("hi!");
        strComparableSchema68.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema68.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap81 = strComparableSchema68.getProperties();
        io.swagger.oas.models.media.Schema schema82 = schema66.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema68);
        java.lang.Boolean boolean83 = schema82.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator84 = null;
        schema82.setDiscriminator(discriminator84);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = schema82.getProperties();
        io.swagger.oas.models.media.Schema schema87 = schema61.properties(strMap86);
        schema42.setProperties(strMap86);
        schema22.setProperties(strMap86);
        schema13.setProperties(strMap86);
        java.lang.Integer int91 = schema13.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(externalDocumentation64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(int91);
    }

    @Test
    public void test09277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09277");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        java.math.BigDecimal bigDecimal46 = null;
        schema45.setMultipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema45.exclusiveMaximum((java.lang.Boolean) false);
        schema45.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema45.exclusiveMinimum((java.lang.Boolean) false);
        schema53.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = schema53.getExternalDocs();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(externalDocumentation56);
    }

    @Test
    public void test09278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09278");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema13.getReadOnly();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema13.multipleOf(bigDecimal15);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09279");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.lang.Integer int23 = schema22.getMaxItems();
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema22.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(schema26);
    }

    @Test
    public void test09280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09280");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema14.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema22.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator35 = strComparableSchema22.getDiscriminator();
        strComparableSchema14.addExtension("Optional.empty", (java.lang.Object) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal40 = strComparableSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema49.setDescription("hi!");
        strComparableSchema49.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema43.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema43.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean63 = strComparableSchema43.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema43.externalDocs(externalDocumentation64);
        schema65.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema68 = schema42.example((java.lang.Object) schema65);
        io.swagger.oas.models.media.Schema schema70 = schema42.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = schema42.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test09281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09281");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        java.lang.String str35 = schema33.getFormat();
        io.swagger.oas.models.media.Schema schema37 = schema33.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema33.setExclusiveMaximum((java.lang.Boolean) true);
        schema33.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test09282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09282");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal27 = schema24.getMaximum();
        io.swagger.oas.models.media.Discriminator discriminator28 = schema24.getDiscriminator();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(discriminator28);
    }

    @Test
    public void test09283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09283");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        strComparableSchema18.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema18.multipleOf(bigDecimal29);
        schema30.setExample((java.lang.Object) "hi!");
        schema30.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = schema30.getReadOnly();
        java.lang.Boolean boolean36 = schema30.getNullable();
        schema30.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema0.not(schema30);
        io.swagger.oas.models.media.Schema schema41 = schema30.minProperties((java.lang.Integer) 100);
        java.lang.String str42 = schema41.getFormat();
        java.lang.Boolean boolean43 = schema41.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test09284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09284");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.$ref("Optional.empty");
        schema24.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema24.$ref("*/*");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test09285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09285");
        java.util.Optional<java.lang.String> strOptional1 = java.util.Optional.of("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test09286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09286");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        java.lang.Integer int29 = strComparableSchema0.getMaxItems();
        strComparableSchema0.setMinLength((java.lang.Integer) 1);
        java.lang.String str32 = strComparableSchema0.getName();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema0.addRequiredItem("Optional.empty");
        schema34.set$ref("");
        java.lang.Boolean boolean37 = schema34.getExclusiveMaximum();
        schema34.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test09287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09287");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = schema6.getMinimum();
        io.swagger.oas.models.media.Schema schema11 = schema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema11.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09288");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        java.lang.Integer int28 = strComparableSchema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema6.maxLength((java.lang.Integer) 10);
        strComparableSchema2.setExample((java.lang.Object) strComparableSchema6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        strComparableSchema34.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal45 = strComparableSchema34.getMultipleOf();
        java.lang.String str46 = strComparableSchema34.get$ref();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema34.maximum(bigDecimal47);
        io.swagger.oas.models.media.Discriminator discriminator49 = strComparableSchema34.getDiscriminator();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema51.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        strComparableSchema54.setMinLength((java.lang.Integer) 100);
        java.lang.String str64 = strComparableSchema54.getDescription();
        schema51.setNot((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = null;
        strComparableSchema68.setExtensions(strMap72);
        strComparableSchema68.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int76 = strComparableSchema68.getMaxItems();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema68.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str80 = strComparableSchema79.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema81.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema79.not((io.swagger.oas.models.media.Schema) strComparableSchema81);
        strComparableSchema79.setDescription("hi!");
        java.math.BigDecimal bigDecimal87 = null;
        strComparableSchema79.setMaximum(bigDecimal87);
        io.swagger.oas.models.media.Schema schema90 = strComparableSchema79.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList91 = strComparableSchema79.getRequired();
        io.swagger.oas.models.media.Schema schema92 = schema78.required(strList91);
        strComparableSchema54.setRequired(strList91);
        io.swagger.oas.models.media.Schema schema94 = strComparableSchema6.required(strList91);
        schema94.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal97 = schema94.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(discriminator49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(bigDecimal97);
    }

    @Test
    public void test09289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09289");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.format("");
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema4.multipleOf(bigDecimal7);
        schema8.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09290");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.name("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.externalDocs(externalDocumentation27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema26.getExtensions();
        java.lang.String str30 = schema26.getType();
        io.swagger.oas.models.media.Schema schema32 = schema26.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema32.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema32.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test09291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09291");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        java.lang.Integer int17 = schema16.getMaxLength();
        java.lang.Boolean boolean18 = schema16.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema21.setNullable((java.lang.Boolean) false);
        java.lang.String str34 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema21.name("");
        io.swagger.oas.models.media.Schema schema37 = null;
        schema36.setNot(schema37);
        io.swagger.oas.models.media.Schema schema40 = schema36.name(",");
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = schema40.getExtensions();
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema40.multipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = schema40.deprecated((java.lang.Boolean) true);
        java.lang.String str46 = schema40.getType();
        io.swagger.oas.models.media.Schema schema48 = schema40.maxItems((java.lang.Integer) (-1));
        schema20.setExample((java.lang.Object) schema40);
        io.swagger.oas.models.media.Schema schema51 = schema40.pattern("#/components/schemas/");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test09292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09292");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray23 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        schema17.setExample((java.lang.Object) tagSetOptional24);
        java.lang.Object obj27 = null;
        schema17.addExtension("*/*", obj27);
        java.lang.String str29 = schema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        java.lang.Boolean boolean38 = schema33.getUniqueItems();
        schema17.addExtension("Optional.empty", (java.lang.Object) boolean38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema17.getExtensions();
        schema10.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema schema43 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.writeOnly((java.lang.Boolean) false);
        schema47.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema47.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML52 = null;
        schema51.setXml(xML52);
        io.swagger.oas.models.media.Schema schema55 = schema51.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema51.externalDocs(externalDocumentation56);
        io.swagger.oas.models.media.Schema schema59 = schema51.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema51.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema63 = schema61.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema61.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: Optional.empty\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema65);
        io.swagger.oas.models.media.Schema schema68 = schema10.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema10.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test09293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09293");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        java.lang.String str48 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema0.readOnly((java.lang.Boolean) false);
        strComparableSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test09294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09294");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMaxProperties();
        schema9.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema schema15 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema17.uniqueItems((java.lang.Boolean) false);
        schema19.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema24.addProperties("*/*", schema26);
        io.swagger.oas.models.media.Schema schema29 = schema24.exclusiveMinimum((java.lang.Boolean) false);
        schema29.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema19.example((java.lang.Object) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test09295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09295");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.XML xML6 = null;
        strComparableSchema0.setXml(xML6);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.deprecated((java.lang.Boolean) false);
        strComparableSchema0.setDefault((java.lang.Object) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal27 = strComparableSchema16.getMultipleOf();
        java.lang.String str28 = strComparableSchema16.get$ref();
        strComparableSchema16.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema16.description("hi!");
        java.lang.Boolean boolean33 = strComparableSchema16.getNullable();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema35.getAdditionalProperties();
        boolean boolean37 = strComparableSchema0.equals((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema38.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.not((io.swagger.oas.models.media.Schema) strComparableSchema62);
        strComparableSchema60.setDescription("hi!");
        strComparableSchema60.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema54.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.multipleOf(bigDecimal73);
        io.swagger.oas.models.media.Schema schema75 = schema47.not(schema74);
        io.swagger.oas.models.media.Schema schema77 = schema75.maxProperties((java.lang.Integer) 100);
        schema77.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema81 = schema77.readOnly((java.lang.Boolean) true);
        schema35.setDefault((java.lang.Object) schema77);
        io.swagger.oas.models.media.Schema schema83 = schema77.getNot();
        io.swagger.oas.models.media.Schema schema85 = schema77.writeOnly((java.lang.Boolean) false);
        schema85.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test09296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09296");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.XML xML6 = null;
        strComparableSchema0.setXml(xML6);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.discriminator(discriminator8);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str12 = strComparableSchema0.getTitle();
        java.lang.String str13 = strComparableSchema0.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09297");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = strComparableSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.multipleOf(bigDecimal13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation15);
        java.lang.Boolean boolean17 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.uniqueItems((java.lang.Boolean) false);
        schema25.setDescription("");
        schema25.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        schema25.setExternalDocs(externalDocumentation30);
        java.lang.Boolean boolean32 = schema25.getNullable();
        java.lang.Boolean boolean33 = schema25.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = schema25.$ref("no description");
        io.swagger.oas.models.media.Schema schema37 = schema35.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema19.not(schema37);
        java.lang.Boolean boolean39 = schema38.getExclusiveMinimum();
        schema38.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + true + "'", boolean39, true);
    }

    @Test
    public void test09298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09298");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        java.lang.Integer int35 = strComparableSchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema schema51 = schema37.example((java.lang.Object) strComparableSchema38);
        boolean boolean52 = strComparableSchema0.equals((java.lang.Object) schema37);
        strComparableSchema0.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema0.discriminator(discriminator55);
        strComparableSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int59 = strComparableSchema0.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int59);
    }

    @Test
    public void test09299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09299");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.nullable((java.lang.Boolean) true);
        schema26.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        schema26.set$ref(",");
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.discriminator(discriminator31);
        schema26.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema26.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test09300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09300");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        java.lang.Boolean boolean14 = schema11.getExclusiveMinimum();
        java.lang.Integer int15 = schema11.getMinItems();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema11.getExtensions();
        io.swagger.oas.models.media.XML xML17 = schema11.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(xML17);
    }

    @Test
    public void test09301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09301");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMaximum(bigDecimal12);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test09302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09302");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = schema8.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal11 = null;
        schema10.setMaximum(bigDecimal11);
        schema10.setName("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test09303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09303");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema9.maxLength((java.lang.Integer) 100);
        schema15.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.properties(strMap19);
        java.lang.Boolean boolean21 = schema20.getUniqueItems();
        schema20.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj24 = schema20.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema20.setExternalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema27 = schema20.getNot();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema20.externalDocs(externalDocumentation28);
        io.swagger.oas.models.media.Schema schema31 = schema29.exclusiveMaximum((java.lang.Boolean) false);
        schema15.setAdditionalProperties(schema29);
        io.swagger.oas.models.media.Schema schema34 = schema29.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test09304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09304");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema4.description("");
        java.lang.Integer int7 = schema4.getMaxItems();
        io.swagger.oas.models.media.Schema schema9 = schema4.writeOnly((java.lang.Boolean) false);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09305");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        strComparableSchema0.setProperties(strMap3);
        java.math.BigDecimal bigDecimal5 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(bigDecimal5);
    }

    @Test
    public void test09306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09306");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema schema16 = null;
        schema15.setNot(schema16);
        java.lang.Boolean boolean18 = schema15.getReadOnly();
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema15.xml(xML19);
        java.lang.Boolean boolean21 = schema20.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test09307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09307");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = schema3.minProperties((java.lang.Integer) (-1));
        java.lang.Integer int6 = schema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema8 = schema5.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = schema5.deprecated((java.lang.Boolean) true);
        java.lang.String str11 = schema5.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09308");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal12 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        java.lang.Object obj15 = strComparableSchema0.getExample();
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        strComparableSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.format("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema23.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int26 = schema23.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(obj15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
    }

    @Test
    public void test09309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09309");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        schema9.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema35 = schema9.format("Optional.empty");
        io.swagger.oas.models.media.Schema schema37 = schema35.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = schema35.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(externalDocumentation38);
    }

    @Test
    public void test09310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09310");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = schema16.getMaximum();
        io.swagger.oas.models.media.Schema schema19 = schema16.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = schema16.getMaximum();
        io.swagger.oas.models.media.Schema schema21 = schema16.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test09311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09311");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getDeprecated();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema2.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList28 = strComparableSchema2.getRequired();
        strComparableSchema2.setMaxProperties((java.lang.Integer) 100);
        java.lang.String str31 = strComparableSchema2.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test09312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09312");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.annotations.servers.Server[] serverArray24 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray24);
        java.lang.String str26 = serverListOptional25.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray27 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional28 = io.swagger.jaxrs2.OperationParser.getServers(serverArray27);
        boolean boolean29 = serverListOptional28.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList30 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional28.orElse(serverList30);
        io.swagger.oas.models.servers.Server[] serverArray32 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList33 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList33, serverArray32);
        java.util.List<io.swagger.oas.models.servers.Server> serverList35 = serverListOptional28.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList33);
        java.util.List<io.swagger.oas.models.servers.Server> serverList36 = serverListOptional25.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList33);
        strComparableSchema0.setDefault((java.lang.Object) serverListOptional25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.properties(strMap39);
        java.lang.Boolean boolean41 = schema40.getUniqueItems();
        schema40.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal44 = null;
        schema40.setMultipleOf(bigDecimal44);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema40.externalDocs(externalDocumentation46);
        io.swagger.oas.models.media.Schema schema49 = schema47.format("Optional.empty");
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.xml(xML50);
        io.swagger.oas.models.media.Schema schema53 = schema51.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema0.not(schema53);
        io.swagger.oas.models.media.Schema schema55 = null;
        schema54.setAdditionalProperties(schema55);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(serverArray24);
        org.junit.Assert.assertNotNull(serverListOptional25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Optional.empty" + "'", str26, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray27);
        org.junit.Assert.assertNotNull(serverListOptional28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(serverList31);
        org.junit.Assert.assertNotNull(serverArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(serverList35);
        org.junit.Assert.assertNotNull(serverList36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test09313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09313");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema0.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema19.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList38 = schema37.getEnum();
        io.swagger.oas.models.media.Schema schema40 = schema37.type("*/*");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema0.addProperties("#/components/schemas/", schema37);
        io.swagger.oas.models.media.Schema schema43 = schema37.format("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str44 = schema43.getTitle();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strComparableList38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test09314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09314");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMaxLength();
        java.math.BigDecimal bigDecimal3 = null;
        strComparableSchema0.setMaximum(bigDecimal3);
        strComparableSchema0.setMinItems((java.lang.Integer) 100);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.properties(strMap10);
        java.lang.Boolean boolean12 = schema11.getNullable();
        java.lang.String str13 = schema11.getType();
        schema11.setTitle("#/components/schemas/");
        java.lang.Boolean boolean16 = schema11.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.maximum(bigDecimal30);
        java.lang.Integer int32 = schema31.getMaxLength();
        schema31.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema31.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema37.setNullable((java.lang.Boolean) false);
        java.lang.String str50 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema37.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = strComparableSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema54.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        strComparableSchema59.setDescription("hi!");
        strComparableSchema59.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema59.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = strComparableSchema59.getProperties();
        io.swagger.oas.models.media.Schema schema73 = schema57.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema59);
        java.lang.Boolean boolean74 = strComparableSchema59.getDeprecated();
        io.swagger.oas.models.media.Schema schema75 = schema52.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema59);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = schema75.getProperties();
        schema36.setProperties(strMap76);
        io.swagger.oas.models.media.Schema schema78 = schema11.properties(strMap76);
        strComparableSchema0.setProperties(strMap76);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation80);
        java.math.BigDecimal bigDecimal82 = strComparableSchema0.getMinimum();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(externalDocumentation55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(bigDecimal82);
    }

    @Test
    public void test09315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09315");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator13 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.properties(strMap15);
        java.lang.Boolean boolean17 = schema16.getUniqueItems();
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = null;
        schema16.setMultipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.example((java.lang.Object) schema23);
        java.math.BigDecimal bigDecimal25 = strComparableSchema0.getMinimum();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema0.minimum(bigDecimal26);
        java.lang.Boolean boolean28 = strComparableSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test09316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09316");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.lang.Integer int8 = strComparableSchema0.getMinItems();
        strComparableSchema0.set$ref(",");
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal13 = null;
        strComparableSchema0.setMultipleOf(bigDecimal13);
        strComparableSchema0.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        strComparableSchema0.setTitle("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test09317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09317");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.name("*/*");
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        strComparableSchema19.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal30 = strComparableSchema19.getMultipleOf();
        java.lang.String str31 = strComparableSchema19.get$ref();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema19.maximum(bigDecimal32);
        io.swagger.oas.models.media.Discriminator discriminator34 = strComparableSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema19.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema36.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.setMinLength((java.lang.Integer) 100);
        java.lang.String str49 = strComparableSchema39.getDescription();
        schema36.setNot((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        strComparableSchema53.setExtensions(strMap57);
        strComparableSchema53.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int61 = strComparableSchema53.getMaxItems();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema53.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str65 = strComparableSchema64.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema64.not((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema64.setDescription("hi!");
        java.math.BigDecimal bigDecimal72 = null;
        strComparableSchema64.setMaximum(bigDecimal72);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema64.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList76 = strComparableSchema64.getRequired();
        io.swagger.oas.models.media.Schema schema77 = schema63.required(strList76);
        strComparableSchema39.setRequired(strList76);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema39.pattern("#/components/schemas/");
        java.math.BigDecimal bigDecimal81 = schema80.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema80.externalDocs(externalDocumentation82);
        io.swagger.oas.models.media.Schema schema84 = schema16.additionalProperties(schema83);
        io.swagger.oas.models.media.Discriminator discriminator85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema83.discriminator(discriminator85);
        java.lang.String str87 = schema86.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test09318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09318");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.additionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema37 = schema35.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema39 = schema35.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int40 = schema39.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = null;
        strComparableSchema43.setExtensions(strMap47);
        strComparableSchema43.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = strComparableSchema51.getExternalDocs();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema51.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.uniqueItems((java.lang.Boolean) false);
        strComparableSchema43.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema58.properties(strMap59);
        java.lang.Boolean boolean61 = schema60.getUniqueItems();
        schema60.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal64 = null;
        schema60.setMultipleOf(bigDecimal64);
        io.swagger.oas.models.media.Schema schema67 = schema60.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema67.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema67.xml(xML70);
        strComparableSchema43.setNot(schema67);
        schema39.setExample((java.lang.Object) schema67);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(externalDocumentation52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test09319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09319");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema16.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema31.setDescription("hi!");
        strComparableSchema31.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema21.externalDocs(externalDocumentation44);
        java.lang.Object obj46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.example(obj46);
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.discriminator(discriminator48);
        schema18.setAdditionalProperties(schema49);
        io.swagger.oas.models.media.Schema schema52 = schema49.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = schema49.format("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        schema54.setProperties(strMap55);
        schema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.not((io.swagger.oas.models.media.Schema) strComparableSchema62);
        strComparableSchema60.setDescription("hi!");
        strComparableSchema60.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema60.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = strComparableSchema60.getProperties();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema60.type("");
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema60.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int78 = schema77.getMinProperties();
        schema77.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema81 = schema54.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema77);
        schema77.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema77.discriminator(discriminator84);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test09320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09320");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.addRequiredItem("");
        java.lang.Object obj18 = strComparableSchema0.getExample();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.nullable((java.lang.Boolean) false);
        schema20.setDescription("#/components/schemas/no description");
        java.lang.Integer int23 = schema20.getMinItems();
        io.swagger.oas.models.media.Schema schema25 = schema20.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test09321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09321");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        schema4.setTitle("Optional.empty");
        schema4.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema4.multipleOf(bigDecimal9);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test09322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09322");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal27 = strComparableSchema16.getMultipleOf();
        java.lang.String str28 = strComparableSchema16.get$ref();
        java.lang.String[] strArray33 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        strComparableSchema16.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.Integer int37 = strComparableSchema16.getMaxLength();
        java.lang.Integer int38 = strComparableSchema16.getMaxProperties();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal52 = strComparableSchema41.getMultipleOf();
        java.lang.String str53 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema schema54 = schema40.example((java.lang.Object) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema41.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema41.setNullable((java.lang.Boolean) false);
        java.lang.Object obj59 = strComparableSchema41.getExample();
        strComparableSchema41.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema11.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.math.BigDecimal bigDecimal63 = null;
        schema62.setMinimum(bigDecimal63);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test09323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09323");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        schema13.setFormat("Optional.empty");
        schema13.setType("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema21.setExtensions(strMap25);
        strComparableSchema21.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema21.minimum(bigDecimal29);
        schema30.set$ref("no description");
        schema30.setDeprecated((java.lang.Boolean) false);
        schema30.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema30.format("no description");
        io.swagger.oas.models.media.Schema schema40 = schema38.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema38.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        java.lang.String str45 = strComparableSchema43.getFormat();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema48.setDescription("hi!");
        strComparableSchema48.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema48.setNullable((java.lang.Boolean) false);
        java.lang.String str61 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema48.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = strComparableSchema65.getExternalDocs();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema65.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.not((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema70.setDescription("hi!");
        strComparableSchema70.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema70.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = strComparableSchema70.getProperties();
        io.swagger.oas.models.media.Schema schema84 = schema68.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean85 = strComparableSchema70.getDeprecated();
        io.swagger.oas.models.media.Schema schema86 = schema63.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = schema86.getProperties();
        strComparableSchema43.setProperties(strMap87);
        io.swagger.oas.models.media.Schema schema89 = schema42.properties(strMap87);
        io.swagger.oas.models.media.Schema schema90 = schema13.properties(strMap87);
        io.swagger.oas.models.media.Schema schema92 = schema90.maxLength((java.lang.Integer) 0);
        schema90.setMinLength((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap95 = schema90.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test09324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09324");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema schema15 = schema13.description("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema15.getNot();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal21 = schema20.getMaximum();
        io.swagger.oas.models.media.Schema schema23 = schema20.$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema24.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = strComparableSchema24.getProperties();
        java.lang.Boolean boolean38 = strComparableSchema24.getReadOnly();
        java.lang.Integer int39 = strComparableSchema24.getMinLength();
        strComparableSchema24.setName("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = strComparableSchema24.getExternalDocs();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema24.maxItems((java.lang.Integer) 1);
        schema44.setMinItems((java.lang.Integer) (-1));
        java.util.Optional<java.lang.Object> objOptional47 = java.util.Optional.ofNullable((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = strComparableSchema48.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable50 = strComparableSchema48.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str58 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str64 = strComparableSchema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        strComparableSchema63.setDescription("hi!");
        strComparableSchema63.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema57.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema63);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        java.lang.Boolean boolean76 = strComparableSchema53.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList85 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean86 = strComparableList85.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean87 = strComparableList85.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean88 = strComparableList85.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean89 = strComparableList85.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean90 = strComparableList85.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean91 = strComparableList85.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean92 = strComparableList85.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean93 = strComparableList85.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema53.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList85);
        strComparableSchema48.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList85);
        schema44.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList85);
        schema23.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList85);
        io.swagger.oas.models.media.Schema schema99 = schema23.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(externalDocumentation42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(objOptional47);
        org.junit.Assert.assertNull(externalDocumentation49);
        org.junit.Assert.assertNull(strComparable50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test09325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09325");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.XML xML7 = schema2.getXml();
        io.swagger.oas.models.media.Schema schema9 = schema2.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema11.setDescription("hi!");
        strComparableSchema11.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = strComparableSchema11.getProperties();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema11.description("*/*");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema11.maxLength((java.lang.Integer) 100);
        schema25.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema29.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.uniqueItems((java.lang.Boolean) false);
        schema34.setDescription("");
        schema34.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        schema34.setExternalDocs(externalDocumentation39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.multipleOf(bigDecimal41);
        schema42.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema46.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList52 = strComparableSchema51.getRequired();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema51.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal66 = strComparableSchema55.getMultipleOf();
        java.lang.String str67 = strComparableSchema55.get$ref();
        java.lang.String[] strArray72 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        strComparableSchema55.setRequired((java.util.List<java.lang.String>) strList73);
        java.lang.Integer int76 = strComparableSchema55.getMaxLength();
        strComparableSchema55.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema46.setDefault((java.lang.Object) strComparableSchema55);
        io.swagger.oas.models.media.Discriminator discriminator81 = null;
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema55.discriminator(discriminator81);
        schema42.addExtension("no description", (java.lang.Object) schema82);
        java.util.List<java.lang.String> strList84 = schema82.getRequired();
        io.swagger.oas.models.media.Schema schema85 = schema28.required(strList84);
        io.swagger.oas.models.media.Schema schema87 = schema85.deprecated((java.lang.Boolean) false);
        java.lang.String str88 = schema87.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "*/*" + "'", str88, "*/*");
    }

    @Test
    public void test09326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09326");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.title("");
        java.lang.Integer int12 = schema11.getMaxLength();
        schema11.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str15 = schema11.getTitle();
        java.lang.Integer int16 = schema11.getMaxProperties();
        schema11.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test09327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09327");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.addRequiredItem("hi!");
        java.lang.Integer int12 = schema11.getMinLength();
        java.math.BigDecimal bigDecimal13 = schema11.getMaximum();
        schema11.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str16 = schema11.getFormat();
        schema11.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str19 = schema11.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = strComparableSchema20.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable22 = strComparableSchema20.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema29.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        java.lang.Boolean boolean48 = strComparableSchema25.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList57 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean59 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean60 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean61 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean62 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean63 = strComparableList57.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean64 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean65 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema25.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList57);
        strComparableSchema20.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList57);
        strComparableSchema20.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema20.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.xml(xML72);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = strComparableSchema74.getExternalDocs();
        java.lang.Integer int76 = strComparableSchema74.getMinProperties();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema74.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema80 = schema78.description("");
        java.lang.Integer int81 = schema78.getMaxItems();
        io.swagger.oas.models.media.Schema schema83 = schema78.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal84 = schema83.getMultipleOf();
        java.math.BigDecimal bigDecimal85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema83.multipleOf(bigDecimal85);
        schema71.setNot(schema83);
        io.swagger.oas.models.media.Schema schema89 = schema83.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema11.setExample((java.lang.Object) schema89);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNull(strComparable22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(externalDocumentation75);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(bigDecimal84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test09328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09328");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.description("Optional.empty");
        schema7.setDefault((java.lang.Object) strComparableSchema8);
        java.util.List<java.lang.String> strList13 = schema7.getRequired();
        io.swagger.oas.models.media.Schema schema15 = schema7.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema15.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test09329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09329");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray23 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        schema17.setExample((java.lang.Object) tagSetOptional24);
        java.lang.Object obj27 = null;
        schema17.addExtension("*/*", obj27);
        java.lang.String str29 = schema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        java.lang.Boolean boolean38 = schema33.getUniqueItems();
        schema17.addExtension("Optional.empty", (java.lang.Object) boolean38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema17.getExtensions();
        schema10.setExtensions(strMap40);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList42 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema44 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML45 = schema44.getXml();
        io.swagger.oas.models.media.Schema schema47 = schema44.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strComparableList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(xML45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test09330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09330");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema16.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema16.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.String str56 = strComparableSchema50.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema50.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema49.required((java.util.List<java.lang.String>) strList62);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional67 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema0.required((java.util.List<java.lang.String>) strList62);
        strComparableSchema0.setMaxLength((java.lang.Integer) 10);
        java.lang.String str71 = strComparableSchema0.getType();
        strComparableSchema0.setDescription("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: Optional.empty\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strCollectionOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test09331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09331");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = schema3.deprecated((java.lang.Boolean) true);
        schema21.setMinProperties((java.lang.Integer) (-1));
        schema21.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema21.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema21.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal30 = null;
        schema29.setMaximum(bigDecimal30);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09332");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema36.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean40 = schema39.getUniqueItems();
        schema39.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema39.xml(xML43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema39.maximum(bigDecimal45);
        schema46.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test09333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09333");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema13.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.multipleOf(bigDecimal16);
        schema17.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09334");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        java.util.Optional<io.swagger.oas.annotations.Parameter[]> parameterArrayOptional3 = java.util.Optional.of(parameterArray0);
        java.util.Optional<io.swagger.oas.annotations.Parameter[]> parameterArrayOptional4 = java.util.Optional.ofNullable(parameterArray0);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        org.junit.Assert.assertNotNull(parameterArray0);
        org.junit.Assert.assertNotNull(parameterListOptional2);
        org.junit.Assert.assertNotNull(parameterArrayOptional3);
        org.junit.Assert.assertNotNull(parameterArrayOptional4);
        org.junit.Assert.assertNotNull(parameterListOptional6);
    }

    @Test
    public void test09335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09335");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        strComparableSchema0.setProperties(strMap5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.format(",");
        io.swagger.oas.models.media.Schema schema10 = schema8.readOnly((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = schema8.getEnum();
        java.lang.Integer int12 = schema8.getMaxItems();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strComparableList11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test09336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09336");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema2.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str12 = schema11.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test09337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09337");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal7 = null;
        schema6.setMinimum(bigDecimal7);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test09338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09338");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = strComparableSchema35.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable37 = strComparableSchema35.getDefault();
        boolean boolean39 = strComparableSchema35.equals((java.lang.Object) (short) 10);
        schema33.setDefault((java.lang.Object) boolean39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema33.setExternalDocs(externalDocumentation41);
        java.lang.Integer int43 = schema33.getMinLength();
        io.swagger.oas.models.media.XML xML44 = schema33.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(externalDocumentation36);
        org.junit.Assert.assertNull(strComparable37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(xML44);
    }

    @Test
    public void test09339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09339");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray22);
        schema16.setExample((java.lang.Object) tagSetOptional23);
        java.math.BigDecimal bigDecimal25 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema schema26 = schema13.not(schema16);
        schema13.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09340");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema24.setExternalDocs(externalDocumentation25);
        schema24.setPattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema30 = schema24.pattern("#/components/schemas/");
        java.lang.Boolean boolean31 = schema24.getUniqueItems();
        io.swagger.oas.models.media.Schema schema33 = schema24.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList34 = null;
        schema24.setRequired(strList34);
        io.swagger.oas.models.media.XML xML36 = null;
        schema24.setXml(xML36);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09341");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) 100);
        schema39.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema39.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema44.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema44.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema44.multipleOf(bigDecimal51);
        io.swagger.oas.models.media.Schema schema53 = schema52.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema54 = schema43.example((java.lang.Object) schema52);
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.multipleOf(bigDecimal55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = schema56.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
    }

    @Test
    public void test09342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09342");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional6 = java.util.Optional.ofNullable(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional7 = java.util.Optional.ofNullable(linkArray0);
        java.util.Optional<java.lang.Cloneable> cloneableOptional8 = java.util.Optional.ofNullable((java.lang.Cloneable) linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        org.junit.Assert.assertNotNull(linkArray0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(linkArrayOptional6);
        org.junit.Assert.assertNotNull(linkArrayOptional7);
        org.junit.Assert.assertNotNull(cloneableOptional8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test09343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09343");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.properties(strMap28);
        java.lang.Integer int30 = schema29.getMinProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = schema32.getMultipleOf();
        schema32.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema36.minimum(bigDecimal47);
        java.lang.String str49 = strComparableSchema36.getPattern();
        io.swagger.oas.models.media.Schema schema50 = schema32.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test09344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09344");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.String str25 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.Integer int47 = strComparableSchema26.getMaxLength();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema26.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema26.getNot();
        io.swagger.oas.models.media.Schema schema52 = schema50.uniqueItems((java.lang.Boolean) true);
        strComparableSchema0.setAdditionalProperties(schema52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema67.setDescription("hi!");
        strComparableSchema67.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema61.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema67);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema61.nullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = schema81.getExtensions();
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema81);
        io.swagger.oas.models.media.Schema schema85 = schema83.type("");
        io.swagger.oas.models.media.Schema schema87 = schema83.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int88 = schema87.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap89 = schema87.getProperties();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str25, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(int88);
        org.junit.Assert.assertNotNull(strMap89);
    }

    @Test
    public void test09345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09345");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        strComparableSchema0.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema9.setExtensions(strMap13);
        strComparableSchema9.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int17 = strComparableSchema9.getMaxItems();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema20.setMaximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList32 = strComparableSchema20.getRequired();
        io.swagger.oas.models.media.Schema schema33 = schema19.required(strList32);
        strComparableSchema0.setRequired(strList32);
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal48 = strComparableSchema37.getMultipleOf();
        java.lang.String str49 = strComparableSchema37.get$ref();
        strComparableSchema37.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema37.description("hi!");
        java.lang.Boolean boolean54 = strComparableSchema37.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = strComparableSchema55.getExternalDocs();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema55.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean59 = strComparableSchema55.getReadOnly();
        strComparableSchema37.setExample((java.lang.Object) boolean59);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema37.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal63 = null;
        strComparableSchema37.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Discriminator discriminator65 = null;
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema37.discriminator(discriminator65);
        boolean boolean67 = strComparableSchema0.equals((java.lang.Object) discriminator65);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema69.setUniqueItems((java.lang.Boolean) false);
        java.lang.Object obj72 = schema69.getExample();
        io.swagger.oas.models.media.Schema schema74 = schema69.exclusiveMaximum((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList75 = schema69.getEnum();
        java.lang.Integer int76 = schema69.getMaxProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema69.externalDocs(externalDocumentation77);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(externalDocumentation56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(strComparableList75);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test09346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09346");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema16.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema16.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.String str56 = strComparableSchema50.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema50.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema49.required((java.util.List<java.lang.String>) strList62);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional67 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema0.required((java.util.List<java.lang.String>) strList62);
        java.util.Optional<java.util.Collection<java.lang.String>> strCollectionOptional69 = java.util.Optional.of((java.util.Collection<java.lang.String>) strList62);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strCollectionOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(strCollectionOptional69);
    }

    @Test
    public void test09347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09347");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.String> strList7 = strComparableSchema0.getRequired();
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.maximum(bigDecimal10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = strComparableSchema0.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(externalDocumentation12);
    }

    @Test
    public void test09348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09348");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMaxProperties();
        schema9.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema schema15 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = schema17.getMinimum();
        io.swagger.oas.models.media.Schema schema20 = schema17.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test09349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09349");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setMinItems((java.lang.Integer) 1);
        java.lang.String str3 = strComparableSchema0.toString();
        java.lang.Class<?> wildcardClass4 = strComparableSchema0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str3, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test09350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09350");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema35.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.writeOnly((java.lang.Boolean) false);
        schema41.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal44 = schema41.getMaximum();
        io.swagger.oas.models.media.Schema schema45 = schema38.additionalProperties(schema41);
        schema41.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setDefault((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setName("hi!");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        java.lang.String str53 = schema52.getDescription();
        schema52.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
    }

    @Test
    public void test09351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09351");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.xml(xML12);
        java.lang.Integer int14 = schema9.getMinLength();
        java.lang.String str15 = schema9.getFormat();
        schema9.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML18 = null;
        schema9.setXml(xML18);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        java.math.BigDecimal bigDecimal30 = null;
        strComparableSchema22.setMaximum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal43 = strComparableSchema32.getMultipleOf();
        java.lang.String str44 = strComparableSchema32.get$ref();
        java.lang.String[] strArray49 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        strComparableSchema32.setRequired((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema22.required((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema22.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str57 = strComparableSchema56.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.not((io.swagger.oas.models.media.Schema) strComparableSchema58);
        java.lang.String str62 = strComparableSchema56.get$ref();
        java.lang.String[] strArray67 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional70 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema56.required((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema72 = schema55.required((java.util.List<java.lang.String>) strList68);
        schema9.setRequired((java.util.List<java.lang.String>) strList68);
        java.util.Optional<java.util.AbstractList<java.lang.String>> strListOptional74 = java.util.Optional.of((java.util.AbstractList<java.lang.String>) strList68);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional75 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList68);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strListOptional74);
        org.junit.Assert.assertNotNull(strCollectionOptional75);
    }

    @Test
    public void test09352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09352");
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(genericDeclarationOptional0);
    }

    @Test
    public void test09353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09353");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema25.setExtensions(strMap29);
        strComparableSchema25.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.minimum(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = strComparableSchema25.getMinimum();
        io.swagger.oas.models.media.Schema schema36 = schema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema0.setDefault((java.lang.Object) schema36);
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema36.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema39.maxProperties((java.lang.Integer) 1);
        schema39.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema45 = schema39.pattern("#/components/schemas/");
        java.lang.String str46 = schema39.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test09354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09354");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMaxLength();
        java.math.BigDecimal bigDecimal3 = null;
        strComparableSchema0.setMaximum(bigDecimal3);
        strComparableSchema0.setMinItems((java.lang.Integer) 100);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.properties(strMap10);
        java.lang.Boolean boolean12 = schema11.getNullable();
        java.lang.String str13 = schema11.getType();
        schema11.setTitle("#/components/schemas/");
        java.lang.Boolean boolean16 = schema11.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema17.maximum(bigDecimal30);
        java.lang.Integer int32 = schema31.getMaxLength();
        schema31.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema31.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema37.setNullable((java.lang.Boolean) false);
        java.lang.String str50 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema37.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = strComparableSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema54.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        strComparableSchema59.setDescription("hi!");
        strComparableSchema59.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema59.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = strComparableSchema59.getProperties();
        io.swagger.oas.models.media.Schema schema73 = schema57.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema59);
        java.lang.Boolean boolean74 = strComparableSchema59.getDeprecated();
        io.swagger.oas.models.media.Schema schema75 = schema52.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema59);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = schema75.getProperties();
        schema36.setProperties(strMap76);
        io.swagger.oas.models.media.Schema schema78 = schema11.properties(strMap76);
        strComparableSchema0.setProperties(strMap76);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation80);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema0.maximum(bigDecimal82);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(externalDocumentation55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test09355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09355");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test09356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09356");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        java.lang.Object obj27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.example(obj27);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.discriminator(discriminator29);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.xml(xML31);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test09357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09357");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = schema14.getMinimum();
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
    }

    @Test
    public void test09358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09358");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        schema19.setProperties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema19.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        schema23.setExternalDocs(externalDocumentation24);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.multipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema27.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09359");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        schema17.setMaxProperties((java.lang.Integer) 10);
        java.lang.String str22 = schema17.getDescription();
        java.lang.Boolean boolean23 = schema17.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test09360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09360");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList10 = strComparableSchema2.getRequired();
        strComparableSchema2.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        strComparableSchema2.setDiscriminator(discriminator13);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test09361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09361");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        schema30.setExample((java.lang.Object) tagSetOptional37);
        java.lang.Object obj40 = null;
        schema30.addExtension("*/*", obj40);
        java.lang.String str42 = schema30.getDescription();
        java.lang.String str43 = schema30.getType();
        java.lang.String str44 = schema30.getName();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema2.addProperties("*/*", schema30);
        java.math.BigDecimal bigDecimal46 = schema45.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema schema49 = schema45.name(",");
        io.swagger.oas.models.media.Schema schema51 = schema45.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema45.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        strComparableSchema54.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema54.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = strComparableSchema54.getProperties();
        java.lang.Boolean boolean68 = strComparableSchema54.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable69 = strComparableSchema54.getDefault();
        java.lang.String str70 = strComparableSchema54.getFormat();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema54.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = schema72.getExtensions();
        schema45.setExtensions(strMap73);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(strComparable69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strMap73);
    }

    @Test
    public void test09362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09362");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Integer int14 = strComparableSchema0.getMinItems();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = strComparableSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.pattern("#/components/schemas/");
        java.lang.Boolean boolean20 = schema19.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
    }

    @Test
    public void test09363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09363");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema6.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable8 = strComparableSchema6.getDefault();
        java.lang.Integer int9 = strComparableSchema6.getMinProperties();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.minItems((java.lang.Integer) 0);
        strComparableSchema0.setDefault((java.lang.Object) strComparableSchema6);
        strComparableSchema6.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema6.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(strComparable8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test09364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09364");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.discriminator(discriminator23);
        java.lang.String str25 = schema24.getName();
        io.swagger.oas.models.media.Schema schema27 = schema24.readOnly((java.lang.Boolean) true);
        java.lang.String str28 = schema27.getName();
        java.util.List<java.lang.String> strList29 = schema27.getRequired();
        java.lang.Boolean boolean30 = schema27.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test09365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09365");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj27 = strComparableSchema2.getExample();
        java.lang.Boolean boolean28 = strComparableSchema2.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray65 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        schema59.setExample((java.lang.Object) tagSetOptional66);
        java.lang.Object obj69 = null;
        schema59.addExtension("*/*", obj69);
        java.lang.String str71 = schema59.getDescription();
        java.lang.String str72 = schema59.getType();
        java.lang.String str73 = schema59.getName();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema31.addProperties("*/*", schema59);
        java.math.BigDecimal bigDecimal75 = schema74.getMultipleOf();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema2.additionalProperties(schema74);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema2.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML79 = null;
        schema78.setXml(xML79);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test09366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09366");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        io.swagger.oas.models.media.Schema schema24 = schema22.title(",");
        io.swagger.oas.models.media.Schema schema26 = schema24.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema24.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema29.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.uniqueItems((java.lang.Boolean) false);
        schema34.setDescription("");
        io.swagger.oas.models.media.XML xML37 = null;
        schema34.setXml(xML37);
        io.swagger.oas.models.media.Schema schema40 = schema34.$ref("Optional.empty");
        io.swagger.oas.models.media.Schema schema42 = schema40.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema42.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str58 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        strComparableSchema57.setDescription("hi!");
        strComparableSchema57.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema51.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema57);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema47.externalDocs(externalDocumentation70);
        java.lang.String str72 = schema71.get$ref();
        io.swagger.oas.models.media.Schema schema73 = schema44.not(schema71);
        io.swagger.oas.models.media.Schema schema74 = schema44.getAdditionalProperties();
        schema28.setNot(schema74);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(schema74);
    }

    @Test
    public void test09367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09367");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.XML xML25 = null;
        strComparableSchema2.setXml(xML25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema2.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test09368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09368");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.addRequiredItem("*/*");
        java.lang.Boolean boolean23 = strComparableSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.multipleOf(bigDecimal24);
        strComparableSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09369");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray23 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        schema17.setExample((java.lang.Object) tagSetOptional24);
        java.lang.Object obj27 = null;
        schema17.addExtension("*/*", obj27);
        java.lang.String str29 = schema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        java.lang.Boolean boolean38 = schema33.getUniqueItems();
        schema17.addExtension("Optional.empty", (java.lang.Object) boolean38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema17.getExtensions();
        schema10.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema schema43 = schema10.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setDeprecated((java.lang.Boolean) false);
        java.lang.String str46 = schema10.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "#/components/schemas/" + "'", str46, "#/components/schemas/");
    }

    @Test
    public void test09370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09370");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema17.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        java.math.BigDecimal bigDecimal34 = null;
        strComparableSchema26.setMaximum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal47 = strComparableSchema36.getMultipleOf();
        java.lang.String str48 = strComparableSchema36.get$ref();
        java.lang.String[] strArray53 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        strComparableSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema26.required((java.util.List<java.lang.String>) strList54);
        strComparableSchema22.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strList54);
        io.swagger.oas.models.media.Schema schema59 = schema21.required((java.util.List<java.lang.String>) strList54);
        schema21.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean62 = schema21.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema21.minimum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema65 = schema21.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(schema65);
    }

    @Test
    public void test09371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09371");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.addRequiredItem("");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maximum(bigDecimal18);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = strComparableSchema0.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap22);
    }

    @Test
    public void test09372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09372");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema7 = schema5.readOnly((java.lang.Boolean) true);
        schema7.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test09373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09373");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema0.setMinimum(bigDecimal25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        strComparableSchema0.setProperties(strMap27);
        java.lang.Integer int29 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        java.lang.String str37 = strComparableSchema31.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional45 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema31.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = strComparableSchema47.getProperties();
        java.lang.Boolean boolean61 = strComparableSchema47.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable62 = strComparableSchema47.getDefault();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema47.addRequiredItem("");
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema47.maximum(bigDecimal65);
        strComparableSchema47.setReadOnly((java.lang.Boolean) true);
        boolean boolean69 = schema46.equals((java.lang.Object) strComparableSchema47);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema47.minimum(bigDecimal70);
        strComparableSchema0.addExtension("hi!", (java.lang.Object) strComparableSchema47);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema0.format("hi!");
        java.lang.Integer int75 = schema74.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema77.properties(strMap78);
        java.lang.Boolean boolean80 = schema79.getUniqueItems();
        schema79.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal83 = null;
        schema79.setMultipleOf(bigDecimal83);
        io.swagger.oas.models.media.Schema schema86 = schema79.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema88 = schema86.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema86.xml(xML89);
        io.swagger.oas.models.media.Schema schema92 = schema86.exclusiveMinimum((java.lang.Boolean) true);
        schema92.setMinProperties((java.lang.Integer) 0);
        schema74.addExtension("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) schema92);
        java.lang.Integer int96 = schema74.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNull(strComparable62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(int96);
    }

    @Test
    public void test09374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09374");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema3.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema schema9 = schema7.description("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.properties(strMap11);
        java.lang.Boolean boolean13 = schema12.getNullable();
        java.lang.String str14 = schema12.getType();
        schema12.setTitle("#/components/schemas/");
        schema12.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema12.addRequiredItem("*/*");
        schema20.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema20.description("Optional.empty");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.maximum(bigDecimal25);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.minimum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema29 = schema9.not(schema28);
        schema9.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test09375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09375");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        java.lang.Integer int12 = strComparableSchema10.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema14.description("");
        java.lang.Integer int17 = schema14.getMaxItems();
        io.swagger.oas.models.media.Schema schema19 = schema14.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = schema19.getMultipleOf();
        schema2.setAdditionalProperties(schema19);
        java.lang.String str22 = schema19.getDescription();
        schema19.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema19.externalDocs(externalDocumentation25);
        java.math.BigDecimal bigDecimal27 = schema19.getMaximum();
        java.math.BigDecimal bigDecimal28 = schema19.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(bigDecimal28);
    }

    @Test
    public void test09376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09376");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema18 = schema16.uniqueItems((java.lang.Boolean) false);
        schema18.setDescription("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test09377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09377");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.xml(xML20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal34 = strComparableSchema23.getMultipleOf();
        java.lang.String str35 = strComparableSchema23.get$ref();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema23.maximum(bigDecimal36);
        strComparableSchema23.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.properties(strMap41);
        java.lang.Boolean boolean43 = schema42.getUniqueItems();
        schema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal46 = null;
        schema42.setMultipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema42.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema49.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema49.title("hi!");
        schema53.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean57 = strComparableSchema23.equals((java.lang.Object) (byte) 10);
        java.lang.Boolean boolean58 = strComparableSchema23.getReadOnly();
        strComparableSchema23.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        strComparableSchema23.setDiscriminator(discriminator61);
        io.swagger.oas.models.media.Schema schema63 = schema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema23.setDescription("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + true + "'", boolean58, true);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test09378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09378");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        schema13.setProperties(strMap14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.XML xML18 = null;
        schema13.setXml(xML18);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09379");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setMinItems((java.lang.Integer) 1);
        java.lang.String str17 = strComparableSchema14.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        strComparableSchema18.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema18.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = strComparableSchema18.getProperties();
        java.lang.Boolean boolean32 = strComparableSchema18.getReadOnly();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema18.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        schema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList37 = schema13.getEnum();
        io.swagger.oas.models.media.Schema schema39 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator40 = schema39.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strComparableList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
    }

    @Test
    public void test09380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09380");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList14 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test09381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09381");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema40.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema43 = schema40.getNot();
        schema43.setMinLength((java.lang.Integer) 1);
        schema43.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema48.setDescription("hi!");
        strComparableSchema48.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema48.type("no description");
        java.math.BigDecimal bigDecimal60 = schema59.getMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema59.properties(strMap61);
        java.lang.Boolean boolean63 = schema62.getExclusiveMaximum();
        schema43.setDefault((java.lang.Object) schema62);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
    }

    @Test
    public void test09382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09382");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.additionalProperties(schema34);
        schema35.setUniqueItems((java.lang.Boolean) true);
        schema35.setName("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema35.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test09383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09383");
        java.lang.String[] strArray41 = new java.lang.String[] { "#/components/schemas/no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: Optional.empty\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "Optional.empty", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: Optional.empty\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/no description", "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", ",", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "Optional.empty", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: Optional.empty\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "*/*", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "no description", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", ",", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional44 = java.util.Optional.ofNullable((java.util.List<java.lang.String>) strList42);
        java.util.Optional<java.util.Collection<java.lang.String>> strCollectionOptional45 = java.util.Optional.ofNullable((java.util.Collection<java.lang.String>) strList42);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strListOptional44);
        org.junit.Assert.assertNotNull(strCollectionOptional45);
    }

    @Test
    public void test09384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09384");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.XML xML7 = schema2.getXml();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.minimum(bigDecimal8);
        java.lang.Integer int10 = schema9.getMaxLength();
        java.lang.Integer int11 = schema9.getMinItems();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.maximum(bigDecimal12);
        java.lang.String str14 = schema9.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test09385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09385");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal12 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.set$ref("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test09386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09386");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema17.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        schema24.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema24.readOnly((java.lang.Boolean) false);
        schema30.setNullable((java.lang.Boolean) true);
        java.lang.Integer int33 = schema30.getMaxLength();
        schema30.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test09387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09387");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema35.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.writeOnly((java.lang.Boolean) false);
        schema41.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal44 = schema41.getMaximum();
        io.swagger.oas.models.media.Schema schema45 = schema38.additionalProperties(schema41);
        schema41.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setDefault((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setName("hi!");
        java.lang.String str51 = strComparableSchema0.getDescription();
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean54 = strComparableSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema67.setDescription("hi!");
        strComparableSchema67.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema61.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema67);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        java.lang.Boolean boolean80 = strComparableSchema57.getExclusiveMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap81 = null;
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema57.properties(strMap81);
        strComparableSchema57.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int85 = strComparableSchema57.getMinProperties();
        strComparableSchema57.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML88 = null;
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema57.xml(xML88);
        strComparableSchema57.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator92 = strComparableSchema57.getDiscriminator();
        io.swagger.oas.models.media.Schema schema94 = strComparableSchema57.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema95 = strComparableSchema0.example((java.lang.Object) strComparableSchema57);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(discriminator92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test09388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09388");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = schema3.addRequiredItem("hi!");
        java.lang.String str6 = schema3.getDescription();
        schema3.setMinItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema3.minimum(bigDecimal9);
        io.swagger.oas.models.media.Schema schema12 = schema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional.empty" + "'", str6, "Optional.empty");
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09389");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema0.xml(xML37);
        schema38.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean41 = schema38.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + true + "'", boolean41, true);
    }

    @Test
    public void test09390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09390");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML41 = schema40.getXml();
        io.swagger.oas.models.media.Schema schema43 = schema40.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean44 = schema40.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
    }

    @Test
    public void test09391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09391");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema0.getEnum();
        strComparableSchema0.setMinLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        strComparableSchema0.setDiscriminator(discriminator24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = strComparableSchema26.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema31.setDescription("hi!");
        strComparableSchema31.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema31.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = strComparableSchema31.getProperties();
        io.swagger.oas.models.media.Schema schema45 = schema29.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        boolean boolean47 = strComparableSchema0.equals((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema schema49 = schema45.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema51 = schema45.type("#/components/schemas/");
        java.math.BigDecimal bigDecimal52 = null;
        schema51.setMinimum(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = schema51.name("Optional.empty");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test09392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09392");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.math.BigDecimal bigDecimal3 = null;
        schema2.setMaximum(bigDecimal3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList6 = strComparableSchema5.getRequired();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema5.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema9.setDescription("hi!");
        strComparableSchema9.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal20 = strComparableSchema9.getMultipleOf();
        java.lang.String str21 = strComparableSchema9.get$ref();
        java.lang.String[] strArray26 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        strComparableSchema9.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.Integer int30 = strComparableSchema9.getMaxLength();
        strComparableSchema9.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        strComparableSchema34.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema34.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        strComparableSchema34.setExternalDocs(externalDocumentation46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.format("");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema9.additionalProperties(schema49);
        java.lang.Boolean boolean51 = schema50.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = schema50.getExtensions();
        io.swagger.oas.models.media.Schema schema53 = schema2.not(schema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        strComparableSchema54.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema54.setNullable((java.lang.Boolean) false);
        java.lang.String str67 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema54.name("");
        io.swagger.oas.models.media.Schema schema70 = null;
        schema69.setNot(schema70);
        io.swagger.oas.models.media.Schema schema73 = schema69.name(",");
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = schema73.getExtensions();
        java.math.BigDecimal bigDecimal75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema73.multipleOf(bigDecimal75);
        io.swagger.oas.models.media.Schema schema78 = schema73.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str80 = strComparableSchema79.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema81.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema79.not((io.swagger.oas.models.media.Schema) strComparableSchema81);
        java.lang.String str85 = strComparableSchema79.get$ref();
        java.lang.String[] strArray90 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList91 = new java.util.ArrayList<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList91, strArray90);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional93 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList91);
        io.swagger.oas.models.media.Schema schema94 = strComparableSchema79.required((java.util.List<java.lang.String>) strList91);
        java.util.Optional<java.lang.Cloneable> cloneableOptional95 = java.util.Optional.of((java.lang.Cloneable) strList91);
        io.swagger.oas.models.media.Schema schema96 = schema73.required((java.util.List<java.lang.String>) strList91);
        schema53.setRequired((java.util.List<java.lang.String>) strList91);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(cloneableOptional95);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test09393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09393");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        java.lang.Boolean boolean11 = schema10.getNullable();
        io.swagger.oas.models.media.Schema schema13 = schema10.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema10.format("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test09394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09394");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = schema23.getExternalDocs();
        io.swagger.oas.models.media.Schema schema26 = schema23.maxProperties((java.lang.Integer) 1);
        java.lang.String str27 = schema23.getName();
        java.lang.Integer int28 = schema23.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(externalDocumentation24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test09395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09395");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        java.lang.Boolean boolean12 = schema5.getNullable();
        java.lang.Boolean boolean13 = schema5.getWriteOnly();
        io.swagger.oas.models.media.Schema schema15 = schema5.$ref("no description");
        io.swagger.oas.models.media.Schema schema17 = schema15.nullable((java.lang.Boolean) false);
        java.lang.Object obj18 = schema17.getExample();
        io.swagger.oas.models.media.XML xML19 = null;
        schema17.setXml(xML19);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
    }

    @Test
    public void test09396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09396");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.lang.Integer int8 = strComparableSchema0.getMinItems();
        strComparableSchema0.set$ref(",");
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.type("#/components/schemas/");
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) ",");
        strComparableSchema0.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test09397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09397");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.lang.Cloneable> cloneableOptional4 = java.util.Optional.ofNullable((java.lang.Cloneable) serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional7 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        boolean boolean9 = serverListOptional8.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(cloneableOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverArrayOptional7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test09398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09398");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        java.lang.String str11 = schema10.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        java.lang.String[] strArray15 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        strComparableSchema12.setRequired((java.util.List<java.lang.String>) strList16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema19.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = schema22.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema12.not(schema24);
        io.swagger.oas.models.media.Schema schema26 = schema10.example((java.lang.Object) strComparableSchema12);
        java.lang.Boolean boolean27 = strComparableSchema12.getUniqueItems();
        strComparableSchema12.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str30 = strComparableSchema12.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test09399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09399");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = schema13.getProperties();
        io.swagger.oas.models.media.Schema schema17 = schema13.$ref("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09400");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray22);
        schema16.setExample((java.lang.Object) tagSetOptional23);
        java.math.BigDecimal bigDecimal25 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema schema26 = schema13.not(schema16);
        schema16.setPattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML29 = schema16.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML29);
    }

    @Test
    public void test09401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09401");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        schema26.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema29.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = strComparableSchema29.getProperties();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.type("");
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema29.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean47 = strComparableSchema29.getNullable();
        schema26.setDefault((java.lang.Object) strComparableSchema29);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        schema26.setExternalDocs(externalDocumentation49);
        schema26.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + false + "'", boolean47, false);
    }

    @Test
    public void test09402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09402");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int17 = strComparableSchema0.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema20.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema20.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setNot(schema20);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test09403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09403");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = schema2.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema15.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = strComparableSchema15.getProperties();
        java.lang.Boolean boolean29 = strComparableSchema15.getReadOnly();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema15.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema15.discriminator(discriminator32);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.maximum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema36 = schema2.additionalProperties(schema33);
        schema2.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test09404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09404");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMaxProperties();
        schema9.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema schema15 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema17.maxItems((java.lang.Integer) 100);
        schema19.setMaxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal22 = schema19.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal22);
    }

    @Test
    public void test09405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09405");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema17.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema17.description("");
        java.lang.String str22 = schema21.getDescription();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema21.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema21.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        schema26.setExternalDocs(externalDocumentation27);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09406");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxLength((java.lang.Integer) 10);
        java.lang.String str15 = schema12.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal27 = strComparableSchema16.getMultipleOf();
        java.lang.String str28 = strComparableSchema16.get$ref();
        java.lang.String[] strArray33 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        strComparableSchema16.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.Integer int37 = strComparableSchema16.getMaxLength();
        strComparableSchema16.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema16.$ref("#/components/schemas/");
        strComparableSchema16.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal44 = null;
        strComparableSchema16.setMinimum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema16.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean50 = schema49.getReadOnly();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema49.maximum(bigDecimal51);
        schema49.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema49.discriminator(discriminator55);
        java.util.List<java.lang.String> strList57 = schema56.getRequired();
        schema12.setRequired(strList57);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strList57);
    }

    @Test
    public void test09407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09407");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema schema16 = null;
        schema15.setNot(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema15.name(",");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.externalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = schema21.nullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema21.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
    }

    @Test
    public void test09408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09408");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray22);
        schema16.setExample((java.lang.Object) tagSetOptional23);
        java.math.BigDecimal bigDecimal25 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema schema26 = schema13.not(schema16);
        java.lang.String str27 = schema13.get$ref();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema13.getProperties();
        schema13.setDescription("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema13.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test09409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09409");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.lang.Cloneable> cloneableOptional4 = java.util.Optional.ofNullable((java.lang.Cloneable) serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.annotations.servers.Server[] serverArray7 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray7);
        java.lang.String str9 = serverListOptional8.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray10 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray10);
        boolean boolean12 = serverListOptional11.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList13 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList14 = serverListOptional11.orElse(serverList13);
        io.swagger.oas.models.servers.Server[] serverArray15 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList16 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList16, serverArray15);
        java.util.List<io.swagger.oas.models.servers.Server> serverList18 = serverListOptional11.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList16);
        java.util.List<io.swagger.oas.models.servers.Server> serverList19 = serverListOptional8.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList16);
        io.swagger.oas.annotations.servers.Server[] serverArray20 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        java.lang.String str22 = serverListOptional21.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray23 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray23);
        boolean boolean25 = serverListOptional24.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList27 = serverListOptional24.orElse(serverList26);
        io.swagger.oas.models.servers.Server[] serverArray28 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList29 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList29, serverArray28);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional24.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        java.util.List<io.swagger.oas.models.servers.Server> serverList32 = serverListOptional21.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        java.util.List<io.swagger.oas.models.servers.Server> serverList33 = serverListOptional8.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        java.util.List<io.swagger.oas.models.servers.Server> serverList34 = serverListOptional6.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        java.lang.String str35 = serverListOptional6.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(cloneableOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverArray7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Optional.empty" + "'", str9, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray10);
        org.junit.Assert.assertNotNull(serverListOptional11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(serverList14);
        org.junit.Assert.assertNotNull(serverArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serverList18);
        org.junit.Assert.assertNotNull(serverList19);
        org.junit.Assert.assertNotNull(serverArray20);
        org.junit.Assert.assertNotNull(serverListOptional21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Optional.empty" + "'", str22, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray23);
        org.junit.Assert.assertNotNull(serverListOptional24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(serverList27);
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNotNull(serverList32);
        org.junit.Assert.assertNotNull(serverList33);
        org.junit.Assert.assertNotNull(serverList34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Optional.empty" + "'", str35, "Optional.empty");
    }

    @Test
    public void test09410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09410");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        schema9.setTitle(",");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema14.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.externalDocs(externalDocumentation21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema23.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = strComparableSchema23.getProperties();
        java.lang.Boolean boolean37 = strComparableSchema23.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = strComparableSchema23.getProperties();
        strComparableSchema23.setMinItems((java.lang.Integer) 0);
        strComparableSchema23.setExclusiveMinimum((java.lang.Boolean) true);
        boolean boolean43 = schema20.equals((java.lang.Object) strComparableSchema23);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema20.minimum(bigDecimal44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = strComparableSchema46.getExternalDocs();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema46.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema51.setDescription("hi!");
        strComparableSchema51.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema51.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = strComparableSchema51.getProperties();
        io.swagger.oas.models.media.Schema schema65 = schema49.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema51);
        java.lang.Boolean boolean66 = schema65.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator67 = null;
        schema65.setDiscriminator(discriminator67);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = schema65.getProperties();
        schema45.setProperties(strMap69);
        schema9.setProperties(strMap69);
        io.swagger.oas.models.media.XML xML72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema9.xml(xML72);
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema9.minimum(bigDecimal74);
        io.swagger.oas.models.media.XML xML76 = schema9.getXml();
        java.lang.String str77 = schema9.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(externalDocumentation47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(xML76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test09411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09411");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        strComparableSchema0.setMaxItems((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList19 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        strComparableSchema20.setExternalDocs(externalDocumentation32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema20.title("Optional.empty");
        schema35.setReadOnly((java.lang.Boolean) true);
        java.lang.String str38 = schema35.getName();
        boolean boolean39 = strComparableSchema0.equals((java.lang.Object) str38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema0.externalDocs(externalDocumentation40);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema0.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test09412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09412");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema24.pattern(",");
        schema42.setWriteOnly((java.lang.Boolean) false);
        schema42.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema42.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema50.setMinProperties((java.lang.Integer) 1);
        schema50.setExclusiveMaximum((java.lang.Boolean) true);
        schema50.setNullable((java.lang.Boolean) true);
        schema50.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test09413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09413");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        schema13.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test09414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09414");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        java.lang.Boolean boolean12 = schema9.getWriteOnly();
        schema9.setMinItems((java.lang.Integer) 0);
        schema9.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test09415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09415");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        strComparableSchema0.setProperties(strMap5);
        strComparableSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        schema10.setUniqueItems((java.lang.Boolean) false);
        schema10.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test09416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09416");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.pattern("");
        io.swagger.oas.models.media.Schema schema15 = schema13.pattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema13.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09417");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.String> strList7 = strComparableSchema0.getRequired();
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.format(",");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal23 = strComparableSchema12.getMultipleOf();
        strComparableSchema12.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str26 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema12.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = schema28.minProperties((java.lang.Integer) 100);
        schema28.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema33.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema33.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema33.xml(xML53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = strComparableSchema33.getProperties();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema33.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = strComparableSchema58.getExternalDocs();
        java.lang.Integer int60 = strComparableSchema58.getMaxLength();
        java.lang.Integer int61 = strComparableSchema58.getMaxProperties();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = strComparableSchema64.getExternalDocs();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema64.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str70 = strComparableSchema69.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema71.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema69.not((io.swagger.oas.models.media.Schema) strComparableSchema71);
        strComparableSchema69.setDescription("hi!");
        strComparableSchema69.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema69.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = strComparableSchema69.getProperties();
        io.swagger.oas.models.media.Schema schema83 = schema67.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema69);
        java.lang.Boolean boolean84 = schema83.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator85 = null;
        schema83.setDiscriminator(discriminator85);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = schema83.getProperties();
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema58.properties(strMap87);
        io.swagger.oas.models.media.Schema schema89 = schema57.properties(strMap87);
        io.swagger.oas.models.media.Schema schema90 = schema28.properties(strMap87);
        strComparableSchema0.setProperties(strMap87);
        io.swagger.oas.models.media.Schema schema93 = strComparableSchema0.format("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(externalDocumentation59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(externalDocumentation65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test09418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09418");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String str2 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.lang.String str18 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema5.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = strComparableSchema22.getExternalDocs();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema27.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = strComparableSchema27.getProperties();
        io.swagger.oas.models.media.Schema schema41 = schema25.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema27);
        java.lang.Boolean boolean42 = strComparableSchema27.getDeprecated();
        io.swagger.oas.models.media.Schema schema43 = schema20.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = schema43.getProperties();
        strComparableSchema0.setProperties(strMap44);
        java.lang.Object obj46 = strComparableSchema0.getExample();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = strComparableSchema49.getExternalDocs();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema49.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        strComparableSchema54.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema54.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = strComparableSchema54.getProperties();
        io.swagger.oas.models.media.Schema schema68 = schema52.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema schema70 = schema52.deprecated((java.lang.Boolean) true);
        schema70.setMinProperties((java.lang.Integer) (-1));
        schema70.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema76 = schema70.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema0.example((java.lang.Object) schema70);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNull(externalDocumentation50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test09419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09419");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema20.setRequired((java.util.List<java.lang.String>) strList24);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional27 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList24);
        schema19.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int29 = schema19.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional27);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test09420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09420");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        schema36.setProperties(strMap38);
        java.lang.String str40 = schema36.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal52 = strComparableSchema41.getMultipleOf();
        java.lang.String str53 = strComparableSchema41.get$ref();
        java.lang.String[] strArray58 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        strComparableSchema41.setRequired((java.util.List<java.lang.String>) strList59);
        java.lang.Integer int62 = strComparableSchema41.getMaxLength();
        strComparableSchema41.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema41.getNot();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema41.deprecated((java.lang.Boolean) false);
        strComparableSchema41.setMaxItems((java.lang.Integer) 1);
        java.lang.Boolean boolean70 = strComparableSchema41.getNullable();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema41.getNot();
        io.swagger.oas.models.media.Schema schema72 = schema36.example((java.lang.Object) schema71);
        java.util.List<java.lang.String> strList73 = schema71.getRequired();
        schema71.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(strList73);
    }

    @Test
    public void test09421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09421");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.lang.Cloneable> cloneableOptional2 = java.util.Optional.of((java.lang.Cloneable) serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList10 = serverListOptional9.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(cloneableOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertNotNull(serverListOptional9);
    }

    @Test
    public void test09422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09422");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.additionalProperties(schema34);
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.xml(xML36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        java.math.BigDecimal bigDecimal46 = null;
        strComparableSchema38.setMaximum(bigDecimal46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema48.setDescription("hi!");
        strComparableSchema48.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal59 = strComparableSchema48.getMultipleOf();
        java.lang.String str60 = strComparableSchema48.get$ref();
        java.lang.String[] strArray65 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        strComparableSchema48.setRequired((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema38.required((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema38.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str73 = strComparableSchema72.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema74.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema72.not((io.swagger.oas.models.media.Schema) strComparableSchema74);
        java.lang.String str78 = strComparableSchema72.get$ref();
        java.lang.String[] strArray83 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList84 = new java.util.ArrayList<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional86 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList84);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema72.required((java.util.List<java.lang.String>) strList84);
        io.swagger.oas.models.media.Schema schema88 = schema71.required((java.util.List<java.lang.String>) strList84);
        schema35.setRequired((java.util.List<java.lang.String>) strList84);
        java.util.List<java.lang.String> strList90 = schema35.getRequired();
        io.swagger.oas.models.media.XML xML91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema35.xml(xML91);
        schema92.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test09423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09423");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str59 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema58.setDescription("hi!");
        strComparableSchema58.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema48.externalDocs(externalDocumentation71);
        strComparableSchema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.lang.String str74 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema4.exclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        schema76.setProperties(strMap77);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        schema76.setExternalDocs(externalDocumentation79);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test09424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09424");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.xml(xML12);
        schema13.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema13.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema13.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09425");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.uniqueItems((java.lang.Boolean) false);
        strComparableSchema20.setDescription("");
        strComparableSchema20.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        java.lang.String str32 = serverListOptional31.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray33 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional34 = io.swagger.jaxrs2.OperationParser.getServers(serverArray33);
        java.lang.String str35 = serverListOptional34.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray36 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional37 = io.swagger.jaxrs2.OperationParser.getServers(serverArray36);
        boolean boolean38 = serverListOptional37.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList40 = serverListOptional37.orElse(serverList39);
        io.swagger.oas.models.servers.Server[] serverArray41 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList42 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList42, serverArray41);
        java.util.List<io.swagger.oas.models.servers.Server> serverList44 = serverListOptional37.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList42);
        java.util.List<io.swagger.oas.models.servers.Server> serverList45 = serverListOptional34.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList42);
        java.util.List<io.swagger.oas.models.servers.Server> serverList46 = serverListOptional31.orElse(serverList45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int57 = strComparableSchema49.getMaxItems();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema49.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.not((io.swagger.oas.models.media.Schema) strComparableSchema62);
        strComparableSchema60.setDescription("hi!");
        java.math.BigDecimal bigDecimal68 = null;
        strComparableSchema60.setMaximum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema60.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList72 = strComparableSchema60.getRequired();
        io.swagger.oas.models.media.Schema schema73 = schema59.required(strList72);
        boolean boolean74 = serverListOptional31.equals((java.lang.Object) strList72);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema20.required(strList72);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional76 = java.util.Optional.ofNullable(strList72);
        java.util.Optional<java.util.Collection<java.lang.String>> strCollectionOptional77 = java.util.Optional.ofNullable((java.util.Collection<java.lang.String>) strList72);
        io.swagger.oas.models.media.Schema schema78 = schema19.required(strList72);
        java.math.BigDecimal bigDecimal79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema19.maximum(bigDecimal79);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Optional.empty" + "'", str32, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray33);
        org.junit.Assert.assertNotNull(serverListOptional34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Optional.empty" + "'", str35, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray36);
        org.junit.Assert.assertNotNull(serverListOptional37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(serverList40);
        org.junit.Assert.assertNotNull(serverArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(serverList44);
        org.junit.Assert.assertNotNull(serverList45);
        org.junit.Assert.assertNotNull(serverList46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strListOptional76);
        org.junit.Assert.assertNotNull(strCollectionOptional77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test09426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09426");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema10.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = strComparableSchema10.getProperties();
        strComparableSchema10.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.writeOnly((java.lang.Boolean) false);
        schema28.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema28.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        io.swagger.oas.models.media.Schema schema36 = schema32.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema32.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str41 = schema32.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = strComparableSchema42.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable44 = strComparableSchema42.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str58 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        strComparableSchema57.setDescription("hi!");
        strComparableSchema57.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema51.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema57);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        java.lang.Boolean boolean70 = strComparableSchema47.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList79 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean81 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean82 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean83 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean84 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean85 = strComparableList79.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean86 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean87 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema47.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList79);
        strComparableSchema42.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList79);
        schema32.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList79);
        strComparableSchema10.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList79);
        schema9.setExample((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.media.XML xML93 = null;
        strComparableSchema10.setXml(xML93);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNull(strComparable44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test09427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09427");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        strComparableSchema0.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema22.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal43 = strComparableSchema32.getMultipleOf();
        java.lang.String str44 = strComparableSchema32.get$ref();
        java.lang.String[] strArray49 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        strComparableSchema32.setRequired((java.util.List<java.lang.String>) strList50);
        schema31.setNot((io.swagger.oas.models.media.Schema) strComparableSchema32);
        java.lang.Integer int54 = strComparableSchema32.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema32.properties(strMap55);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        strComparableSchema32.setExternalDocs(externalDocumentation57);
        java.lang.Object obj59 = strComparableSchema32.getExample();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema32.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema63 = schema61.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema63.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema0.not(schema63);
        io.swagger.oas.models.media.Schema schema68 = schema66.deprecated((java.lang.Boolean) false);
        schema66.setMaxProperties((java.lang.Integer) (-1));
        schema66.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(obj59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test09428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09428");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema4.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema4.setNullable((java.lang.Boolean) true);
        strComparableSchema4.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema13.setExtensions(strMap17);
        strComparableSchema13.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int21 = strComparableSchema13.getMaxItems();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        java.math.BigDecimal bigDecimal32 = null;
        strComparableSchema24.setMaximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema24.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList36 = strComparableSchema24.getRequired();
        io.swagger.oas.models.media.Schema schema37 = schema23.required(strList36);
        strComparableSchema4.setRequired(strList36);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional39 = java.util.Optional.of(strList36);
        strComparableSchema0.setRequired(strList36);
        java.lang.Comparable<java.lang.String> strComparable41 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema0.xml(xML42);
        java.lang.Integer int44 = schema43.getMinItems();
        schema43.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strListOptional39);
        org.junit.Assert.assertNull(strComparable41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
    }

    @Test
    public void test09429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09429");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        schema26.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML29 = schema26.getXml();
        io.swagger.oas.models.media.Schema schema31 = schema26.minProperties((java.lang.Integer) (-1));
        java.lang.String str32 = schema26.getName();
        schema26.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema35.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema43.setDescription("hi!");
        strComparableSchema43.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema43.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator56 = strComparableSchema43.getDiscriminator();
        strComparableSchema35.addExtension("Optional.empty", (java.lang.Object) strComparableSchema43);
        java.lang.String str58 = strComparableSchema43.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = strComparableSchema43.getExtensions();
        schema26.setExtensions(strMap59);
        io.swagger.oas.models.media.Schema schema62 = schema26.readOnly((java.lang.Boolean) false);
        java.lang.Integer int63 = schema26.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
    }

    @Test
    public void test09430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09430");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema9.maxLength((java.lang.Integer) 100);
        schema15.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Integer int18 = schema15.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test09431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09431");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.not(schema6);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.discriminator(discriminator8);
        java.lang.String str10 = schema9.getDescription();
        java.math.BigDecimal bigDecimal11 = null;
        schema9.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.XML xML13 = schema9.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Optional.empty" + "'", str10, "Optional.empty");
        org.junit.Assert.assertNull(xML13);
    }

    @Test
    public void test09432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09432");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal11 = null;
        schema6.setMaximum(bigDecimal11);
        java.lang.Boolean boolean13 = schema6.getWriteOnly();
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema6.xml(xML14);
        java.lang.String str16 = schema6.getDescription();
        io.swagger.oas.models.media.Schema schema18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema18);
        java.lang.String str20 = schema6.getType();
        io.swagger.oas.models.media.Schema schema22 = schema6.readOnly((java.lang.Boolean) true);
        java.lang.Integer int23 = schema6.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test09433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09433");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema37 = schema33.addRequiredItem("Optional.empty");
        schema33.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema33.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema43 = schema41.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema43.readOnly((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass46 = schema43.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test09434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09434");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        java.lang.Boolean boolean46 = schema45.getNullable();
        io.swagger.oas.models.media.Schema schema48 = schema45.minLength((java.lang.Integer) 0);
        schema45.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema45.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema45.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test09435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09435");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema36.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema36.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema36.writeOnly((java.lang.Boolean) false);
        schema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema36.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal48 = schema47.getMinimum();
        java.lang.String str49 = schema47.getName();
        io.swagger.oas.models.media.Schema schema51 = schema47.pattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test09436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09436");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Integer int14 = strComparableSchema0.getMinItems();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09437");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.Boolean boolean4 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema6 = schema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema2.description("");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal11 = null;
        schema8.setMinimum(bigDecimal11);
        java.lang.String str13 = schema8.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09438");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.annotations.servers.Server server5 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] { server5 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        boolean boolean8 = serverListOptional7.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.lang.String str15 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema9.getNot();
        boolean boolean17 = serverListOptional7.equals((java.lang.Object) schema16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.multipleOf(bigDecimal18);
        boolean boolean20 = serverListOptional4.equals((java.lang.Object) schema19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional4.orElse(serverList21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal34 = strComparableSchema23.getMultipleOf();
        strComparableSchema23.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str37 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema39.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        strComparableSchema54.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema48.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = null;
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema44.externalDocs(externalDocumentation67);
        java.lang.Object obj69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.example(obj69);
        io.swagger.oas.models.media.Discriminator discriminator71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.discriminator(discriminator71);
        schema41.setAdditionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema75 = schema72.readOnly((java.lang.Boolean) true);
        boolean boolean76 = serverListOptional4.equals((java.lang.Object) true);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(serverList22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test09439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09439");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.description("*/*");
        schema12.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema15.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema31.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.multipleOf(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = schema24.not(schema51);
        io.swagger.oas.models.media.Schema schema54 = schema51.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        schema51.setDiscriminator(discriminator55);
        io.swagger.oas.models.media.Schema schema57 = schema12.not(schema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema58.setNullable((java.lang.Boolean) true);
        strComparableSchema58.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = null;
        strComparableSchema67.setExtensions(strMap71);
        strComparableSchema67.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int75 = strComparableSchema67.getMaxItems();
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema67.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str79 = strComparableSchema78.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema80.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema78.not((io.swagger.oas.models.media.Schema) strComparableSchema80);
        strComparableSchema78.setDescription("hi!");
        java.math.BigDecimal bigDecimal86 = null;
        strComparableSchema78.setMaximum(bigDecimal86);
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema78.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList90 = strComparableSchema78.getRequired();
        io.swagger.oas.models.media.Schema schema91 = schema77.required(strList90);
        strComparableSchema58.setRequired(strList90);
        schema57.setRequired(strList90);
        io.swagger.oas.models.media.Schema schema95 = schema57.type("#/components/schemas/");
        io.swagger.oas.models.media.XML xML96 = null;
        schema95.setXml(xML96);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test09440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09440");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        schema30.setExample((java.lang.Object) tagSetOptional37);
        java.lang.Object obj40 = null;
        schema30.addExtension("*/*", obj40);
        java.lang.String str42 = schema30.getDescription();
        java.lang.String str43 = schema30.getType();
        java.lang.String str44 = schema30.getName();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema2.addProperties("*/*", schema30);
        java.math.BigDecimal bigDecimal46 = schema45.getMultipleOf();
        schema45.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean49 = schema45.getNullable();
        java.lang.Boolean boolean50 = schema45.getNullable();
        io.swagger.oas.models.media.Schema schema52 = schema45.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList53 = schema52.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strList53);
    }

    @Test
    public void test09441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09441");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.String str12 = schema11.getName();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.minimum(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema11.multipleOf(bigDecimal15);
        java.util.List<java.lang.String> strList17 = schema16.getRequired();
        schema16.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test09442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09442");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.xml(xML9);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema6.getExtensions();
        schema6.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = schema6.format("*/*");
        schema17.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test09443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09443");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema13.addRequiredItem("");
        java.lang.String str19 = schema18.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test09444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09444");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        java.lang.Boolean boolean35 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setPattern("");
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.externalDocs(externalDocumentation42);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = schema43.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + true + "'", boolean35, true);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test09445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09445");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        schema2.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.writeOnly((java.lang.Boolean) false);
        schema21.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema18.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema27 = schema25.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int28 = schema27.getMinProperties();
        java.math.BigDecimal bigDecimal29 = null;
        schema27.setMinimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema2.not(schema27);
        java.lang.String str32 = schema2.getName();
        java.lang.String str33 = schema2.getType();
        schema2.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        schema2.setExternalDocs(externalDocumentation36);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test09446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09446");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        java.lang.Boolean boolean23 = strComparableSchema8.getDeprecated();
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test09447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09447");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.List<java.lang.String> strList20 = strComparableSchema5.getRequired();
        java.lang.Integer int21 = strComparableSchema5.getMinLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema5.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str24 = strComparableSchema5.getName();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema5.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema27.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = strComparableSchema27.getProperties();
        java.lang.Boolean boolean41 = strComparableSchema27.getReadOnly();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema27.exclusiveMaximum((java.lang.Boolean) true);
        strComparableSchema27.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = strComparableSchema5.getProperties();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(strMap47);
    }

    @Test
    public void test09448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09448");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.lang.Integer int8 = strComparableSchema0.getMinItems();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int13 = schema12.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test09449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09449");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        java.lang.Integer int28 = schema25.getMinLength();
        io.swagger.oas.models.media.Schema schema30 = schema25.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = schema25.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal31);
    }

    @Test
    public void test09450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09450");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = strComparableSchema0.getDeprecated();
        strComparableSchema0.set$ref("hi!");
        java.math.BigDecimal bigDecimal30 = null;
        strComparableSchema0.setMultipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema32.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = strComparableSchema32.getProperties();
        java.lang.Boolean boolean46 = strComparableSchema32.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable47 = strComparableSchema32.getDefault();
        java.lang.String str48 = strComparableSchema32.getFormat();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = strComparableSchema32.getProperties();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema32.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema51.setTitle("");
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema0.not(schema51);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = strComparableSchema0.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(strComparable47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(strMap57);
    }

    @Test
    public void test09451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09451");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema24.pattern(",");
        schema42.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema42.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.externalDocs(externalDocumentation47);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test09452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09452");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.XML xML6 = null;
        strComparableSchema0.setXml(xML6);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.discriminator(discriminator8);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str12 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal34 = strComparableSchema23.getMultipleOf();
        java.lang.String str35 = strComparableSchema23.get$ref();
        java.lang.String[] strArray40 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        strComparableSchema23.setRequired((java.util.List<java.lang.String>) strList41);
        schema22.setNot((io.swagger.oas.models.media.Schema) strComparableSchema23);
        schema22.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema48 = schema22.format("Optional.empty");
        strComparableSchema0.setExample((java.lang.Object) "Optional.empty");
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.minLength((java.lang.Integer) 1);
        schema51.setFormat("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = strComparableSchema54.getExternalDocs();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema54.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema59 = schema57.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.externalDocs(externalDocumentation60);
        io.swagger.oas.models.media.Schema<java.lang.CharSequence> charSequenceSchema62 = new io.swagger.oas.models.media.Schema<java.lang.CharSequence>();
        io.swagger.oas.models.media.Schema schema63 = schema59.additionalProperties((io.swagger.oas.models.media.Schema) charSequenceSchema62);
        io.swagger.oas.models.media.Schema schema65 = schema63.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int66 = schema63.getMinProperties();
        io.swagger.oas.models.media.Schema schema67 = schema51.additionalProperties(schema63);
        java.lang.Boolean boolean68 = schema63.getExclusiveMinimum();
        java.lang.Integer int69 = schema63.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(externalDocumentation55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(int69);
    }

    @Test
    public void test09453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09453");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        java.lang.Boolean boolean46 = schema45.getNullable();
        io.swagger.oas.models.media.Schema schema48 = schema45.minLength((java.lang.Integer) 0);
        schema45.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema45.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema52.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test09454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09454");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.discriminator(discriminator32);
        io.swagger.oas.models.media.Schema schema35 = schema33.name(",");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test09455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09455");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema13.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str16 = schema15.getDescription();
        io.swagger.oas.models.media.Schema schema18 = schema15.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.lang.Boolean boolean25 = strComparableSchema19.getReadOnly();
        strComparableSchema19.setType("");
        strComparableSchema19.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema19.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal43 = strComparableSchema32.getMultipleOf();
        java.lang.String str44 = strComparableSchema32.get$ref();
        java.lang.String[] strArray49 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        strComparableSchema32.setRequired((java.util.List<java.lang.String>) strList50);
        java.lang.Integer int53 = strComparableSchema32.getMaxLength();
        java.lang.Integer int54 = strComparableSchema32.getMaxProperties();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema32.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str58 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        strComparableSchema57.setDescription("hi!");
        strComparableSchema57.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal68 = strComparableSchema57.getMultipleOf();
        java.lang.String str69 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema schema70 = schema56.example((java.lang.Object) strComparableSchema57);
        boolean boolean71 = strComparableSchema19.equals((java.lang.Object) schema56);
        java.math.BigDecimal bigDecimal72 = null;
        schema56.setMinimum(bigDecimal72);
        schema56.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema77 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema79 = schema77.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema81 = schema79.deprecated((java.lang.Boolean) true);
        schema15.setAdditionalProperties(schema79);
        io.swagger.oas.models.media.Schema schema84 = schema15.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema86 = schema15.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema88 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(bigDecimal68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test09456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09456");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema2.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray10 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray10);
        schema4.setExample((java.lang.Object) tagSetOptional11);
        java.lang.Object obj14 = null;
        schema4.addExtension("*/*", obj14);
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        strComparableSchema18.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema18.setNullable((java.lang.Boolean) false);
        java.lang.String str31 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema18.name("");
        java.math.BigDecimal bigDecimal34 = null;
        strComparableSchema18.setMinimum(bigDecimal34);
        java.lang.Boolean boolean36 = strComparableSchema18.getReadOnly();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema18.description("*/*");
        boolean boolean39 = schema4.equals((java.lang.Object) schema38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema4.externalDocs(externalDocumentation40);
        strComparableSchema0.setNot(schema41);
        java.lang.Boolean boolean43 = strComparableSchema0.getReadOnly();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(tagSetOptional11);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test09457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09457");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.math.BigDecimal bigDecimal25 = strComparableSchema2.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        strComparableSchema2.setDiscriminator(discriminator26);
        io.swagger.oas.models.media.XML xML28 = null;
        strComparableSchema2.setXml(xML28);
        java.math.BigDecimal bigDecimal30 = null;
        strComparableSchema2.setMultipleOf(bigDecimal30);
        java.math.BigDecimal bigDecimal32 = null;
        strComparableSchema2.setMultipleOf(bigDecimal32);
        strComparableSchema2.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema2.multipleOf(bigDecimal36);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test09458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09458");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema16.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = schema20.addRequiredItem("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema26 = schema24.maxLength((java.lang.Integer) 0);
        schema24.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test09459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09459");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.title("");
        java.lang.Integer int12 = schema11.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = strComparableSchema13.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema13.getDefault();
        java.lang.Integer int16 = strComparableSchema13.getMinProperties();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.minItems((java.lang.Integer) 0);
        boolean boolean19 = schema11.equals((java.lang.Object) 0);
        io.swagger.oas.annotations.servers.Server server20 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray21 = new io.swagger.oas.annotations.servers.Server[] { server20 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        boolean boolean23 = serverListOptional22.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema24.getNot();
        boolean boolean32 = serverListOptional22.equals((java.lang.Object) schema31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema31.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema31.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal37 = schema31.getMaximum();
        schema11.setNot(schema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema39.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema49.setDescription("hi!");
        strComparableSchema49.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal60 = strComparableSchema49.getMultipleOf();
        java.lang.String str61 = strComparableSchema49.get$ref();
        java.lang.String[] strArray66 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        strComparableSchema49.setRequired((java.util.List<java.lang.String>) strList67);
        schema48.setNot((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.lang.Integer int71 = strComparableSchema49.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema49.properties(strMap72);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        strComparableSchema49.setExternalDocs(externalDocumentation74);
        java.lang.Object obj76 = strComparableSchema49.getExample();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema49.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema80 = schema78.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = schema80.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str84 = strComparableSchema83.get$ref();
        java.lang.String[] strArray86 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        strComparableSchema83.setRequired((java.util.List<java.lang.String>) strList87);
        schema80.setRequired((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema91 = schema11.required((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema93 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertNotNull(serverListOptional22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test09460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09460");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema schema16 = null;
        schema15.setNot(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema15.name(",");
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema19.multipleOf(bigDecimal21);
        java.util.List<java.lang.String> strList23 = schema22.getRequired();
        io.swagger.oas.models.media.Schema schema25 = schema22.minProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean26 = schema25.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test09461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09461");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.addRequiredItem("hi!");
        java.lang.String str12 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Integer int15 = strComparableSchema0.getMaxProperties();
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09462");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        io.swagger.oas.models.media.XML xML8 = null;
        schema5.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema5.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema12.title("");
        io.swagger.oas.models.media.Schema schema22 = schema5.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema24 = schema5.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.writeOnly((java.lang.Boolean) false);
        schema27.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema27.title("#/components/schemas/");
        schema31.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema31.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema31.discriminator(discriminator35);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        schema31.setExternalDocs(externalDocumentation37);
        schema5.setNot(schema31);
        io.swagger.oas.models.media.XML xML40 = null;
        schema31.setXml(xML40);
        java.lang.Boolean boolean42 = schema31.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + false + "'", boolean42, false);
    }

    @Test
    public void test09463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09463");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = strComparableSchema2.getMinimum();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional13 = java.util.Optional.of(strComparableSchema2);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema2.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = schema16.getFormat();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test09464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09464");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal52 = strComparableSchema41.getMultipleOf();
        java.lang.String str53 = strComparableSchema41.get$ref();
        java.lang.String[] strArray58 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        strComparableSchema41.setRequired((java.util.List<java.lang.String>) strList59);
        java.lang.Integer int62 = strComparableSchema41.getMaxLength();
        java.lang.Integer int63 = strComparableSchema41.getMaxProperties();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema41.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        strComparableSchema66.setDescription("hi!");
        strComparableSchema66.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal77 = strComparableSchema66.getMultipleOf();
        java.lang.String str78 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema schema79 = schema65.example((java.lang.Object) strComparableSchema66);
        io.swagger.oas.models.media.Schema schema81 = schema79.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML82 = schema81.getXml();
        io.swagger.oas.models.media.Schema schema84 = schema81.uniqueItems((java.lang.Boolean) true);
        schema40.setNot(schema84);
        io.swagger.oas.models.media.Schema schema87 = schema84.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema89 = schema84.deprecated((java.lang.Boolean) true);
        schema84.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(bigDecimal77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(xML82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test09465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09465");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        java.lang.String str8 = strComparableSchema2.getDescription();
        strComparableSchema2.setMinLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal11 = strComparableSchema2.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(bigDecimal11);
    }

    @Test
    public void test09466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09466");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        strComparableSchema0.setMaxProperties((java.lang.Integer) 100);
        java.lang.String str11 = strComparableSchema0.getPattern();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09467");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        strComparableSchema18.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema18.multipleOf(bigDecimal29);
        schema30.setExample((java.lang.Object) "hi!");
        schema30.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = schema30.getReadOnly();
        java.lang.Boolean boolean36 = schema30.getNullable();
        schema30.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema0.not(schema30);
        io.swagger.oas.models.media.Schema schema41 = schema30.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema48.setDescription("hi!");
        strComparableSchema48.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema42.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema42.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML62 = null;
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema42.xml(xML62);
        schema30.setNot(schema63);
        java.lang.Object obj65 = schema63.getExample();
        schema63.setTitle("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = null;
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.properties(strMap69);
        java.lang.Boolean boolean71 = schema70.getUniqueItems();
        schema70.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal74 = null;
        schema70.setMultipleOf(bigDecimal74);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema70.externalDocs(externalDocumentation76);
        io.swagger.oas.models.media.Schema schema79 = schema77.format("Optional.empty");
        io.swagger.oas.models.media.Schema schema81 = schema79.description("Optional.empty");
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema79.maximum(bigDecimal82);
        java.math.BigDecimal bigDecimal84 = schema79.getMultipleOf();
        schema63.setNot(schema79);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(obj65);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(bigDecimal84);
    }

    @Test
    public void test09468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09468");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema9.deprecated((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass14 = schema13.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test09469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09469");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = strComparableSchema25.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableSchema25.getDefault();
        java.lang.Integer int28 = strComparableSchema25.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema25.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema2.not(schema36);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        strComparableSchema2.setDiscriminator(discriminator38);
        java.math.BigDecimal bigDecimal40 = strComparableSchema2.getMultipleOf();
        java.lang.Boolean boolean41 = strComparableSchema2.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNull(strComparable27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
    }

    @Test
    public void test09470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09470");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = strComparableSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema22.setExtensions(strMap32);
        strComparableSchema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema22.getNot();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema0.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema22);
        schema37.setName("#/components/schemas/no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = schema37.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(externalDocumentation40);
    }

    @Test
    public void test09471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09471");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema35.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema35.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = schema46.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal49 = schema48.getMaximum();
        java.lang.Boolean boolean50 = schema48.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema51 = schema34.additionalProperties(schema48);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + false + "'", boolean50, false);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test09472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09472");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj27 = strComparableSchema2.getExample();
        java.lang.Boolean boolean28 = strComparableSchema2.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray65 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        schema59.setExample((java.lang.Object) tagSetOptional66);
        java.lang.Object obj69 = null;
        schema59.addExtension("*/*", obj69);
        java.lang.String str71 = schema59.getDescription();
        java.lang.String str72 = schema59.getType();
        java.lang.String str73 = schema59.getName();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema31.addProperties("*/*", schema59);
        java.math.BigDecimal bigDecimal75 = schema74.getMultipleOf();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema2.additionalProperties(schema74);
        io.swagger.oas.models.media.Schema schema78 = schema74.nullable((java.lang.Boolean) true);
        java.lang.Integer int79 = schema78.getMinLength();
        schema78.setMinLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal82 = schema78.getMaximum();
        java.util.List<java.lang.String> strList83 = schema78.getRequired();
        io.swagger.oas.models.media.Schema schema85 = schema78.nullable((java.lang.Boolean) false);
        java.lang.String str86 = schema78.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test09473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09473");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        java.lang.Boolean boolean27 = strComparableSchema2.getExclusiveMinimum();
        strComparableSchema2.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        strComparableSchema2.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema2.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMultipleOf(bigDecimal34);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test09474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09474");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str59 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema58.setDescription("hi!");
        strComparableSchema58.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema48.externalDocs(externalDocumentation71);
        strComparableSchema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema48.multipleOf(bigDecimal74);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema48.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 10\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test09475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09475");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema4.description("");
        java.lang.Integer int7 = schema4.getMaxItems();
        schema4.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema4.xml(xML10);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test09476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09476");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean13 = strComparableSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = schema15.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.writeOnly((java.lang.Boolean) false);
        schema21.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.title("#/components/schemas/");
        java.lang.Boolean boolean26 = schema21.getExclusiveMinimum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList27 = schema21.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema29.setNullable((java.lang.Boolean) false);
        java.lang.String str42 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.name("");
        io.swagger.oas.models.media.Schema schema45 = null;
        schema44.setNot(schema45);
        io.swagger.oas.models.media.Schema schema48 = schema44.name(",");
        schema44.setMinItems((java.lang.Integer) 100);
        java.lang.Boolean boolean51 = schema44.getReadOnly();
        schema21.addExtension("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema schema53 = schema15.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema44);
        schema44.setMaxProperties((java.lang.Integer) 0);
        java.lang.String str56 = schema44.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(strComparableList27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test09477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09477");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        strComparableSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str19 = strComparableSchema0.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test09478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09478");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema16.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema16.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.String str56 = strComparableSchema50.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema50.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema49.required((java.util.List<java.lang.String>) strList62);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional67 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema0.required((java.util.List<java.lang.String>) strList62);
        java.math.BigDecimal bigDecimal69 = strComparableSchema0.getMaximum();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        strComparableSchema0.setMinItems((java.lang.Integer) 1);
        java.lang.Integer int74 = strComparableSchema0.getMaxProperties();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema0.nullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = strComparableSchema0.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strCollectionOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(bigDecimal69);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(strMap79);
    }

    @Test
    public void test09479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09479");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.pattern("#/components/schemas/");
        java.lang.Boolean boolean19 = strComparableSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.minimum(bigDecimal20);
        strComparableSchema0.setMaxProperties((java.lang.Integer) 10);
        java.lang.Boolean boolean24 = strComparableSchema0.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test09480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09480");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        schema2.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.maximum(bigDecimal11);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList22 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean23 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean24 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean25 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean26 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean27 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean28 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean29 = strComparableList22.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean30 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean31 = strComparableList22.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList22);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = schema12.getExtensions();
        io.swagger.oas.models.media.Schema schema35 = schema12.addRequiredItem("");
        java.lang.Boolean boolean36 = schema12.getNullable();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = schema12.getProperties();
        io.swagger.oas.models.media.Schema schema39 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema12.uniqueItems((java.lang.Boolean) false);
        java.lang.Object obj42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.example(obj42);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test09481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09481");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema0.getEnum();
        strComparableSchema0.setMinLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        strComparableSchema0.setDiscriminator(discriminator24);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setDescription("#/components/schemas/hi!");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test09482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09482");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema5.multipleOf(bigDecimal12);
        schema13.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema17.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList23 = strComparableSchema22.getRequired();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.Integer int47 = strComparableSchema26.getMaxLength();
        strComparableSchema26.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema17.setDefault((java.lang.Object) strComparableSchema26);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema26.discriminator(discriminator52);
        schema13.addExtension("no description", (java.lang.Object) schema53);
        java.util.List<java.lang.String> strList55 = schema53.getRequired();
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.xml(xML56);
        java.lang.Integer int58 = schema53.getMaxItems();
        io.swagger.oas.models.media.Schema schema60 = schema53.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema62 = schema53.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal63 = null;
        schema62.setMultipleOf(bigDecimal63);
        java.lang.String str65 = schema62.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test09483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09483");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        java.lang.Integer int27 = schema26.getMaxItems();
        java.lang.Integer int28 = schema26.getMaxItems();
        io.swagger.oas.models.media.Schema schema30 = schema26.nullable((java.lang.Boolean) false);
        schema26.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray41 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional42 = io.swagger.jaxrs2.OperationParser.getTags(strArray41);
        schema35.setExample((java.lang.Object) tagSetOptional42);
        java.math.BigDecimal bigDecimal44 = schema35.getMinimum();
        java.math.BigDecimal bigDecimal45 = schema35.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal58 = strComparableSchema47.getMultipleOf();
        java.lang.String str59 = strComparableSchema47.get$ref();
        java.lang.String[] strArray64 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        strComparableSchema47.setRequired((java.util.List<java.lang.String>) strList65);
        java.lang.Integer int68 = strComparableSchema47.getMaxLength();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema47.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema71 = schema35.addProperties("#/components/schemas/", schema70);
        io.swagger.oas.models.media.Schema schema73 = schema35.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = schema35.getExtensions();
        java.math.BigDecimal bigDecimal75 = null;
        schema35.setMaximum(bigDecimal75);
        schema26.setExample((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema schema79 = schema35.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(tagSetOptional42);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test09484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09484");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        java.lang.String str18 = strComparableSchema0.getType();
        java.lang.Boolean boolean19 = strComparableSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test09485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09485");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.minItems((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.lang.Integer int35 = schema32.getMaxItems();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test09486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09486");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = schema2.getExternalDocs();
        io.swagger.oas.models.media.Schema schema10 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(externalDocumentation8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test09487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09487");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String[] strArray3 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema7.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema12 = schema10.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.not(schema12);
        java.lang.String str14 = strComparableSchema0.getFormat();
        strComparableSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int17 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test09488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09488");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.String> strList7 = strComparableSchema0.getRequired();
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.format(",");
        java.lang.Class<?> wildcardClass12 = schema11.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional13 = java.util.Optional.ofNullable(wildcardClass12);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClassOptional13);
    }

    @Test
    public void test09489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09489");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = strComparableSchema15.getExternalDocs();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema20.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = strComparableSchema20.getProperties();
        io.swagger.oas.models.media.Schema schema34 = schema18.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.lang.Boolean boolean35 = schema34.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        schema34.setDiscriminator(discriminator36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema34.getProperties();
        io.swagger.oas.models.media.Schema schema39 = schema13.properties(strMap38);
        java.util.List<java.lang.String> strList40 = schema13.getRequired();
        io.swagger.oas.models.media.Schema schema42 = schema13.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.annotations.servers.Server server44 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray45 = new io.swagger.oas.annotations.servers.Server[] { server44 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional46 = io.swagger.jaxrs2.OperationParser.getServers(serverArray45);
        boolean boolean47 = serverListOptional46.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.lang.String str54 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema48.getNot();
        boolean boolean56 = serverListOptional46.equals((java.lang.Object) schema55);
        java.lang.String str57 = serverListOptional46.toString();
        boolean boolean58 = serverListOptional46.isPresent();
        java.lang.String str59 = serverListOptional46.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.not((io.swagger.oas.models.media.Schema) strComparableSchema62);
        strComparableSchema60.setDescription("hi!");
        java.math.BigDecimal bigDecimal68 = null;
        strComparableSchema60.setMaximum(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema60.addRequiredItem("hi!");
        java.lang.Integer int72 = schema71.getMinLength();
        schema71.setWriteOnly((java.lang.Boolean) true);
        boolean boolean75 = serverListOptional46.equals((java.lang.Object) schema71);
        java.lang.Boolean boolean76 = schema71.getExclusiveMinimum();
        java.lang.Boolean boolean77 = schema71.getUniqueItems();
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema71.minimum(bigDecimal78);
        java.lang.Integer int80 = schema79.getMinLength();
        io.swagger.oas.models.media.Schema schema81 = schema42.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema79);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(serverArray45);
        org.junit.Assert.assertNotNull(serverListOptional46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Optional.empty" + "'", str57, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Optional.empty" + "'", str59, "Optional.empty");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test09490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09490");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        java.lang.Boolean boolean10 = schema2.getNullable();
        io.swagger.oas.models.media.XML xML11 = schema2.getXml();
        java.lang.Integer int12 = schema2.getMinLength();
        schema2.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(xML11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test09491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09491");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.xml(xML11);
        schema2.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema16 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean19 = schema2.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test09492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09492");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema12.writeOnly((java.lang.Boolean) true);
        java.lang.String str17 = schema12.getName();
        io.swagger.oas.models.media.Schema schema19 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema12.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test09493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09493");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        java.math.BigDecimal bigDecimal42 = null;
        strComparableSchema34.setMaximum(bigDecimal42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema44.setDescription("hi!");
        strComparableSchema44.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal55 = strComparableSchema44.getMultipleOf();
        java.lang.String str56 = strComparableSchema44.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        strComparableSchema44.setRequired((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema34.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema34.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean68 = schema67.getDeprecated();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema0.additionalProperties(schema67);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema0.minimum(bigDecimal70);
        schema71.setMinItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema71.multipleOf(bigDecimal74);
        java.lang.Integer int76 = schema75.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(int76);
    }

    @Test
    public void test09494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09494");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str59 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema58.setDescription("hi!");
        strComparableSchema58.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema48.externalDocs(externalDocumentation71);
        strComparableSchema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.util.List<java.lang.String> strList74 = strComparableSchema4.getRequired();
        strComparableSchema4.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strList74);
    }

    @Test
    public void test09495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09495");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.String str40 = strComparableSchema34.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional48 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema33.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema52.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        schema52.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test09496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09496");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.uniqueItems((java.lang.Boolean) false);
        strComparableSchema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.xml(xML29);
        strComparableSchema2.setNot(schema26);
        java.lang.Boolean boolean32 = schema26.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean32);
    }

    @Test
    public void test09497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09497");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.annotations.servers.Server server10 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray11 = new io.swagger.oas.annotations.servers.Server[] { server10 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray11);
        boolean boolean13 = serverListOptional12.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.String str20 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.getNot();
        boolean boolean22 = serverListOptional12.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema21.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema2.not(schema24);
        java.util.List<java.lang.String> strList26 = schema24.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal38 = strComparableSchema27.getMultipleOf();
        java.lang.String str39 = strComparableSchema27.get$ref();
        java.lang.String[] strArray44 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        strComparableSchema27.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.Integer int48 = strComparableSchema27.getMaxLength();
        java.lang.Integer int49 = strComparableSchema27.getMaxProperties();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema27.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema52.setDescription("hi!");
        strComparableSchema52.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal63 = strComparableSchema52.getMultipleOf();
        java.lang.String str64 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema schema65 = schema51.example((java.lang.Object) strComparableSchema52);
        java.lang.Integer int66 = schema65.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        java.lang.String str73 = strComparableSchema67.get$ref();
        java.lang.String[] strArray78 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional81 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList79);
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema67.required((java.util.List<java.lang.String>) strList79);
        io.swagger.oas.models.media.Schema schema83 = schema65.required((java.util.List<java.lang.String>) strList79);
        schema24.setRequired((java.util.List<java.lang.String>) strList79);
        io.swagger.oas.models.media.Schema schema86 = schema24.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str87 = schema86.getType();
        io.swagger.oas.models.media.Schema schema89 = schema86.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertNotNull(serverListOptional12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test09498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09498");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray22);
        schema16.setExample((java.lang.Object) tagSetOptional23);
        java.math.BigDecimal bigDecimal25 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema schema26 = schema13.not(schema16);
        java.lang.String str27 = schema13.get$ref();
        java.lang.Integer int28 = schema13.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test09499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09499");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        schema13.setProperties(strMap14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.multipleOf(bigDecimal16);
        schema13.setWriteOnly((java.lang.Boolean) true);
        java.lang.Integer int20 = schema13.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test09500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09500");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema schema10 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema6.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema6.minProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean19 = schema18.getUniqueItems();
        java.lang.Integer int20 = schema18.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(int20);
    }
}

