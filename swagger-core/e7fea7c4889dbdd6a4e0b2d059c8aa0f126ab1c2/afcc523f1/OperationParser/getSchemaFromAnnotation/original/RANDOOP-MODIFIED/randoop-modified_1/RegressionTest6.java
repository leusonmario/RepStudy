import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test03001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03001");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal17 = null;
        schema16.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.xml(xML19);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.externalDocs(externalDocumentation21);
        schema20.setType("no description");
        java.math.BigDecimal bigDecimal25 = schema20.getMultipleOf();
        io.swagger.oas.models.media.Schema schema27 = schema20.description("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03002");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        schema46.setExtensions(strMap61);
        java.math.BigDecimal bigDecimal63 = null;
        schema46.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        strComparableSchema65.setDescription("hi!");
        strComparableSchema65.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema65.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        strComparableSchema65.setExternalDocs(externalDocumentation77);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema65.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema81 = schema46.example((java.lang.Object) schema80);
        schema80.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean84 = schema80.getDeprecated();
        java.lang.Boolean boolean85 = schema80.getReadOnly();
        io.swagger.oas.models.media.Schema schema87 = schema80.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema80.externalDocs(externalDocumentation88);
        schema80.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + true + "'", boolean84, true);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test03003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03003");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema29.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        schema47.setName("no description");
        java.math.BigDecimal bigDecimal50 = null;
        schema47.setMaximum(bigDecimal50);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = schema47.getExtensions();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema0.not(schema47);
        schema47.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test03004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03004");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        strComparableSchema0.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema9.setExtensions(strMap13);
        strComparableSchema9.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int17 = strComparableSchema9.getMaxItems();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema20.setMaximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList32 = strComparableSchema20.getRequired();
        io.swagger.oas.models.media.Schema schema33 = schema19.required(strList32);
        strComparableSchema0.setRequired(strList32);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema0.getExternalDocs();
        java.math.BigDecimal bigDecimal36 = null;
        strComparableSchema0.setMinimum(bigDecimal36);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(externalDocumentation35);
    }

    @Test
    public void test03005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03005");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.lang.String str16 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.annotations.servers.Server server19 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray20 = new io.swagger.oas.annotations.servers.Server[] { server19 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        boolean boolean22 = serverListOptional21.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.lang.String str29 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema23.getNot();
        boolean boolean31 = serverListOptional21.equals((java.lang.Object) schema30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema30.properties(strMap32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        java.math.BigDecimal bigDecimal42 = null;
        strComparableSchema34.setMaximum(bigDecimal42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema44.setDescription("hi!");
        strComparableSchema44.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal55 = strComparableSchema44.getMultipleOf();
        java.lang.String str56 = strComparableSchema44.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        strComparableSchema44.setRequired((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema34.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema34.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str69 = strComparableSchema68.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema68.not((io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.String str74 = strComparableSchema68.get$ref();
        java.lang.String[] strArray79 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional82 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema68.required((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema84 = schema67.required((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema85 = schema30.required((java.util.List<java.lang.String>) strList80);
        schema18.setRequired((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema88 = schema18.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int89 = schema88.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(serverArray20);
        org.junit.Assert.assertNotNull(serverListOptional21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int89);
    }

    @Test
    public void test03006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03006");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        strComparableSchema0.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.minProperties((java.lang.Integer) (-1));
        schema21.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int26 = schema21.getMaxLength();
        io.swagger.oas.models.media.XML xML27 = schema21.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(xML27);
    }

    @Test
    public void test03007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03007");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema0.getEnum();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.addRequiredItem("Optional.empty");
        java.math.BigDecimal bigDecimal25 = schema24.getMultipleOf();
        java.lang.String str26 = schema24.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal39 = strComparableSchema28.getMultipleOf();
        java.lang.String str40 = strComparableSchema28.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        strComparableSchema28.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int51 = strComparableSchema28.getMaxLength();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema28.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.multipleOf(bigDecimal54);
        java.math.BigDecimal bigDecimal56 = schema55.getMaximum();
        io.swagger.oas.models.media.Schema schema58 = schema55.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema55);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test03008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03008");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = strComparableSchema2.getMaxItems();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema2.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema13.setMaximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema13.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList25 = strComparableSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema26 = schema12.required(strList25);
        io.swagger.oas.models.media.XML xML27 = null;
        schema12.setXml(xML27);
        io.swagger.oas.models.media.Schema schema30 = schema12.minProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal31 = null;
        schema12.setMultipleOf(bigDecimal31);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03009");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        schema13.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema18 = schema13.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        strComparableSchema19.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema19.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        strComparableSchema19.setExternalDocs(externalDocumentation31);
        io.swagger.oas.models.media.XML xML33 = strComparableSchema19.getXml();
        io.swagger.oas.models.media.XML xML34 = strComparableSchema19.getXml();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = strComparableSchema19.getProperties();
        strComparableSchema19.setMinItems((java.lang.Integer) 10);
        schema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema schema40 = schema13.readOnly((java.lang.Boolean) true);
        java.lang.String str41 = schema40.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNull(xML33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test03010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03010");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj56 = strComparableSchema31.getExample();
        io.swagger.oas.models.media.Schema schema57 = schema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema31.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema61 = schema59.exclusiveMinimum((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList62 = schema59.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strComparableList62);
    }

    @Test
    public void test03011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03011");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.xml(xML52);
        io.swagger.oas.models.media.Schema schema55 = schema51.name("");
        io.swagger.oas.models.media.XML xML56 = null;
        schema55.setXml(xML56);
        schema55.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test03012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03012");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema39.pattern("*/*");
        java.lang.String str42 = schema39.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test03013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03013");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        schema11.setMinItems((java.lang.Integer) 0);
        schema11.setName(",");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03014");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.String str25 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema0.name("no description");
        java.util.List<java.lang.String> strList28 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String str31 = strComparableSchema0.getTitle();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str25, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test03015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03015");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("Optional.empty");
        io.swagger.oas.models.media.Schema schema13 = schema11.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.lang.String str26 = strComparableSchema14.get$ref();
        java.lang.String[] strArray31 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        strComparableSchema14.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = strComparableSchema14.getMaxLength();
        java.lang.Integer int36 = strComparableSchema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema14.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal50 = strComparableSchema39.getMultipleOf();
        java.lang.String str51 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema schema52 = schema38.example((java.lang.Object) strComparableSchema39);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema39.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList62 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean64 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean65 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean66 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean67 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean68 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean69 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema54.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        schema11.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList72 = schema11.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strComparableList72);
    }

    @Test
    public void test03016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03016");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.xml(xML20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal34 = strComparableSchema23.getMultipleOf();
        java.lang.String str35 = strComparableSchema23.get$ref();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema23.maximum(bigDecimal36);
        strComparableSchema23.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.properties(strMap41);
        java.lang.Boolean boolean43 = schema42.getUniqueItems();
        schema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal46 = null;
        schema42.setMultipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema42.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema49.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema49.title("hi!");
        schema53.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean57 = strComparableSchema23.equals((java.lang.Object) (byte) 10);
        java.lang.Boolean boolean58 = strComparableSchema23.getReadOnly();
        strComparableSchema23.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        strComparableSchema23.setDiscriminator(discriminator61);
        io.swagger.oas.models.media.Schema schema63 = schema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema21.multipleOf(bigDecimal64);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + boolean58 + "' != '" + true + "'", boolean58, true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test03017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03017");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema10.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema36.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema46.setDescription("hi!");
        strComparableSchema46.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema40.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema40.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML60 = null;
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema40.xml(xML60);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema40.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema64 = schema36.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema40);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema40.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test03018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03018");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        strComparableSchema4.setDescription("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean31 = strComparableSchema4.getExclusiveMaximum();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test03019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03019");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        strComparableSchema0.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = strComparableSchema0.getMaximum();
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema0.setMinimum(bigDecimal21);
        java.lang.Boolean boolean23 = strComparableSchema0.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test03020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03020");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        java.lang.String str18 = strComparableSchema0.getType();
        java.lang.Boolean boolean19 = strComparableSchema0.getExclusiveMinimum();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList23 = strComparableSchema22.getRequired();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema22.setExclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema22.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.lang.String str31 = schema30.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test03021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03021");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal17 = null;
        schema16.setMaximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema16.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema16.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03022");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = strComparableSchema2.getDeprecated();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema2.getNot();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema2.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test03023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03023");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = strComparableSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.xml(xML15);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03024");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        schema2.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setNullable((java.lang.Boolean) false);
        java.lang.String str29 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema16.name("");
        java.math.BigDecimal bigDecimal32 = null;
        strComparableSchema16.setMinimum(bigDecimal32);
        java.lang.Boolean boolean34 = strComparableSchema16.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema16.description("*/*");
        boolean boolean37 = schema2.equals((java.lang.Object) schema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.properties(strMap39);
        java.lang.Boolean boolean41 = schema40.getUniqueItems();
        schema40.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj44 = schema40.getExample();
        io.swagger.oas.models.media.XML xML45 = schema40.getXml();
        io.swagger.oas.models.media.Schema schema47 = schema40.$ref("*/*");
        io.swagger.oas.models.media.Schema schema49 = schema40.format("");
        io.swagger.oas.models.media.Schema schema51 = schema40.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str52 = schema40.getPattern();
        schema2.setNot(schema40);
        io.swagger.oas.models.media.Schema schema55 = schema40.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(xML45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test03025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03025");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.xml(xML11);
        java.lang.String str13 = schema12.getTitle();
        java.lang.Boolean boolean14 = schema12.getReadOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        schema12.setExternalDocs(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test03026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03026");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema31.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema47.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema51.setNullable((java.lang.Boolean) true);
        strComparableSchema51.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str59 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = null;
        strComparableSchema60.setExtensions(strMap64);
        strComparableSchema60.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int68 = strComparableSchema60.getMaxItems();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema60.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        strComparableSchema71.setDescription("hi!");
        java.math.BigDecimal bigDecimal79 = null;
        strComparableSchema71.setMaximum(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema71.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList83 = strComparableSchema71.getRequired();
        io.swagger.oas.models.media.Schema schema84 = schema70.required(strList83);
        strComparableSchema51.setRequired(strList83);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional86 = java.util.Optional.of(strList83);
        strComparableSchema47.setRequired(strList83);
        schema31.setRequired(strList83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap89 = schema31.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strListOptional86);
        org.junit.Assert.assertNull(strMap89);
    }

    @Test
    public void test03027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03027");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setMinItems((java.lang.Integer) (-1));
        strComparableSchema0.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.lang.String str25 = strComparableSchema19.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional33 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema19.required((java.util.List<java.lang.String>) strList31);
        strComparableSchema19.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        java.math.BigDecimal bigDecimal45 = null;
        strComparableSchema37.setMaximum(bigDecimal45);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema37.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList49 = strComparableSchema37.getRequired();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema19.required(strList49);
        java.lang.Integer int51 = schema50.getMaxProperties();
        schema50.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema55 = schema50.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean56 = schema55.getDeprecated();
        java.lang.String str57 = schema55.getDescription();
        boolean boolean58 = strComparableSchema0.equals((java.lang.Object) str57);
        java.lang.Integer int59 = strComparableSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = strComparableSchema60.getExternalDocs();
        java.lang.Integer int62 = strComparableSchema60.getMaxLength();
        java.math.BigDecimal bigDecimal63 = null;
        strComparableSchema60.setMaximum(bigDecimal63);
        strComparableSchema60.setMinItems((java.lang.Integer) 100);
        strComparableSchema60.setType("hi!");
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema60.type("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + true + "'", boolean56, true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test03028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03028");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema24.setExternalDocs(externalDocumentation25);
        java.lang.String str27 = schema24.getFormat();
        io.swagger.oas.models.media.Schema schema29 = schema24.minProperties((java.lang.Integer) 10);
        schema24.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03029");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional45 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema2.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        io.swagger.oas.models.media.Schema schema50 = schema46.name("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test03030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03030");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema6.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable8 = strComparableSchema6.getDefault();
        java.lang.Integer int9 = strComparableSchema6.getMinProperties();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.minItems((java.lang.Integer) 0);
        strComparableSchema0.setDefault((java.lang.Object) strComparableSchema6);
        strComparableSchema6.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal27 = strComparableSchema16.getMultipleOf();
        java.lang.String str28 = strComparableSchema16.get$ref();
        java.lang.String[] strArray33 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        strComparableSchema16.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.Integer int37 = strComparableSchema16.getMaxLength();
        strComparableSchema16.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema40.setDescription("hi!");
        strComparableSchema40.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal51 = strComparableSchema40.getMultipleOf();
        java.lang.String str52 = strComparableSchema40.get$ref();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema40.maximum(bigDecimal53);
        io.swagger.oas.models.media.Discriminator discriminator55 = strComparableSchema40.getDiscriminator();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema16.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str58 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str64 = strComparableSchema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str70 = strComparableSchema69.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema71.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema69.not((io.swagger.oas.models.media.Schema) strComparableSchema71);
        strComparableSchema69.setDescription("hi!");
        strComparableSchema69.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema63.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema69);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema81.multipleOf(bigDecimal82);
        java.lang.Integer int84 = schema83.getMaxItems();
        strComparableSchema16.setAdditionalProperties(schema83);
        io.swagger.oas.models.media.Schema schema87 = schema83.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema89 = schema83.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema90 = strComparableSchema6.addProperties("", schema83);
        io.swagger.oas.models.media.XML xML91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema90.xml(xML91);
        java.lang.Boolean boolean93 = schema90.getUniqueItems();
        java.math.BigDecimal bigDecimal94 = null;
        schema90.setMultipleOf(bigDecimal94);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNull(strComparable8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(boolean93);
    }

    @Test
    public void test03031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03031");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        schema30.setExample((java.lang.Object) tagSetOptional37);
        java.lang.Object obj40 = null;
        schema30.addExtension("*/*", obj40);
        java.lang.String str42 = schema30.getDescription();
        java.lang.String str43 = schema30.getType();
        java.lang.String str44 = schema30.getName();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema2.addProperties("*/*", schema30);
        java.math.BigDecimal bigDecimal46 = schema45.getMultipleOf();
        schema45.setWriteOnly((java.lang.Boolean) true);
        schema45.setName("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema51.xml(xML57);
        schema58.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema62 = schema58.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML63 = null;
        schema62.setXml(xML63);
        boolean boolean65 = schema45.equals((java.lang.Object) xML63);
        schema45.setPattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test03032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03032");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = schema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.not(schema7);
        io.swagger.oas.models.media.Schema schema10 = schema7.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03033");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.XML xML35 = null;
        strComparableSchema0.setXml(xML35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str39 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        schema41.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test03034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03034");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        io.swagger.oas.annotations.media.Content[] contentArray8 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components13);
        boolean boolean15 = schema5.equals((java.lang.Object) contentArray8);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional17 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional19 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional21 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components20);
        java.util.Optional<io.swagger.oas.annotations.media.Content[]> contentArrayOptional22 = java.util.Optional.of(contentArray8);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray8, components27);
        java.util.Optional<io.swagger.oas.annotations.media.Content[]> contentArrayOptional29 = java.util.Optional.of(contentArray8);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(contentArray8);
        org.junit.Assert.assertNotNull(contentOptional10);
        org.junit.Assert.assertNotNull(contentOptional12);
        org.junit.Assert.assertNotNull(contentOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(contentOptional17);
        org.junit.Assert.assertNotNull(contentOptional19);
        org.junit.Assert.assertNotNull(contentOptional21);
        org.junit.Assert.assertNotNull(contentArrayOptional22);
        org.junit.Assert.assertNotNull(contentOptional24);
        org.junit.Assert.assertNotNull(contentOptional26);
        org.junit.Assert.assertNotNull(contentOptional28);
        org.junit.Assert.assertNotNull(contentArrayOptional29);
    }

    @Test
    public void test03035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03035");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
    }

    @Test
    public void test03036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03036");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema6.setMaxLength((java.lang.Integer) 0);
        schema6.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test03037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03037");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        schema2.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.writeOnly((java.lang.Boolean) false);
        schema21.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema18.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema27 = schema25.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int28 = schema27.getMinProperties();
        java.math.BigDecimal bigDecimal29 = null;
        schema27.setMinimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema2.not(schema27);
        io.swagger.oas.models.media.Schema schema32 = schema2.getNot();
        schema32.setDescription("hi!");
        java.lang.Object obj35 = schema32.getExample();
        io.swagger.oas.models.media.Schema schema37 = schema32.title("hi!");
        java.math.BigDecimal bigDecimal38 = null;
        schema37.setMinimum(bigDecimal38);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test03038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03038");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        strComparableSchema0.setProperties(strMap16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema18.setMaximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema18.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean30 = strComparableSchema18.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema18.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setExample((java.lang.Object) strComparableSchema18);
        java.math.BigDecimal bigDecimal34 = null;
        strComparableSchema0.setMinimum(bigDecimal34);
        java.math.BigDecimal bigDecimal36 = strComparableSchema0.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal36);
    }

    @Test
    public void test03039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03039");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxProperties((java.lang.Integer) 0);
        java.lang.Integer int7 = schema6.getMinProperties();
        java.lang.Integer int8 = schema6.getMinItems();
        java.lang.String str9 = schema6.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.writeOnly((java.lang.Boolean) false);
        schema12.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema12.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML17 = null;
        schema16.setXml(xML17);
        io.swagger.oas.models.media.Schema schema20 = schema16.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        schema20.setProperties(strMap21);
        io.swagger.oas.models.media.XML xML23 = null;
        schema20.setXml(xML23);
        io.swagger.oas.models.media.Schema schema26 = schema20.type("*/*");
        schema6.setNot(schema26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test03040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03040");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        schema30.setExample((java.lang.Object) tagSetOptional37);
        java.lang.Object obj40 = null;
        schema30.addExtension("*/*", obj40);
        java.lang.String str42 = schema30.getDescription();
        java.lang.String str43 = schema30.getType();
        java.lang.String str44 = schema30.getName();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema2.addProperties("*/*", schema30);
        java.math.BigDecimal bigDecimal46 = schema45.getMultipleOf();
        schema45.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str49 = schema45.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test03041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03041");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean46 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean47 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean48 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        boolean boolean49 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean50 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        java.lang.String str52 = strComparableSchema0.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test03042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03042");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.lang.Boolean boolean43 = strComparableSchema20.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList52 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean53 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean54 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean55 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean56 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean57 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean58 = strComparableList52.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean59 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean60 = strComparableList52.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema20.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList52);
        schema17.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList52);
        io.swagger.oas.models.media.Schema schema64 = schema17.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean65 = schema64.getExclusiveMinimum();
        java.lang.Integer int66 = schema64.getMinLength();
        java.math.BigDecimal bigDecimal67 = schema64.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNull(bigDecimal67);
    }

    @Test
    public void test03043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03043");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.lang.Integer int20 = strComparableSchema0.getMinLength();
        java.lang.Boolean boolean21 = strComparableSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test03044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03044");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal15 = strComparableSchema0.getMinimum();
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setType("");
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strComparableSchema0.getExtensions();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = strComparableSchema25.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableSchema25.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema40.setDescription("hi!");
        strComparableSchema40.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema34.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.lang.Boolean boolean53 = strComparableSchema30.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList62 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean64 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean65 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean66 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean67 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean68 = strComparableList62.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean69 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean70 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema30.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        strComparableSchema25.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        strComparableSchema25.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema25.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema76.xml(xML77);
        io.swagger.oas.models.media.Schema schema80 = schema76.name("");
        java.lang.Integer int81 = schema80.getMaxLength();
        schema24.setDefault((java.lang.Object) int81);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNull(strComparable27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(int81);
    }

    @Test
    public void test03045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03045");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.List<java.lang.String> strList20 = strComparableSchema5.getRequired();
        java.lang.Integer int21 = strComparableSchema5.getMinLength();
        strComparableSchema5.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test03046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03046");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.setMinLength((java.lang.Integer) 100);
        java.lang.String str30 = strComparableSchema20.getDescription();
        schema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema20.maximum(bigDecimal32);
        schema33.setFormat("");
        io.swagger.oas.models.media.Schema schema36 = schema33.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(schema36);
    }

    @Test
    public void test03047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03047");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema2.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean17 = schema16.getExclusiveMinimum();
        java.lang.String str18 = schema16.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema19.title("");
        java.lang.Boolean boolean29 = strComparableSchema19.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator30 = strComparableSchema19.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator31 = strComparableSchema19.getDiscriminator();
        java.lang.String str32 = strComparableSchema19.getPattern();
        strComparableSchema19.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema19.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean37 = strComparableSchema19.getExclusiveMaximum();
        schema16.setNot((io.swagger.oas.models.media.Schema) strComparableSchema19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test03048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03048");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = strComparableSchema24.getExternalDocs();
        java.lang.Integer int26 = strComparableSchema24.getMinProperties();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.maxProperties((java.lang.Integer) (-1));
        strComparableSchema24.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema2.setMinItems((java.lang.Integer) 10);
        java.lang.String str34 = strComparableSchema2.getType();
        java.lang.Boolean boolean35 = strComparableSchema2.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test03049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03049");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.xml(xML15);
        io.swagger.oas.models.media.Schema schema18 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal19 = null;
        schema14.setMultipleOf(bigDecimal19);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03050");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema21 = schema2.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean22 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setReadOnly((java.lang.Boolean) false);
        schema2.setDefault((java.lang.Object) strComparableSchema23);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema23.multipleOf(bigDecimal32);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.maximum(bigDecimal34);
        java.lang.String str36 = schema35.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test03051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03051");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        schema30.setExample((java.lang.Object) tagSetOptional37);
        java.lang.Object obj40 = null;
        schema30.addExtension("*/*", obj40);
        java.lang.String str42 = schema30.getDescription();
        java.lang.String str43 = schema30.getType();
        java.lang.String str44 = schema30.getName();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema2.addProperties("*/*", schema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str59 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema58.setDescription("hi!");
        strComparableSchema58.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema48.externalDocs(externalDocumentation71);
        java.lang.Object obj73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.example(obj73);
        java.lang.Object obj75 = schema72.getExample();
        java.lang.Boolean boolean76 = schema72.getDeprecated();
        schema72.setMaxItems((java.lang.Integer) (-1));
        schema30.setNot(schema72);
        schema30.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNull(boolean76);
    }

    @Test
    public void test03052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03052");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema44.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.externalDocs(externalDocumentation47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.maximum(bigDecimal49);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test03053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03053");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        strComparableSchema14.setDefault((java.lang.Object) strComparableSchema17);
        java.lang.Boolean boolean22 = strComparableSchema17.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.lang.String[] strArray41 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        strComparableSchema24.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.Integer int45 = strComparableSchema24.getMaxLength();
        strComparableSchema24.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema24.$ref("#/components/schemas/");
        strComparableSchema24.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal52 = null;
        strComparableSchema24.setMinimum(bigDecimal52);
        strComparableSchema24.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema24.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema17.minimum(bigDecimal59);
        strComparableSchema17.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test03054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03054");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema11.setDescription("hi!");
        strComparableSchema11.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema11.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = strComparableSchema11.getProperties();
        java.lang.Boolean boolean25 = strComparableSchema11.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = strComparableSchema11.getProperties();
        strComparableSchema11.setMinItems((java.lang.Integer) 0);
        strComparableSchema11.setExclusiveMinimum((java.lang.Boolean) true);
        boolean boolean31 = schema8.equals((java.lang.Object) strComparableSchema11);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema8.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = strComparableSchema34.getExternalDocs();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema34.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema39.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = strComparableSchema39.getProperties();
        io.swagger.oas.models.media.Schema schema53 = schema37.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema39);
        java.lang.Boolean boolean54 = schema53.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        schema53.setDiscriminator(discriminator55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = schema53.getProperties();
        schema33.setProperties(strMap57);
        io.swagger.oas.models.media.Schema schema59 = schema33.getNot();
        schema33.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(schema59);
    }

    @Test
    public void test03055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03055");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        java.lang.Integer int12 = schema11.getMinItems();
        java.lang.Integer int13 = schema11.getMinItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = schema11.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test03056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03056");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional4.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
    }

    @Test
    public void test03057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03057");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.XML xML14 = strComparableSchema0.getXml();
        strComparableSchema0.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNull(xML14);
    }

    @Test
    public void test03058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03058");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.$ref("Optional.empty");
        schema24.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal27 = null;
        schema24.setMinimum(bigDecimal27);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03059");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) 100);
        schema39.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema39.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema44.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema44.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema44.multipleOf(bigDecimal51);
        io.swagger.oas.models.media.Schema schema53 = schema52.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema54 = schema43.example((java.lang.Object) schema52);
        schema52.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test03060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03060");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        strComparableSchema0.setDefault((java.lang.Object) 0.0d);
        strComparableSchema0.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.format("");
        java.lang.String str26 = strComparableSchema0.getName();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03061");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        java.lang.Integer int12 = strComparableSchema10.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema14.description("");
        java.lang.Integer int17 = schema14.getMaxItems();
        io.swagger.oas.models.media.Schema schema19 = schema14.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = schema19.getMultipleOf();
        schema2.setAdditionalProperties(schema19);
        io.swagger.oas.models.media.Schema schema23 = schema2.addRequiredItem(",");
        schema23.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema28.setExtensions(strMap32);
        strComparableSchema28.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema28.minimum(bigDecimal36);
        schema37.set$ref("no description");
        schema37.setDeprecated((java.lang.Boolean) false);
        schema37.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema45 = schema37.format("no description");
        io.swagger.oas.models.media.Schema schema47 = schema45.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema49 = schema45.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        java.lang.String str52 = strComparableSchema50.getFormat();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema50.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema55.setNullable((java.lang.Boolean) false);
        java.lang.String str68 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema55.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = strComparableSchema72.getExternalDocs();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema72.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str78 = strComparableSchema77.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema79.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema77.not((io.swagger.oas.models.media.Schema) strComparableSchema79);
        strComparableSchema77.setDescription("hi!");
        strComparableSchema77.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema77.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap90 = strComparableSchema77.getProperties();
        io.swagger.oas.models.media.Schema schema91 = schema75.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema77);
        java.lang.Boolean boolean92 = strComparableSchema77.getDeprecated();
        io.swagger.oas.models.media.Schema schema93 = schema70.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema77);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap94 = schema93.getProperties();
        strComparableSchema50.setProperties(strMap94);
        io.swagger.oas.models.media.Schema schema96 = schema49.properties(strMap94);
        io.swagger.oas.models.media.Schema schema97 = schema23.properties(strMap94);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(externalDocumentation73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(boolean92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test03062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03062");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        schema2.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal26 = strComparableSchema15.getMultipleOf();
        java.lang.String str27 = strComparableSchema15.get$ref();
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        strComparableSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.Integer int36 = strComparableSchema15.getMaxLength();
        java.lang.Integer int37 = strComparableSchema15.getMaxProperties();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema40.setDescription("hi!");
        strComparableSchema40.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal51 = strComparableSchema40.getMultipleOf();
        java.lang.String str52 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema schema53 = schema39.example((java.lang.Object) strComparableSchema40);
        java.lang.Integer int54 = schema53.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        java.lang.String str61 = strComparableSchema55.get$ref();
        java.lang.String[] strArray66 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional69 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema55.required((java.util.List<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema71 = schema53.required((java.util.List<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema schema73 = schema71.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal74 = null;
        schema73.setMinimum(bigDecimal74);
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = schema73.getExtensions();
        schema2.setExtensions(strMap76);
        java.lang.String str78 = schema2.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test03063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03063");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.type("no description");
        java.math.BigDecimal bigDecimal12 = schema11.getMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        java.lang.Object obj15 = null;
        boolean boolean16 = schema11.equals(obj15);
        io.swagger.oas.models.media.Schema schema17 = schema11.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03064");
        io.swagger.oas.annotations.responses.ApiResponse apiResponse0 = null;
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray1 = new io.swagger.oas.annotations.responses.ApiResponse[] { apiResponse0 };
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional2 = java.util.Optional.ofNullable(apiResponseArray1);
        javax.ws.rs.Produces produces3 = null;
        javax.ws.rs.Produces produces4 = null;
        io.swagger.oas.models.Components components5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional6 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray1, produces3, produces4, components5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(apiResponseArray1);
        org.junit.Assert.assertNotNull(apiResponseArrayOptional2);
    }

    @Test
    public void test03065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03065");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        io.swagger.oas.models.media.Schema schema62 = schema46.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema64 = schema46.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str78 = strComparableSchema77.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema79.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema77.not((io.swagger.oas.models.media.Schema) strComparableSchema79);
        strComparableSchema77.setDescription("hi!");
        strComparableSchema77.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema71.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema77);
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema71);
        java.lang.Boolean boolean90 = strComparableSchema67.getExclusiveMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap91 = null;
        io.swagger.oas.models.media.Schema schema92 = strComparableSchema67.properties(strMap91);
        io.swagger.oas.models.media.Schema schema94 = strComparableSchema67.$ref(",");
        schema46.setDefault((java.lang.Object) schema94);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(boolean90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test03066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03066");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        java.lang.Integer int35 = strComparableSchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema schema51 = schema37.example((java.lang.Object) strComparableSchema38);
        boolean boolean52 = strComparableSchema0.equals((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test03067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03067");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        strComparableSchema6.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema6.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema31.setExternalDocs(externalDocumentation32);
        strComparableSchema2.setDefault((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema36 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        java.math.BigDecimal bigDecimal45 = null;
        strComparableSchema37.setMaximum(bigDecimal45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal58 = strComparableSchema47.getMultipleOf();
        java.lang.String str59 = strComparableSchema47.get$ref();
        java.lang.String[] strArray64 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        strComparableSchema47.setRequired((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema37.required((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema37.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema72 = schema70.minLength((java.lang.Integer) 1);
        schema36.setExample((java.lang.Object) schema72);
        java.lang.Integer int74 = schema72.getMinItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = schema72.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNull(externalDocumentation75);
    }

    @Test
    public void test03068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03068");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.uniqueItems((java.lang.Boolean) false);
        strComparableSchema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.xml(xML29);
        strComparableSchema2.setNot(schema26);
        java.lang.Boolean boolean32 = strComparableSchema2.getReadOnly();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = strComparableSchema2.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(strMap33);
    }

    @Test
    public void test03069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03069");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        strComparableSchema6.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema6.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema31.setExternalDocs(externalDocumentation32);
        strComparableSchema2.setDefault((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema35.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        strComparableSchema35.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema35.title("Optional.empty");
        java.lang.Integer int51 = strComparableSchema35.getMinProperties();
        io.swagger.oas.models.media.Schema schema52 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.math.BigDecimal bigDecimal53 = null;
        schema52.setMaximum(bigDecimal53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal66 = strComparableSchema55.getMultipleOf();
        java.lang.String str67 = strComparableSchema55.get$ref();
        java.lang.String[] strArray72 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        strComparableSchema55.setRequired((java.util.List<java.lang.String>) strList73);
        java.lang.Integer int76 = strComparableSchema55.getMaxLength();
        strComparableSchema55.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema55.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        schema80.setExternalDocs(externalDocumentation81);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str84 = strComparableSchema83.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema85 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema85.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema83.not((io.swagger.oas.models.media.Schema) strComparableSchema85);
        strComparableSchema83.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema92 = strComparableSchema83.exclusiveMinimum((java.lang.Boolean) false);
        schema80.setExample((java.lang.Object) strComparableSchema83);
        io.swagger.oas.models.media.Schema schema94 = schema52.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema83);
        io.swagger.oas.models.media.Schema schema96 = strComparableSchema83.format("#/components/schemas/");
        java.lang.String str97 = schema96.getName();
        schema96.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(str97);
    }

    @Test
    public void test03070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03070");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = schema8.title("hi!");
        java.math.BigDecimal bigDecimal11 = null;
        schema8.setMinimum(bigDecimal11);
        java.util.List<java.lang.String> strList13 = schema8.getRequired();
        io.swagger.oas.models.media.Schema schema14 = schema8.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03071");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean13 = strComparableSchema7.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strComparableSchema7.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema16 = schema6.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema7);
        java.lang.Boolean boolean17 = schema6.getReadOnly();
        io.swagger.oas.models.media.Schema schema19 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = schema6.readOnly((java.lang.Boolean) false);
        schema21.setMaxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean24 = schema21.getExclusiveMinimum();
        java.lang.Integer int25 = schema21.getMinItems();
        io.swagger.oas.models.media.Schema schema27 = schema21.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03072");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema16.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema16.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.String str56 = strComparableSchema50.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema50.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema49.required((java.util.List<java.lang.String>) strList62);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional67 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema0.required((java.util.List<java.lang.String>) strList62);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = null;
        strComparableSchema0.setProperties(strMap69);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = schema72.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strCollectionOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03073");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("Optional.empty");
        io.swagger.oas.models.media.Schema schema13 = schema11.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.lang.String str26 = strComparableSchema14.get$ref();
        java.lang.String[] strArray31 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        strComparableSchema14.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = strComparableSchema14.getMaxLength();
        java.lang.Integer int36 = strComparableSchema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema14.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal50 = strComparableSchema39.getMultipleOf();
        java.lang.String str51 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema schema52 = schema38.example((java.lang.Object) strComparableSchema39);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema39.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList62 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean64 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean65 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean66 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean67 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean68 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean69 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema54.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        schema11.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        io.swagger.oas.models.media.Schema schema72 = schema11.getAdditionalProperties();
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema11.maximum(bigDecimal73);
        java.lang.Class<?> wildcardClass75 = schema11.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test03074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03074");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.lang.Cloneable> cloneableOptional4 = java.util.Optional.ofNullable((java.lang.Cloneable) serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional6 = java.util.Optional.of(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema9.setDescription("hi!");
        strComparableSchema9.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema9.name("");
        io.swagger.oas.models.media.Schema schema24 = schema22.description("*/*");
        java.lang.Integer int25 = schema22.getMaxItems();
        boolean boolean26 = serverListOptional8.equals((java.lang.Object) int25);
        java.lang.String str27 = serverListOptional8.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(cloneableOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverArrayOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Optional.empty" + "'", str27, "Optional.empty");
    }

    @Test
    public void test03075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03075");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema37 = schema33.addRequiredItem("Optional.empty");
        java.lang.String str38 = schema33.getFormat();
        java.lang.String str39 = schema33.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test03076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03076");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String str2 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.properties(strMap4);
        java.lang.Boolean boolean6 = schema5.getUniqueItems();
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj9 = schema5.getExample();
        io.swagger.oas.models.media.Schema schema11 = schema5.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema5.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema5.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema5.multipleOf(bigDecimal16);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.not(schema5);
        schema5.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(obj9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03077");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.title("");
        java.lang.Integer int12 = schema11.getMaxLength();
        schema11.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema11.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema11.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = strComparableSchema19.getExternalDocs();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema19.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema24.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = strComparableSchema24.getProperties();
        io.swagger.oas.models.media.Schema schema38 = schema22.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.lang.Boolean boolean39 = schema38.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        schema38.setDiscriminator(discriminator40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema38.getProperties();
        schema11.setProperties(strMap42);
        java.lang.String str44 = schema11.getTitle();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test03078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03078");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema2.properties(strMap26);
        strComparableSchema2.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Comparable<java.lang.String> strComparable30 = strComparableSchema2.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema31.setDescription("hi!");
        strComparableSchema31.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema31.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        strComparableSchema31.setExternalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema31.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema31.maxProperties((java.lang.Integer) 1);
        java.lang.String str49 = strComparableSchema31.getType();
        java.lang.Boolean boolean50 = strComparableSchema31.getExclusiveMinimum();
        strComparableSchema31.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList54 = strComparableSchema53.getRequired();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema53.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema53.setExclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema53.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema2.setExample((java.lang.Object) schema61);
        io.swagger.oas.models.media.Schema schema64 = schema61.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean65 = schema64.getUniqueItems();
        io.swagger.oas.models.media.Schema schema67 = schema64.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strComparable30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test03079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03079");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema39.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test03080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03080");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        strComparableSchema0.setName("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation20);
        java.lang.Boolean boolean22 = strComparableSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.minimum(bigDecimal23);
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03081");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema11.uniqueItems((java.lang.Boolean) false);
        schema16.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema20 = schema16.deprecated((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = schema16.getEnum();
        java.lang.String[] strArray26 = new java.lang.String[] { ",", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        io.swagger.oas.models.media.Schema schema29 = schema16.required((java.util.List<java.lang.String>) strList27);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        java.lang.Integer int32 = schema31.getMinProperties();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strComparableList21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test03082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03082");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setDeprecated((java.lang.Boolean) true);
        schema6.setExclusiveMinimum((java.lang.Boolean) false);
        schema6.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.properties(strMap14);
        java.lang.Boolean boolean16 = schema15.getUniqueItems();
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal19 = null;
        schema15.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema15.externalDocs(externalDocumentation21);
        io.swagger.oas.models.media.Schema schema24 = schema22.format("Optional.empty");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema26.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema28.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML31 = null;
        schema30.setXml(xML31);
        io.swagger.oas.models.media.Schema schema33 = schema6.not(schema30);
        io.swagger.oas.models.media.Schema schema34 = schema30.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema34.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(schema34);
    }

    @Test
    public void test03083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03083");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean13 = strComparableSchema7.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strComparableSchema7.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema16 = schema6.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.uniqueItems((java.lang.Boolean) false);
        schema22.setDescription("");
        schema22.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        schema22.setExternalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema22.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = strComparableSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = schema22.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema7.additionalProperties(schema22);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema7.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal48 = strComparableSchema37.getMultipleOf();
        java.lang.String str49 = strComparableSchema37.get$ref();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema37.maximum(bigDecimal50);
        io.swagger.oas.models.media.Discriminator discriminator52 = strComparableSchema37.getDiscriminator();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema37.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.minimum(bigDecimal55);
        io.swagger.oas.models.media.Schema schema58 = schema54.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str64 = strComparableSchema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        strComparableSchema63.setDescription("hi!");
        java.math.BigDecimal bigDecimal71 = null;
        strComparableSchema63.setMaximum(bigDecimal71);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str74 = strComparableSchema73.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema75.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema73.not((io.swagger.oas.models.media.Schema) strComparableSchema75);
        strComparableSchema73.setDescription("hi!");
        strComparableSchema73.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal84 = strComparableSchema73.getMultipleOf();
        java.lang.String str85 = strComparableSchema73.get$ref();
        java.lang.String[] strArray90 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList91 = new java.util.ArrayList<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList91, strArray90);
        strComparableSchema73.setRequired((java.util.List<java.lang.String>) strList91);
        io.swagger.oas.models.media.Schema schema94 = strComparableSchema63.required((java.util.List<java.lang.String>) strList91);
        strComparableSchema59.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strList91);
        io.swagger.oas.models.media.Schema schema96 = schema58.required((java.util.List<java.lang.String>) strList91);
        schema36.setRequired((java.util.List<java.lang.String>) strList91);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(bigDecimal84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test03084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03084");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        java.lang.String str8 = strComparableSchema2.getDescription();
        strComparableSchema2.setFormat("#/components/schemas/");
        java.lang.Integer int11 = strComparableSchema2.getMaxLength();
        strComparableSchema2.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.lang.String str26 = strComparableSchema14.get$ref();
        java.lang.String[] strArray31 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        strComparableSchema14.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = strComparableSchema14.getMaxLength();
        strComparableSchema14.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema38.maximum(bigDecimal51);
        io.swagger.oas.models.media.Discriminator discriminator53 = strComparableSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema67.setDescription("hi!");
        strComparableSchema67.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema61.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema67);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        java.math.BigDecimal bigDecimal80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema79.multipleOf(bigDecimal80);
        java.lang.Integer int82 = schema81.getMaxItems();
        strComparableSchema14.setAdditionalProperties(schema81);
        io.swagger.oas.models.media.Discriminator discriminator84 = strComparableSchema14.getDiscriminator();
        java.lang.Object obj85 = null;
        strComparableSchema14.setDefault(obj85);
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema14.maxProperties((java.lang.Integer) 0);
        strComparableSchema2.setDefault((java.lang.Object) strComparableSchema14);
        java.lang.Boolean boolean90 = strComparableSchema14.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNull(discriminator84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(boolean90);
    }

    @Test
    public void test03085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03085");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        strComparableSchema0.setDescription("");
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int14 = strComparableSchema0.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test03086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03086");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema13.addRequiredItem("");
        schema13.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03087");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        java.lang.Integer int35 = strComparableSchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema schema51 = schema37.example((java.lang.Object) strComparableSchema38);
        boolean boolean52 = strComparableSchema0.equals((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema54.pattern("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj57 = schema54.getExample();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(obj57);
    }

    @Test
    public void test03088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03088");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        java.math.BigDecimal bigDecimal16 = schema15.getMinimum();
        schema15.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema15.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema15.format("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03089");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        java.lang.Integer int28 = strComparableSchema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema6.maxLength((java.lang.Integer) 10);
        strComparableSchema2.setExample((java.lang.Object) strComparableSchema6);
        java.lang.Boolean boolean34 = strComparableSchema6.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema6.minItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal37 = null;
        schema36.setMinimum(bigDecimal37);
        java.lang.Integer int39 = schema36.getMinLength();
        java.lang.Boolean boolean40 = schema36.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(boolean40);
    }

    @Test
    public void test03090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03090");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = schema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.not(schema7);
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        schema8.setMinLength((java.lang.Integer) 10);
        java.lang.String str13 = schema8.getTitle();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema8.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03091");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema2.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema2.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03092");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema schema30 = schema28.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str31 = schema28.getName();
        schema28.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test03093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03093");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.writeOnly((java.lang.Boolean) false);
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema3.additionalProperties(schema6);
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        schema12.set$ref("");
        java.lang.Integer int15 = schema12.getMinLength();
        io.swagger.oas.models.media.Schema schema17 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        java.math.BigDecimal bigDecimal27 = null;
        strComparableSchema19.setMaximum(bigDecimal27);
        strComparableSchema19.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema19.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal33 = schema32.getMaximum();
        io.swagger.oas.models.media.Schema schema35 = schema32.$ref("no description");
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema32.multipleOf(bigDecimal36);
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) bigDecimal36);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test03094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03094");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        java.lang.Object obj11 = schema2.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        schema2.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema2.xml(xML16);
        java.lang.String str18 = schema17.getFormat();
        java.util.List<java.lang.String> strList19 = schema17.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        strComparableSchema20.setExternalDocs(externalDocumentation32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema20.title("Optional.empty");
        schema35.setReadOnly((java.lang.Boolean) true);
        java.lang.String str38 = schema35.getName();
        schema35.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema42 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj43 = null;
        boolean boolean44 = schema42.equals(obj43);
        schema17.setDefault(obj43);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#/components/schemas/" + "'", str18, "#/components/schemas/");
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test03095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03095");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        java.lang.String str11 = schema10.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        java.lang.String[] strArray15 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        strComparableSchema12.setRequired((java.util.List<java.lang.String>) strList16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema19.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = schema22.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema12.not(schema24);
        io.swagger.oas.models.media.Schema schema26 = schema10.example((java.lang.Object) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema12.getNot();
        schema27.addEnumItemObject((java.lang.Comparable<java.lang.String>) "*/*");
        java.lang.String str30 = schema27.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test03096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03096");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String[] strArray3 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.annotations.servers.Server server16 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray17 = new io.swagger.oas.annotations.servers.Server[] { server16 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray17);
        boolean boolean19 = serverListOptional18.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.lang.String str26 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.getNot();
        boolean boolean28 = serverListOptional18.equals((java.lang.Object) schema27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema27.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = schema27.uniqueItems((java.lang.Boolean) false);
        schema32.setName("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator35 = schema32.getDiscriminator();
        schema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = schema32.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = schema15.not(schema32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        strComparableSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema schema44 = schema39.maxLength((java.lang.Integer) 100);
        java.lang.Boolean boolean45 = schema44.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(serverArray17);
        org.junit.Assert.assertNotNull(serverListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
    }

    @Test
    public void test03097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03097");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList36 = strComparableSchema35.getRequired();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema35.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal50 = strComparableSchema39.getMultipleOf();
        java.lang.String str51 = strComparableSchema39.get$ref();
        java.lang.String[] strArray56 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        strComparableSchema39.setRequired((java.util.List<java.lang.String>) strList57);
        java.lang.Integer int60 = strComparableSchema39.getMaxLength();
        strComparableSchema39.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str65 = strComparableSchema64.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema64.not((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema64.setDescription("hi!");
        strComparableSchema64.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema64.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation76 = null;
        strComparableSchema64.setExternalDocs(externalDocumentation76);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema64.format("");
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema39.additionalProperties(schema79);
        java.lang.Boolean boolean81 = schema80.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = schema80.getExtensions();
        strComparableSchema10.setExtensions(strMap82);
        strComparableSchema10.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(schema75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test03098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03098");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.addRequiredItem("*/*");
        java.lang.String str4 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema6.minLength((java.lang.Integer) 100);
        java.lang.Integer int9 = schema8.getMaxLength();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test03099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03099");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML25 = null;
        strComparableSchema0.setXml(xML25);
        java.lang.String str27 = strComparableSchema0.getDescription();
        java.lang.Integer int28 = strComparableSchema0.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test03100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03100");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema16.getNot();
        io.swagger.oas.models.media.Schema schema19 = schema17.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema17.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList22 = schema17.getRequired();
        schema17.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = schema17.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema17.getExtensions();
        java.lang.Object obj28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema17.example(obj28);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03101");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema6 = schema2.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema2.maxItems((java.lang.Integer) 0);
        java.lang.String str9 = schema8.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema8.setProperties(strMap10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test03102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03102");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        java.lang.Boolean boolean4 = schema2.getDeprecated();
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.minimum(bigDecimal5);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03103");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.ofNullable((java.lang.CharSequence) "#/components/schemas/no description");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test03104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03104");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.addRequiredItem("");
        java.lang.Object obj18 = strComparableSchema0.getExample();
        io.swagger.oas.annotations.media.Content[] contentArray19 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional21 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional23 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional25 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional27 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional29 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components28);
        strComparableSchema0.setDefault((java.lang.Object) contentOptional29);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.xml(xML31);
        java.lang.Integer int33 = schema32.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(contentArray19);
        org.junit.Assert.assertNotNull(contentOptional21);
        org.junit.Assert.assertNotNull(contentOptional23);
        org.junit.Assert.assertNotNull(contentOptional25);
        org.junit.Assert.assertNotNull(contentOptional27);
        org.junit.Assert.assertNotNull(contentOptional29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test03105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03105");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        strComparableSchema0.setMaxItems((java.lang.Integer) 1);
        java.lang.Boolean boolean29 = strComparableSchema0.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + false + "'", boolean29, false);
    }

    @Test
    public void test03106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03106");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj27 = strComparableSchema2.getExample();
        java.lang.Boolean boolean28 = strComparableSchema2.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray65 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        schema59.setExample((java.lang.Object) tagSetOptional66);
        java.lang.Object obj69 = null;
        schema59.addExtension("*/*", obj69);
        java.lang.String str71 = schema59.getDescription();
        java.lang.String str72 = schema59.getType();
        java.lang.String str73 = schema59.getName();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema31.addProperties("*/*", schema59);
        java.math.BigDecimal bigDecimal75 = schema74.getMultipleOf();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema2.additionalProperties(schema74);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema74.externalDocs(externalDocumentation77);
        schema74.setType("");
        io.swagger.oas.models.media.Schema schema82 = schema74.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML83 = schema74.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(xML83);
    }

    @Test
    public void test03107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03107");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        java.math.BigDecimal bigDecimal46 = null;
        schema45.setMultipleOf(bigDecimal46);
        schema45.set$ref("");
        java.math.BigDecimal bigDecimal50 = schema45.getMinimum();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal50);
    }

    @Test
    public void test03108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03108");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        io.swagger.oas.annotations.servers.Server[] serverArray4 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray4);
        boolean boolean6 = serverListOptional5.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList8 = serverListOptional5.orElse(serverList7);
        io.swagger.oas.models.servers.Server[] serverArray9 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList10 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList10, serverArray9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional5.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList10);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        java.lang.String str15 = serverListOptional14.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray16 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray16);
        java.lang.String str18 = serverListOptional17.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray19 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray19);
        boolean boolean21 = serverListOptional20.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList23 = serverListOptional20.orElse(serverList22);
        io.swagger.oas.models.servers.Server[] serverArray24 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList25 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList25, serverArray24);
        java.util.List<io.swagger.oas.models.servers.Server> serverList27 = serverListOptional20.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList25);
        java.util.List<io.swagger.oas.models.servers.Server> serverList28 = serverListOptional17.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList25);
        java.util.List<io.swagger.oas.models.servers.Server> serverList29 = serverListOptional14.orElse(serverList28);
        java.util.List<io.swagger.oas.models.servers.Server> serverList30 = serverListOptional5.orElse(serverList28);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional3.orElse(serverList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList33 = strComparableSchema32.getRequired();
        strComparableSchema32.setMinProperties((java.lang.Integer) 1);
        boolean boolean36 = serverListOptional3.equals((java.lang.Object) 1);
        java.lang.String str37 = serverListOptional3.toString();
        boolean boolean38 = serverListOptional3.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional3.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverArray4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(serverList8);
        org.junit.Assert.assertNotNull(serverArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Optional.empty" + "'", str15, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray16);
        org.junit.Assert.assertNotNull(serverListOptional17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Optional.empty" + "'", str18, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray19);
        org.junit.Assert.assertNotNull(serverListOptional20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(serverList23);
        org.junit.Assert.assertNotNull(serverArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(serverList27);
        org.junit.Assert.assertNotNull(serverList28);
        org.junit.Assert.assertNotNull(serverList29);
        org.junit.Assert.assertNotNull(serverList30);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Optional.empty" + "'", str37, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test03109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03109");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        boolean boolean4 = strComparableSchema0.equals((java.lang.Object) (short) 10);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.maxLength((java.lang.Integer) 1);
        strComparableSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean11 = strComparableSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema18.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema14.externalDocs(externalDocumentation37);
        schema38.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML41 = schema38.getXml();
        io.swagger.oas.models.media.Schema schema43 = schema38.minProperties((java.lang.Integer) (-1));
        java.lang.String str44 = schema38.getName();
        schema38.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema47.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema55.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator68 = strComparableSchema55.getDiscriminator();
        strComparableSchema47.addExtension("Optional.empty", (java.lang.Object) strComparableSchema55);
        java.lang.String str70 = strComparableSchema55.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = strComparableSchema55.getExtensions();
        schema38.setExtensions(strMap71);
        strComparableSchema0.setExtensions(strMap71);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(xML41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(strMap71);
    }

    @Test
    public void test03110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03110");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        schema13.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.XML xML17 = null;
        schema13.setXml(xML17);
        io.swagger.oas.models.media.Schema schema20 = schema13.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03111");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.xml(xML11);
        java.lang.String str13 = schema12.getTitle();
        io.swagger.oas.models.media.Schema schema15 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal16 = schema12.getMultipleOf();
        schema12.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test03112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03112");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema2.minProperties((java.lang.Integer) 1);
        java.lang.String str17 = schema16.toString();
        io.swagger.oas.models.media.Schema schema19 = schema16.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean20 = schema19.getExclusiveMaximum();
        schema19.setTitle("no description");
        io.swagger.oas.models.media.Schema schema24 = schema19.description("*/*");
        java.lang.Integer int25 = schema19.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test03113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03113");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        schema13.setFormat("Optional.empty");
        schema13.setType("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = null;
        strComparableSchema21.setExtensions(strMap25);
        strComparableSchema21.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema21.minimum(bigDecimal29);
        schema30.set$ref("no description");
        schema30.setDeprecated((java.lang.Boolean) false);
        schema30.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema38 = schema30.format("no description");
        io.swagger.oas.models.media.Schema schema40 = schema38.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema38.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        java.lang.String str45 = strComparableSchema43.getFormat();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema43.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema48.setDescription("hi!");
        strComparableSchema48.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema48.setNullable((java.lang.Boolean) false);
        java.lang.String str61 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema48.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = strComparableSchema65.getExternalDocs();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema65.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.not((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema70.setDescription("hi!");
        strComparableSchema70.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema70.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = strComparableSchema70.getProperties();
        io.swagger.oas.models.media.Schema schema84 = schema68.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean85 = strComparableSchema70.getDeprecated();
        io.swagger.oas.models.media.Schema schema86 = schema63.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = schema86.getProperties();
        strComparableSchema43.setProperties(strMap87);
        io.swagger.oas.models.media.Schema schema89 = schema42.properties(strMap87);
        io.swagger.oas.models.media.Schema schema90 = schema13.properties(strMap87);
        schema90.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test03114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03114");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray23 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        schema17.setExample((java.lang.Object) tagSetOptional24);
        java.lang.Object obj27 = null;
        schema17.addExtension("*/*", obj27);
        java.lang.String str29 = schema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        java.lang.Boolean boolean38 = schema33.getUniqueItems();
        schema17.addExtension("Optional.empty", (java.lang.Object) boolean38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema17.getExtensions();
        schema10.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema schema43 = schema10.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema10.externalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema46.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema46.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = strComparableSchema46.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = strComparableSchema55.getExternalDocs();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema55.minItems((java.lang.Integer) (-1));
        schema58.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema58.setExclusiveMinimum((java.lang.Boolean) false);
        schema58.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str65 = schema58.getFormat();
        io.swagger.oas.models.media.Schema schema67 = schema58.maxLength((java.lang.Integer) (-1));
        strComparableSchema46.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (-1));
        io.swagger.oas.models.media.Schema schema69 = schema10.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema46.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema46.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(externalDocumentation53);
        org.junit.Assert.assertNull(externalDocumentation56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test03115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03115");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        schema33.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema33.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test03116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03116");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal5 = schema2.getMaximum();
        schema2.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList8 = schema2.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test03117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03117");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.xml(xML25);
        io.swagger.oas.models.media.XML xML27 = schema24.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(xML27);
    }

    @Test
    public void test03118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03118");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList48 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean51 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean52 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean53 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean54 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList48);
        java.lang.Boolean boolean57 = schema40.getNullable();
        io.swagger.oas.models.media.Schema schema59 = schema40.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema40.type("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML62 = schema61.getXml();
        schema61.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(xML62);
    }

    @Test
    public void test03119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03119");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        strComparableSchema0.setMinItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal52 = strComparableSchema0.getMultipleOf();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(bigDecimal52);
    }

    @Test
    public void test03120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03120");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = strComparableSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema16.setExternalDocs(externalDocumentation17);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03121");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.discriminator(discriminator14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema16.description("Optional.empty");
        strComparableSchema16.setPattern("no description");
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema16.minItems((java.lang.Integer) (-1));
        schema26.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test03122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03122");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        java.lang.Boolean boolean4 = schema2.getDeprecated();
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.properties(strMap8);
        java.lang.Boolean boolean10 = schema9.getUniqueItems();
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj13 = schema9.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema9.setExternalDocs(externalDocumentation14);
        java.lang.String str16 = schema9.toString();
        io.swagger.oas.models.media.XML xML17 = null;
        schema9.setXml(xML17);
        schema6.setAdditionalProperties(schema9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal31 = strComparableSchema20.getMultipleOf();
        java.lang.String str32 = strComparableSchema20.get$ref();
        java.lang.String[] strArray37 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        strComparableSchema20.setRequired((java.util.List<java.lang.String>) strList38);
        java.lang.Integer int41 = strComparableSchema20.getMaxLength();
        strComparableSchema20.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema44.setDescription("hi!");
        strComparableSchema44.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal55 = strComparableSchema44.getMultipleOf();
        java.lang.String str56 = strComparableSchema44.get$ref();
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema44.maximum(bigDecimal57);
        io.swagger.oas.models.media.Discriminator discriminator59 = strComparableSchema44.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str74 = strComparableSchema73.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema75.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema73.not((io.swagger.oas.models.media.Schema) strComparableSchema75);
        strComparableSchema73.setDescription("hi!");
        strComparableSchema73.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema67.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema73);
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema85.multipleOf(bigDecimal86);
        java.lang.Integer int88 = schema87.getMaxItems();
        strComparableSchema20.setAdditionalProperties(schema87);
        io.swagger.oas.models.media.Schema schema91 = schema87.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema93 = schema87.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema94 = schema6.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator95 = null;
        io.swagger.oas.models.media.Schema schema96 = schema6.discriminator(discriminator95);
        schema6.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(int88);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test03123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03123");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.ofNullable((java.lang.CharSequence) "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test03124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03124");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str9 = strComparableSchema0.getTitle();
        java.lang.Integer int10 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test03125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03125");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema2.minProperties((java.lang.Integer) 1);
        java.lang.String str17 = schema16.toString();
        io.swagger.oas.models.media.Schema schema19 = schema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema16.maxProperties((java.lang.Integer) 0);
        java.lang.Object obj22 = schema16.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal34 = strComparableSchema23.getMultipleOf();
        java.lang.String str35 = strComparableSchema23.get$ref();
        java.lang.String[] strArray40 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        strComparableSchema23.setRequired((java.util.List<java.lang.String>) strList41);
        java.lang.Integer int44 = strComparableSchema23.getMaxLength();
        java.lang.Integer int45 = strComparableSchema23.getMaxProperties();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema23.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema48.setDescription("hi!");
        strComparableSchema48.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal59 = strComparableSchema48.getMultipleOf();
        java.lang.String str60 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema schema61 = schema47.example((java.lang.Object) strComparableSchema48);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema48.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        schema63.setExternalDocs(externalDocumentation64);
        io.swagger.oas.models.media.Schema schema66 = schema63.getNot();
        io.swagger.oas.models.media.Schema schema68 = schema66.uniqueItems((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList69 = schema66.getRequired();
        io.swagger.oas.models.media.Schema schema70 = schema16.example((java.lang.Object) schema66);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(obj22);
        org.junit.Assert.assertEquals(obj22.toString(), "Optional[[class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}, class Tag {\n    name: #/components/schemas/\n    description: #/components/schemas/\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj22), "Optional[[class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}, class Tag {\n    name: #/components/schemas/\n    description: #/components/schemas/\n    externalDocs: null\n}]]");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj22), "Optional[[class Tag {\n    name: Optional.empty\n    description: Optional.empty\n    externalDocs: null\n}, class Tag {\n    name: hi!\n    description: hi!\n    externalDocs: null\n}, class Tag {\n    name: #/components/schemas/\n    description: #/components/schemas/\n    externalDocs: null\n}]]");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test03126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03126");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        boolean boolean28 = strComparableSchema0.equals((java.lang.Object) "Optional.empty");
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int33 = strComparableSchema0.getMaxItems();
        strComparableSchema0.setMinProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema0.maximum(bigDecimal36);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test03127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03127");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        java.math.BigDecimal bigDecimal46 = null;
        schema45.setMultipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema45.exclusiveMaximum((java.lang.Boolean) false);
        schema45.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema45.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema53.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema57 = schema55.maxItems((java.lang.Integer) (-1));
        java.lang.Integer int58 = schema57.getMinLength();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
    }

    @Test
    public void test03128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03128");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.xml(xML15);
        java.lang.Integer int17 = schema14.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        strComparableSchema18.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal29 = strComparableSchema18.getMultipleOf();
        java.lang.String str30 = strComparableSchema18.get$ref();
        java.lang.String[] strArray35 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        strComparableSchema18.setRequired((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int39 = strComparableSchema18.getMaxLength();
        java.lang.Integer int40 = strComparableSchema18.getMaxProperties();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema43.setDescription("hi!");
        strComparableSchema43.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal54 = strComparableSchema43.getMultipleOf();
        java.lang.String str55 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema schema56 = schema42.example((java.lang.Object) strComparableSchema43);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema43.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList66 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean68 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean69 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean70 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean71 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean72 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean73 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema58.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList66);
        java.lang.Boolean boolean75 = schema58.getNullable();
        io.swagger.oas.models.media.Schema schema77 = schema58.pattern("no description");
        java.lang.Integer int78 = schema58.getMaxProperties();
        io.swagger.oas.models.media.Schema schema80 = schema58.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = schema80.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal83 = null;
        schema82.setMultipleOf(bigDecimal83);
        schema14.setExample((java.lang.Object) schema82);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation86 = schema14.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(externalDocumentation86);
    }

    @Test
    public void test03129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03129");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal4 = null;
        strComparableSchema0.setMinimum(bigDecimal4);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        strComparableSchema0.setDiscriminator(discriminator10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal23 = strComparableSchema12.getMultipleOf();
        java.lang.String str24 = strComparableSchema12.get$ref();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema12.maximum(bigDecimal25);
        java.lang.Integer int27 = schema26.getMaxLength();
        schema26.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = schema26.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        schema31.setDiscriminator(discriminator32);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.multipleOf(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal47 = strComparableSchema36.getMultipleOf();
        java.lang.String str48 = strComparableSchema36.get$ref();
        java.lang.String[] strArray53 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        strComparableSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.Integer int57 = strComparableSchema36.getMaxLength();
        java.lang.Integer int58 = strComparableSchema36.getMaxProperties();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema36.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        strComparableSchema61.setDescription("hi!");
        strComparableSchema61.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal72 = strComparableSchema61.getMultipleOf();
        java.lang.String str73 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema schema74 = schema60.example((java.lang.Object) strComparableSchema61);
        java.lang.Integer int75 = schema74.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str77 = strComparableSchema76.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema78.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema76.not((io.swagger.oas.models.media.Schema) strComparableSchema78);
        java.lang.String str82 = strComparableSchema76.get$ref();
        java.lang.String[] strArray87 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional90 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList88);
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema76.required((java.util.List<java.lang.String>) strList88);
        io.swagger.oas.models.media.Schema schema92 = schema74.required((java.util.List<java.lang.String>) strList88);
        io.swagger.oas.models.media.Schema schema94 = schema92.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal95 = null;
        schema94.setMinimum(bigDecimal95);
        java.util.Map<java.lang.String, java.lang.Object> strMap97 = schema94.getExtensions();
        schema31.setExtensions(strMap97);
        strComparableSchema0.setExtensions(strMap97);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(bigDecimal72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(strMap97);
    }

    @Test
    public void test03130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03130");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.title("");
        java.lang.Integer int12 = schema11.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = strComparableSchema13.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema13.getDefault();
        java.lang.Integer int16 = strComparableSchema13.getMinProperties();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.minItems((java.lang.Integer) 0);
        boolean boolean19 = schema11.equals((java.lang.Object) 0);
        schema11.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema11.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator24 = schema11.getDiscriminator();
        java.math.BigDecimal bigDecimal25 = schema11.getMultipleOf();
        schema11.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(bigDecimal25);
    }

    @Test
    public void test03131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03131");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema27.setNullable((java.lang.Boolean) false);
        java.lang.String str40 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema27.name("");
        io.swagger.oas.models.media.Schema schema44 = schema42.minProperties((java.lang.Integer) 10);
        boolean boolean45 = schema26.equals((java.lang.Object) schema42);
        schema42.setWriteOnly((java.lang.Boolean) true);
        schema42.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test03132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03132");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        java.lang.Object obj32 = schema31.getExample();
        io.swagger.oas.models.media.Schema schema34 = schema31.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema31.minimum(bigDecimal35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema31.minimum(bigDecimal37);
        java.lang.String str39 = schema31.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test03133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03133");
        java.util.Optional<java.io.Serializable> serializableOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(serializableOptional0);
    }

    @Test
    public void test03134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03134");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.deprecated((java.lang.Boolean) false);
        schema39.setDeprecated((java.lang.Boolean) false);
        schema39.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test03135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03135");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        strComparableSchema0.setProperties(strMap5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.format(",");
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.minItems((java.lang.Integer) 0);
        strComparableSchema11.setDefault((java.lang.Object) strComparableSchema17);
        strComparableSchema17.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.discriminator(discriminator26);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.externalDocs(externalDocumentation28);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.additionalProperties(schema29);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03136");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.lang.Object obj5 = null;
        schema2.setExample(obj5);
        io.swagger.oas.models.media.Schema schema8 = schema2.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean9 = schema2.getUniqueItems();
        java.math.BigDecimal bigDecimal10 = null;
        schema2.setMinimum(bigDecimal10);
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
    }

    @Test
    public void test03137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03137");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        java.math.BigDecimal bigDecimal46 = null;
        schema45.setMultipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema45.exclusiveMaximum((java.lang.Boolean) false);
        schema45.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema45.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean54 = schema45.getDeprecated();
        java.lang.Boolean boolean55 = schema45.getWriteOnly();
        io.swagger.oas.models.media.Schema schema57 = schema45.maxProperties((java.lang.Integer) (-1));
        schema57.addEnumItemObject((java.lang.Comparable<java.lang.String>) ",");
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test03138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03138");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str27 = strComparableSchema2.getTitle();
        strComparableSchema2.setExclusiveMinimum((java.lang.Boolean) true);
        strComparableSchema2.setMinProperties((java.lang.Integer) 10);
        java.lang.Integer int32 = strComparableSchema2.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test03139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03139");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema schema10 = schema6.readOnly((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = schema10.getEnum();
        schema10.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema10.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema10.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strComparableList11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03140");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        java.lang.Integer int17 = schema16.getMaxLength();
        schema16.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test03141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03141");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        boolean boolean4 = serverListOptional3.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test03142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03142");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema15.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        java.lang.String str55 = strComparableSchema49.get$ref();
        java.lang.String[] strArray60 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional63 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema49.required((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema65 = schema48.required((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema66 = schema11.required((java.util.List<java.lang.String>) strList61);
        java.lang.String str67 = schema11.getType();
        io.swagger.oas.models.media.Schema schema69 = schema11.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean70 = schema69.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        java.lang.String str77 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema71.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str80 = strComparableSchema79.get$ref();
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema79.description("Optional.empty");
        schema78.setDefault((java.lang.Object) strComparableSchema79);
        io.swagger.oas.models.media.Schema schema84 = schema69.additionalProperties(schema78);
        schema84.setName("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal87 = null;
        schema84.setMinimum(bigDecimal87);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test03143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03143");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator9 = schema8.getDiscriminator();
        io.swagger.oas.models.media.Schema schema11 = schema8.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.minimum(bigDecimal12);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(discriminator9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03144");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setMinItems((java.lang.Integer) 1);
        java.lang.String str3 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema4.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strComparableSchema4.getProperties();
        java.lang.Boolean boolean18 = strComparableSchema4.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.properties(strMap23);
        java.lang.Boolean boolean25 = schema24.getNullable();
        java.lang.String str26 = schema24.getType();
        schema24.setTitle("#/components/schemas/");
        schema24.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema24.addRequiredItem("*/*");
        java.lang.Object obj33 = schema24.getExample();
        java.lang.String str34 = schema24.getType();
        io.swagger.oas.models.media.Schema schema36 = schema24.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema37.title("");
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema37.title("");
        java.lang.Integer int49 = schema48.getMaxLength();
        schema48.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema48.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema48.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = strComparableSchema56.getExternalDocs();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema56.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        strComparableSchema61.setDescription("hi!");
        strComparableSchema61.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema61.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = strComparableSchema61.getProperties();
        io.swagger.oas.models.media.Schema schema75 = schema59.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema61);
        java.lang.Boolean boolean76 = schema75.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator77 = null;
        schema75.setDiscriminator(discriminator77);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = schema75.getProperties();
        schema48.setProperties(strMap79);
        io.swagger.oas.models.media.Schema schema81 = schema36.properties(strMap79);
        strComparableSchema0.setProperties(strMap79);
        java.lang.Boolean boolean83 = strComparableSchema0.getExclusiveMaximum();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str3, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(externalDocumentation57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean83);
    }

    @Test
    public void test03145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03145");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = schema8.title("hi!");
        java.util.List<java.lang.String> strList11 = schema8.getRequired();
        java.math.BigDecimal bigDecimal12 = null;
        schema8.setMinimum(bigDecimal12);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test03146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03146");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema3.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.externalDocs(externalDocumentation6);
        java.lang.String str8 = schema5.getType();
        java.math.BigDecimal bigDecimal9 = null;
        schema5.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema5.discriminator(discriminator11);
        java.lang.Boolean boolean13 = schema12.getUniqueItems();
        schema12.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test03147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03147");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.multipleOf(bigDecimal7);
        io.swagger.oas.models.media.Schema schema10 = schema8.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03148");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.xml(xML11);
        java.lang.String str13 = schema12.getTitle();
        io.swagger.oas.models.media.Schema schema15 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.xml(xML16);
        java.lang.Integer int18 = schema17.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test03149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03149");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator13 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.properties(strMap15);
        java.lang.Boolean boolean17 = schema16.getUniqueItems();
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = null;
        schema16.setMultipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.example((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema26.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test03150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03150");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema schema16 = null;
        schema15.setNot(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema15.name(",");
        schema15.setMinItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema15.multipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema24 = schema23.getNot();
        java.lang.Integer int25 = schema23.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test03151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03151");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema5.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern(",");
        io.swagger.oas.models.media.Schema schema25 = schema21.name("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = schema25.getProperties();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
    }

    @Test
    public void test03152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03152");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema18.setMaximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema18.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList30 = strComparableSchema18.getRequired();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required(strList30);
        java.lang.Integer int32 = schema31.getMaxProperties();
        schema31.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema36 = schema31.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        java.math.BigDecimal bigDecimal46 = null;
        strComparableSchema38.setMaximum(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema38.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema38.multipleOf(bigDecimal50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        strComparableSchema38.setProperties(strMap52);
        java.lang.Boolean boolean54 = strComparableSchema38.getDeprecated();
        java.lang.Object obj55 = strComparableSchema38.getExample();
        schema36.addExtension("no description", (java.lang.Object) strComparableSchema38);
        java.lang.Boolean boolean57 = schema36.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(obj55);
        org.junit.Assert.assertNull(boolean57);
    }

    @Test
    public void test03153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03153");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.String str8 = serverListOptional7.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema9.setNullable((java.lang.Boolean) true);
        strComparableSchema9.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = null;
        strComparableSchema18.setExtensions(strMap22);
        strComparableSchema18.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int26 = strComparableSchema18.getMaxItems();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema18.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        java.math.BigDecimal bigDecimal37 = null;
        strComparableSchema29.setMaximum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList41 = strComparableSchema29.getRequired();
        io.swagger.oas.models.media.Schema schema42 = schema28.required(strList41);
        strComparableSchema9.setRequired(strList41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema44.setDescription("hi!");
        strComparableSchema44.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = strComparableSchema44.getProperties();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema44.maxLength((java.lang.Integer) 0);
        strComparableSchema9.setExample((java.lang.Object) schema56);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema9.maximum(bigDecimal58);
        boolean boolean60 = serverListOptional7.equals((java.lang.Object) strComparableSchema9);
        java.lang.String str61 = strComparableSchema9.getName();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Optional.empty" + "'", str8, "Optional.empty");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test03154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03154");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema4.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema9.setDescription("hi!");
        strComparableSchema9.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal20 = strComparableSchema9.getMultipleOf();
        java.lang.String str21 = strComparableSchema9.get$ref();
        java.lang.String[] strArray26 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        strComparableSchema9.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.Integer int30 = strComparableSchema9.getMaxLength();
        java.lang.Integer int31 = strComparableSchema9.getMaxProperties();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        strComparableSchema34.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal45 = strComparableSchema34.getMultipleOf();
        java.lang.String str46 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema schema47 = schema33.example((java.lang.Object) strComparableSchema34);
        strComparableSchema4.setNot(schema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema4.multipleOf(bigDecimal49);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.example((java.lang.Object) schema50);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList52 = strComparableSchema0.getEnum();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strComparableList52);
    }

    @Test
    public void test03155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03155");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.xml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal26 = strComparableSchema15.getMultipleOf();
        java.math.BigDecimal bigDecimal27 = strComparableSchema15.getMultipleOf();
        strComparableSchema15.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = strComparableSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema31.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema36.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = strComparableSchema36.getProperties();
        io.swagger.oas.models.media.Schema schema50 = schema34.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema36.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal64 = strComparableSchema53.getMultipleOf();
        java.lang.String str65 = strComparableSchema53.get$ref();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema53.maximum(bigDecimal66);
        io.swagger.oas.models.media.Discriminator discriminator68 = strComparableSchema53.getDiscriminator();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema53.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = schema70.minProperties((java.lang.Integer) 0);
        schema52.setNot(schema70);
        strComparableSchema15.addExtension("", (java.lang.Object) schema52);
        java.lang.Integer int75 = schema52.getMaxItems();
        io.swagger.oas.models.media.Schema schema77 = schema52.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema78 = schema13.addProperties("#/components/schemas/no description", schema77);
        java.lang.Boolean boolean79 = schema77.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean79);
    }

    @Test
    public void test03156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03156");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.String str40 = strComparableSchema34.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional48 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema33.required((java.util.List<java.lang.String>) strList46);
        java.lang.String str51 = schema33.get$ref();
        io.swagger.oas.models.media.Schema schema53 = schema33.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema33.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator55 = schema33.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = schema33.exclusiveMaximum((java.lang.Boolean) true);
        schema57.setType("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema57.multipleOf(bigDecimal60);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test03157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03157");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.uniqueItems((java.lang.Boolean) false);
        strComparableSchema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema10.setMultipleOf(bigDecimal17);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03158");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.type("#/components/schemas/");
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.xml(xML11);
        strComparableSchema0.setType(",");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test03159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03159");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema schema30 = schema28.readOnly((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList31 = schema28.getRequired();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strList31);
    }

    @Test
    public void test03160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03160");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal13 = strComparableSchema0.getMinimum();
        java.math.BigDecimal bigDecimal14 = null;
        strComparableSchema0.setMaximum(bigDecimal14);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal13);
    }

    @Test
    public void test03161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03161");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema25.setExtensions(strMap29);
        strComparableSchema25.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.minimum(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = strComparableSchema25.getMinimum();
        io.swagger.oas.models.media.Schema schema36 = schema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema0.setDefault((java.lang.Object) schema36);
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema36.xml(xML38);
        io.swagger.oas.models.media.Schema schema41 = schema39.maxProperties((java.lang.Integer) 1);
        schema39.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = schema39.getExternalDocs();
        java.lang.Integer int45 = schema39.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(externalDocumentation44);
        org.junit.Assert.assertNull(int45);
    }

    @Test
    public void test03162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03162");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema schema5 = schema2.writeOnly((java.lang.Boolean) false);
        schema5.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema5.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean35 = strComparableSchema12.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema37.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.String[] strArray52 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional55 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList53);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema12.required((java.util.List<java.lang.String>) strList53);
        io.swagger.oas.models.media.Schema schema58 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        schema9.setNot(schema58);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test03163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03163");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        java.lang.String str11 = schema10.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        java.lang.String[] strArray15 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        strComparableSchema12.setRequired((java.util.List<java.lang.String>) strList16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema19.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = schema22.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema12.not(schema24);
        io.swagger.oas.models.media.Schema schema26 = schema10.example((java.lang.Object) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema28 = schema10.addRequiredItem("Optional.empty");
        java.lang.Boolean boolean29 = schema28.getNullable();
        schema28.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test03164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03164");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        schema33.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.annotations.servers.Server server37 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray38 = new io.swagger.oas.annotations.servers.Server[] { server37 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional39 = io.swagger.jaxrs2.OperationParser.getServers(serverArray38);
        boolean boolean40 = serverListOptional39.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        java.lang.String str47 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema41.getNot();
        boolean boolean49 = serverListOptional39.equals((java.lang.Object) schema48);
        java.lang.String str50 = serverListOptional39.toString();
        boolean boolean51 = serverListOptional39.isPresent();
        java.lang.String str52 = serverListOptional39.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        java.math.BigDecimal bigDecimal61 = null;
        strComparableSchema53.setMaximum(bigDecimal61);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema53.addRequiredItem("hi!");
        java.lang.Integer int65 = schema64.getMinLength();
        schema64.setWriteOnly((java.lang.Boolean) true);
        boolean boolean68 = serverListOptional39.equals((java.lang.Object) schema64);
        java.lang.Boolean boolean69 = schema64.getExclusiveMinimum();
        java.lang.Boolean boolean70 = schema64.getUniqueItems();
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema64.minimum(bigDecimal71);
        schema33.setNot(schema72);
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = schema72.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(serverArray38);
        org.junit.Assert.assertNotNull(serverListOptional39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Optional.empty" + "'", str50, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Optional.empty" + "'", str52, "Optional.empty");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(strMap74);
    }

    @Test
    public void test03165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03165");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.lang.String str13 = serverListOptional2.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray14 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray14);
        boolean boolean16 = serverListOptional15.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList18 = serverListOptional15.orElse(serverList17);
        io.swagger.oas.annotations.servers.Server[] serverArray19 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray19);
        java.lang.String str21 = serverListOptional20.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray22 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray22);
        boolean boolean24 = serverListOptional23.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional23.orElse(serverList25);
        io.swagger.oas.models.servers.Server[] serverArray27 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList28 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList28, serverArray27);
        java.util.List<io.swagger.oas.models.servers.Server> serverList30 = serverListOptional23.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList28);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional20.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList28);
        io.swagger.oas.annotations.servers.Server[] serverArray32 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional33 = io.swagger.jaxrs2.OperationParser.getServers(serverArray32);
        java.lang.String str34 = serverListOptional33.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray35 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional36 = io.swagger.jaxrs2.OperationParser.getServers(serverArray35);
        boolean boolean37 = serverListOptional36.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList38 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional36.orElse(serverList38);
        io.swagger.oas.models.servers.Server[] serverArray40 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList41 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList41, serverArray40);
        java.util.List<io.swagger.oas.models.servers.Server> serverList43 = serverListOptional36.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList41);
        java.util.List<io.swagger.oas.models.servers.Server> serverList44 = serverListOptional33.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList41);
        java.util.List<io.swagger.oas.models.servers.Server> serverList45 = serverListOptional20.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList41);
        java.util.List<io.swagger.oas.models.servers.Server> serverList46 = serverListOptional15.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList41);
        java.util.List<io.swagger.oas.models.servers.Server> serverList47 = serverListOptional2.orElse(serverList46);
        boolean boolean48 = serverListOptional2.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList49 = serverListOptional2.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Optional.empty" + "'", str13, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertNotNull(serverListOptional15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(serverList18);
        org.junit.Assert.assertNotNull(serverArray19);
        org.junit.Assert.assertNotNull(serverListOptional20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Optional.empty" + "'", str21, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray22);
        org.junit.Assert.assertNotNull(serverListOptional23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(serverList26);
        org.junit.Assert.assertNotNull(serverArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(serverList30);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNotNull(serverArray32);
        org.junit.Assert.assertNotNull(serverListOptional33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Optional.empty" + "'", str34, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray35);
        org.junit.Assert.assertNotNull(serverListOptional36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(serverList39);
        org.junit.Assert.assertNotNull(serverArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(serverList43);
        org.junit.Assert.assertNotNull(serverList44);
        org.junit.Assert.assertNotNull(serverList45);
        org.junit.Assert.assertNotNull(serverList46);
        org.junit.Assert.assertNotNull(serverList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test03166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03166");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableSchema2.getDefault();
        strComparableSchema2.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strComparable27);
    }

    @Test
    public void test03167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03167");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        java.lang.Object obj27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.example(obj27);
        java.lang.Boolean boolean29 = schema28.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML30 = schema28.getXml();
        schema28.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema28.externalDocs(externalDocumentation33);
        java.math.BigDecimal bigDecimal35 = schema34.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(xML30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal35);
    }

    @Test
    public void test03168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03168");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        java.math.BigDecimal bigDecimal38 = null;
        schema37.setMaximum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema37.writeOnly((java.lang.Boolean) true);
        java.lang.String str42 = schema37.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test03169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03169");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.addRequiredItem("*/*");
        java.lang.Boolean boolean23 = strComparableSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = strComparableSchema24.getProperties();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema24.description("*/*");
        schema36.setMaxItems((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        strComparableSchema0.setExample((java.lang.Object) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03170");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.ofNullable((java.lang.CharSequence) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test03171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03171");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.xml(xML9);
        schema10.setPattern("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03172");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML41 = schema40.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema49.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema45.externalDocs(externalDocumentation68);
        java.lang.Object obj70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.example(obj70);
        java.lang.Object obj72 = schema69.getExample();
        io.swagger.oas.models.media.Schema schema74 = schema69.deprecated((java.lang.Boolean) true);
        schema40.addExtension("#/components/schemas/", (java.lang.Object) schema74);
        io.swagger.oas.models.media.XML xML76 = null;
        schema40.setXml(xML76);
        io.swagger.oas.models.media.Schema schema79 = schema40.maxItems((java.lang.Integer) 0);
        java.lang.String str80 = schema40.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test03173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03173");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.Object obj6 = strComparableSchema0.getExample();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(obj6);
    }

    @Test
    public void test03174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03174");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema37 = schema33.addRequiredItem("Optional.empty");
        schema33.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema40.setDescription("hi!");
        strComparableSchema40.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        strComparableSchema40.setExtensions(strMap50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        strComparableSchema65.setDescription("hi!");
        strComparableSchema65.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema59.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList78 = schema77.getEnum();
        io.swagger.oas.models.media.Schema schema80 = schema77.type("*/*");
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema40.addProperties("#/components/schemas/", schema77);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str83 = strComparableSchema82.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema84 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema84.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema82.not((io.swagger.oas.models.media.Schema) strComparableSchema84);
        strComparableSchema82.setDescription("hi!");
        strComparableSchema82.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal93 = null;
        io.swagger.oas.models.media.Schema schema94 = strComparableSchema82.multipleOf(bigDecimal93);
        schema94.setExample((java.lang.Object) "hi!");
        schema81.setNot(schema94);
        io.swagger.oas.models.media.Schema schema98 = schema33.additionalProperties(schema94);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(strComparableList78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test03175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03175");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.lang.Boolean boolean11 = strComparableSchema0.getUniqueItems();
        java.lang.Integer int12 = strComparableSchema0.getMinProperties();
        java.lang.Object obj13 = strComparableSchema0.getExample();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        strComparableSchema0.set$ref("#/components/schemas/");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test03176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03176");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray23 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        schema17.setExample((java.lang.Object) tagSetOptional24);
        java.lang.Object obj27 = null;
        schema17.addExtension("*/*", obj27);
        java.lang.String str29 = schema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        java.lang.Boolean boolean38 = schema33.getUniqueItems();
        schema17.addExtension("Optional.empty", (java.lang.Object) boolean38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema17.getExtensions();
        schema10.setExtensions(strMap40);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList42 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema44 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str45 = schema10.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strComparableList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test03177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03177");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        schema36.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema36.discriminator(discriminator40);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema36.minimum(bigDecimal42);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test03178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03178");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema15.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        strComparableSchema15.setExternalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema15.format("");
        strComparableSchema15.setReadOnly((java.lang.Boolean) true);
        strComparableSchema15.setDefault((java.lang.Object) 0.0d);
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema15.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03179");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema17 = schema15.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        schema15.setExternalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03180");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        io.swagger.oas.models.media.Schema schema9 = schema5.maxItems((java.lang.Integer) 1);
        java.lang.Integer int10 = schema5.getMaxProperties();
        schema5.setType("");
        java.lang.Integer int13 = schema5.getMinItems();
        io.swagger.oas.models.media.Schema schema15 = schema5.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03181");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.discriminator(discriminator14);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("#/components/schemas/");
        schema15.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList21 = strComparableSchema20.getRequired();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.lang.String[] strArray41 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        strComparableSchema24.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.Integer int45 = strComparableSchema24.getMaxLength();
        strComparableSchema24.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema49.setDescription("hi!");
        strComparableSchema49.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema49.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        strComparableSchema49.setExternalDocs(externalDocumentation61);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema49.format("");
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema24.additionalProperties(schema64);
        java.lang.Boolean boolean66 = schema65.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = schema65.getExtensions();
        schema15.setExtensions(strMap67);
        io.swagger.oas.models.media.XML xML69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema15.xml(xML69);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema70.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(strMap71);
    }

    @Test
    public void test03182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03182");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema16 = schema10.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03183");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema21 = schema2.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = schema2.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema2.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema2.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03184");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator13 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = strComparableSchema0.getProperties();
        strComparableSchema0.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test03185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03185");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema schema14 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = schema14.getMultipleOf();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema14.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test03186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03186");
        io.swagger.jaxrs2.OperationParser operationParser0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Optional<io.swagger.jaxrs2.OperationParser> operationParserOptional1 = java.util.Optional.of(operationParser0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03187");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML7 = strComparableSchema0.getXml();
        java.lang.String str8 = strComparableSchema0.getDescription();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test03188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03188");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal13 = schema10.getMinimum();
        io.swagger.oas.models.media.Schema schema15 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema10.pattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema19 = schema10.maxItems((java.lang.Integer) 0);
        schema10.setReadOnly((java.lang.Boolean) true);
        schema10.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03189");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        schema2.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setNullable((java.lang.Boolean) false);
        java.lang.String str29 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema16.name("");
        java.math.BigDecimal bigDecimal32 = null;
        strComparableSchema16.setMinimum(bigDecimal32);
        java.lang.Boolean boolean34 = strComparableSchema16.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema16.description("*/*");
        boolean boolean37 = schema2.equals((java.lang.Object) schema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.properties(strMap39);
        java.lang.Boolean boolean41 = schema40.getUniqueItems();
        schema40.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj44 = schema40.getExample();
        io.swagger.oas.models.media.XML xML45 = schema40.getXml();
        io.swagger.oas.models.media.Schema schema47 = schema40.$ref("*/*");
        io.swagger.oas.models.media.Schema schema49 = schema40.format("");
        io.swagger.oas.models.media.Schema schema51 = schema40.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str52 = schema40.getPattern();
        schema2.setNot(schema40);
        java.lang.String str54 = schema2.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(xML45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test03190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03190");
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(wildcardClassOptional0);
    }

    @Test
    public void test03191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03191");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema25 = schema24.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema27 = schema24.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema27.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean30 = schema29.getDeprecated();
        schema29.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test03192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03192");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.lang.Object obj5 = null;
        schema2.setExample(obj5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray15 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray15);
        schema9.setExample((java.lang.Object) tagSetOptional16);
        io.swagger.oas.models.media.Schema schema19 = schema9.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.properties(strMap21);
        java.lang.Boolean boolean23 = schema22.getNullable();
        java.lang.String str24 = schema22.getType();
        schema22.setTitle("#/components/schemas/");
        schema22.setFormat("#/components/schemas/");
        schema22.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema19.not(schema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema33.setDescription("hi!");
        strComparableSchema33.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal44 = strComparableSchema33.getMultipleOf();
        java.lang.String str45 = strComparableSchema33.get$ref();
        java.lang.String[] strArray50 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        strComparableSchema33.setRequired((java.util.List<java.lang.String>) strList51);
        java.lang.Integer int54 = strComparableSchema33.getMaxLength();
        strComparableSchema33.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema33.$ref("#/components/schemas/");
        strComparableSchema33.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal61 = null;
        strComparableSchema33.setMinimum(bigDecimal61);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema33.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema33.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean67 = schema66.getReadOnly();
        io.swagger.oas.models.media.Schema schema68 = schema19.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str70 = strComparableSchema69.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema71.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema69.not((io.swagger.oas.models.media.Schema) strComparableSchema71);
        strComparableSchema69.setDescription("hi!");
        strComparableSchema69.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal80 = strComparableSchema69.getMultipleOf();
        java.lang.String str81 = strComparableSchema69.get$ref();
        java.lang.String[] strArray86 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        strComparableSchema69.setRequired((java.util.List<java.lang.String>) strList87);
        schema19.setRequired((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema91 = schema2.required((java.util.List<java.lang.String>) strList87);
        java.lang.Boolean boolean92 = schema91.getDeprecated();
        java.math.BigDecimal bigDecimal93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema91.maximum(bigDecimal93);
        schema94.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(tagSetOptional16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertEquals("'" + boolean92 + "' != '" + false + "'", boolean92, false);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test03193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03193");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = schema5.getExclusiveMinimum();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = schema5.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema5.getExtensions();
        io.swagger.oas.models.media.Schema schema10 = schema5.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03194");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        schema2.setName("#/components/schemas/no description");
        java.lang.String str63 = schema2.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test03195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03195");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.xml(xML15);
        java.lang.Integer int17 = schema14.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        strComparableSchema18.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal29 = strComparableSchema18.getMultipleOf();
        java.lang.String str30 = strComparableSchema18.get$ref();
        java.lang.String[] strArray35 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        strComparableSchema18.setRequired((java.util.List<java.lang.String>) strList36);
        java.lang.Integer int39 = strComparableSchema18.getMaxLength();
        java.lang.Integer int40 = strComparableSchema18.getMaxProperties();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema43.setDescription("hi!");
        strComparableSchema43.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal54 = strComparableSchema43.getMultipleOf();
        java.lang.String str55 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema schema56 = schema42.example((java.lang.Object) strComparableSchema43);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema43.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList66 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean67 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean68 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean69 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean70 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean71 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean72 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean73 = strComparableList66.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema58.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList66);
        java.lang.Boolean boolean75 = schema58.getNullable();
        io.swagger.oas.models.media.Schema schema77 = schema58.pattern("no description");
        java.lang.Integer int78 = schema58.getMaxProperties();
        io.swagger.oas.models.media.Schema schema80 = schema58.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = schema80.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal83 = null;
        schema82.setMultipleOf(bigDecimal83);
        schema14.setExample((java.lang.Object) schema82);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema86 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str87 = strComparableSchema86.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema88 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema88.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema86.not((io.swagger.oas.models.media.Schema) strComparableSchema88);
        strComparableSchema86.setDescription("hi!");
        java.math.BigDecimal bigDecimal94 = null;
        strComparableSchema86.setMaximum(bigDecimal94);
        io.swagger.oas.models.media.Schema schema97 = strComparableSchema86.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList98 = strComparableSchema86.getRequired();
        schema14.setRequired(strList98);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(strList98);
    }

    @Test
    public void test03196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03196");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = strComparableSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = null;
        strComparableSchema22.setExtensions(strMap32);
        strComparableSchema22.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema22.getNot();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema0.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.math.BigDecimal bigDecimal38 = strComparableSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.$ref("");
        io.swagger.oas.models.media.Schema schema42 = schema40.format("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int43 = schema42.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test03197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03197");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.properties(strMap29);
        java.lang.Boolean boolean31 = schema30.getUniqueItems();
        schema30.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = null;
        strComparableSchema36.setExtensions(strMap40);
        strComparableSchema36.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema36.minimum(bigDecimal44);
        java.math.BigDecimal bigDecimal46 = strComparableSchema36.getMinimum();
        io.swagger.oas.models.media.Schema schema47 = schema30.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema schema49 = schema30.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean50 = schema30.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema51.setReadOnly((java.lang.Boolean) false);
        schema30.setDefault((java.lang.Object) strComparableSchema51);
        io.swagger.oas.models.media.Schema schema61 = schema30.name("");
        strComparableSchema0.setExample((java.lang.Object) schema61);
        strComparableSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test03198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03198");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.getAdditionalProperties();
        java.lang.Integer int3 = strComparableSchema0.getMinLength();
        java.math.BigDecimal bigDecimal4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minimum(bigDecimal4);
        java.lang.String str6 = schema5.toString();
        io.swagger.oas.models.media.Schema schema8 = schema5.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema9.setDescription("hi!");
        strComparableSchema9.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = strComparableSchema9.getProperties();
        java.lang.Boolean boolean23 = strComparableSchema9.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = strComparableSchema9.getProperties();
        strComparableSchema9.setDescription("#/components/schemas/");
        java.lang.Boolean boolean27 = strComparableSchema9.getNullable();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strComparableSchema9.getExtensions();
        schema5.setExtensions(strMap28);
        java.math.BigDecimal bigDecimal30 = schema5.getMaximum();
        java.math.BigDecimal bigDecimal31 = schema5.getMultipleOf();
        java.lang.String str32 = schema5.get$ref();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str6, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test03199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03199");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML27 = null;
        strComparableSchema0.setXml(xML27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = strComparableSchema29.getProperties();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema29.description("*/*");
        schema41.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = schema41.getExternalDocs();
        strComparableSchema0.setAdditionalProperties(schema41);
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema0.discriminator(discriminator46);
        strComparableSchema0.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(externalDocumentation44);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test03200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03200");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean13 = strComparableSchema7.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strComparableSchema7.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema16 = schema6.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema7);
        java.lang.Boolean boolean17 = schema6.getReadOnly();
        io.swagger.oas.models.media.Schema schema19 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema21 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema6.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test03201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03201");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = strComparableSchema25.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableSchema25.getDefault();
        java.lang.Integer int28 = strComparableSchema25.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema25.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema2.not(schema36);
        schema36.setPattern("no description");
        io.swagger.oas.models.media.Schema schema41 = schema36.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema42.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        strComparableSchema50.setDescription("hi!");
        strComparableSchema50.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema50.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator63 = strComparableSchema50.getDiscriminator();
        strComparableSchema42.addExtension("Optional.empty", (java.lang.Object) strComparableSchema50);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = strComparableSchema50.getExternalDocs();
        io.swagger.oas.models.media.XML xML66 = strComparableSchema50.getXml();
        strComparableSchema50.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = schema41.example((java.lang.Object) strComparableSchema50);
        io.swagger.oas.models.media.Schema schema70 = schema69.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNull(strComparable27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator63);
        org.junit.Assert.assertNull(externalDocumentation65);
        org.junit.Assert.assertNull(xML66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(schema70);
    }

    @Test
    public void test03202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03202");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema2.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema12.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = strComparableSchema12.getProperties();
        java.lang.Boolean boolean26 = strComparableSchema12.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableSchema12.getDefault();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema12.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema31 = schema29.deprecated((java.lang.Boolean) false);
        schema31.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema11.example((java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean37 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema39 = schema36.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(strComparable27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test03203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03203");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        java.lang.String str5 = serverListOptional4.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        boolean boolean8 = serverListOptional7.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList9 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList10 = serverListOptional7.orElse(serverList9);
        io.swagger.oas.models.servers.Server[] serverArray11 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList12 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList12, serverArray11);
        java.util.List<io.swagger.oas.models.servers.Server> serverList14 = serverListOptional7.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList12);
        java.util.List<io.swagger.oas.models.servers.Server> serverList15 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList12);
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = serverListOptional1.orElse(serverList15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = schema20.addRequiredItem("hi!");
        java.lang.String str23 = schema20.getDescription();
        boolean boolean24 = serverListOptional1.equals((java.lang.Object) schema20);
        schema20.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Optional.empty" + "'", str5, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(serverList10);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(serverList14);
        org.junit.Assert.assertNotNull(serverList15);
        org.junit.Assert.assertNotNull(serverList16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Optional.empty" + "'", str23, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test03204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03204");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema2.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema2.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = strComparableSchema16.getProperties();
        java.lang.Boolean boolean30 = strComparableSchema16.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = strComparableSchema16.getProperties();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema16.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema33);
        java.math.BigDecimal bigDecimal35 = null;
        schema34.setMinimum(bigDecimal35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03205");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.multipleOf(bigDecimal41);
        schema40.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test03206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03206");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema21 = schema2.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = schema2.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema2.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema2.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03207");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema10.name("hi!");
        boolean boolean31 = serverListOptional3.equals((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema32.setNullable((java.lang.Boolean) false);
        java.lang.String str45 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema32.name("");
        java.math.BigDecimal bigDecimal48 = null;
        strComparableSchema32.setMinimum(bigDecimal48);
        java.lang.Boolean boolean50 = strComparableSchema32.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList51 = strComparableSchema32.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList52 = strComparableSchema32.getEnum();
        java.lang.Boolean boolean53 = strComparableSchema32.getExclusiveMaximum();
        boolean boolean54 = serverListOptional3.equals((java.lang.Object) strComparableSchema32);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList55 = serverListOptional3.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(strComparableList51);
        org.junit.Assert.assertNull(strComparableList52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test03208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03208");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.multipleOf(bigDecimal13);
        java.lang.Boolean boolean15 = schema11.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema11.externalDocs(externalDocumentation16);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03209");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        java.lang.String str7 = schema6.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test03210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03210");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema2.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema2.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema2.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = schema16.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation17);
    }

    @Test
    public void test03211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03211");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        schema14.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03212");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.annotations.servers.Server server5 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] { server5 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        boolean boolean8 = serverListOptional7.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.lang.String str15 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema9.getNot();
        boolean boolean17 = serverListOptional7.equals((java.lang.Object) schema16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.multipleOf(bigDecimal18);
        boolean boolean20 = serverListOptional4.equals((java.lang.Object) schema19);
        io.swagger.oas.annotations.servers.Server server21 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray22 = new io.swagger.oas.annotations.servers.Server[] { server21 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray22);
        boolean boolean24 = serverListOptional23.isPresent();
        java.lang.String str25 = serverListOptional23.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray26 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional27 = io.swagger.jaxrs2.OperationParser.getServers(serverArray26);
        boolean boolean28 = serverListOptional27.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList29 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList30 = serverListOptional27.orElse(serverList29);
        io.swagger.oas.models.servers.Server[] serverArray31 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList32 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList32, serverArray31);
        java.util.List<io.swagger.oas.models.servers.Server> serverList34 = serverListOptional27.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList32);
        io.swagger.oas.annotations.servers.Server[] serverArray35 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional36 = io.swagger.jaxrs2.OperationParser.getServers(serverArray35);
        java.lang.String str37 = serverListOptional36.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray38 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional39 = io.swagger.jaxrs2.OperationParser.getServers(serverArray38);
        boolean boolean40 = serverListOptional39.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList41 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList42 = serverListOptional39.orElse(serverList41);
        io.swagger.oas.models.servers.Server[] serverArray43 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList44 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList44, serverArray43);
        java.util.List<io.swagger.oas.models.servers.Server> serverList46 = serverListOptional39.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList44);
        java.util.List<io.swagger.oas.models.servers.Server> serverList47 = serverListOptional36.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList44);
        io.swagger.oas.annotations.servers.Server[] serverArray48 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional49 = io.swagger.jaxrs2.OperationParser.getServers(serverArray48);
        boolean boolean50 = serverListOptional49.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList51 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList52 = serverListOptional49.orElse(serverList51);
        io.swagger.oas.models.servers.Server[] serverArray53 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList54 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList54, serverArray53);
        java.util.List<io.swagger.oas.models.servers.Server> serverList56 = serverListOptional49.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList54);
        java.util.List<io.swagger.oas.models.servers.Server> serverList57 = serverListOptional36.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList54);
        io.swagger.oas.annotations.servers.Server[] serverArray58 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional59 = io.swagger.jaxrs2.OperationParser.getServers(serverArray58);
        boolean boolean60 = serverListOptional59.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList61 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList62 = serverListOptional59.orElse(serverList61);
        io.swagger.oas.models.servers.Server[] serverArray63 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList64 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList64, serverArray63);
        java.util.List<io.swagger.oas.models.servers.Server> serverList66 = serverListOptional59.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList64);
        java.util.List<io.swagger.oas.models.servers.Server> serverList67 = serverListOptional36.orElse(serverList66);
        boolean boolean68 = serverListOptional36.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray69 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional70 = io.swagger.jaxrs2.OperationParser.getServers(serverArray69);
        java.lang.String str71 = serverListOptional70.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray72 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional73 = io.swagger.jaxrs2.OperationParser.getServers(serverArray72);
        boolean boolean74 = serverListOptional73.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList75 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList76 = serverListOptional73.orElse(serverList75);
        io.swagger.oas.models.servers.Server[] serverArray77 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList78 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList78, serverArray77);
        java.util.List<io.swagger.oas.models.servers.Server> serverList80 = serverListOptional73.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList78);
        java.util.List<io.swagger.oas.models.servers.Server> serverList81 = serverListOptional70.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList78);
        io.swagger.oas.annotations.servers.Server[] serverArray82 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional83 = io.swagger.jaxrs2.OperationParser.getServers(serverArray82);
        java.lang.String str84 = serverListOptional83.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray85 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional86 = io.swagger.jaxrs2.OperationParser.getServers(serverArray85);
        boolean boolean87 = serverListOptional86.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList88 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList89 = serverListOptional86.orElse(serverList88);
        io.swagger.oas.models.servers.Server[] serverArray90 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList91 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList91, serverArray90);
        java.util.List<io.swagger.oas.models.servers.Server> serverList93 = serverListOptional86.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList91);
        java.util.List<io.swagger.oas.models.servers.Server> serverList94 = serverListOptional83.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList91);
        java.util.List<io.swagger.oas.models.servers.Server> serverList95 = serverListOptional70.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList91);
        java.util.List<io.swagger.oas.models.servers.Server> serverList96 = serverListOptional36.orElse(serverList95);
        java.util.List<io.swagger.oas.models.servers.Server> serverList97 = serverListOptional27.orElse(serverList95);
        java.util.List<io.swagger.oas.models.servers.Server> serverList98 = serverListOptional23.orElse(serverList97);
        java.util.List<io.swagger.oas.models.servers.Server> serverList99 = serverListOptional4.orElse(serverList98);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serverArray22);
        org.junit.Assert.assertNotNull(serverListOptional23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Optional.empty" + "'", str25, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray26);
        org.junit.Assert.assertNotNull(serverListOptional27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(serverList30);
        org.junit.Assert.assertNotNull(serverArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(serverList34);
        org.junit.Assert.assertNotNull(serverArray35);
        org.junit.Assert.assertNotNull(serverListOptional36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Optional.empty" + "'", str37, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray38);
        org.junit.Assert.assertNotNull(serverListOptional39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(serverList42);
        org.junit.Assert.assertNotNull(serverArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(serverList46);
        org.junit.Assert.assertNotNull(serverList47);
        org.junit.Assert.assertNotNull(serverArray48);
        org.junit.Assert.assertNotNull(serverListOptional49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(serverList52);
        org.junit.Assert.assertNotNull(serverArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(serverList56);
        org.junit.Assert.assertNotNull(serverList57);
        org.junit.Assert.assertNotNull(serverArray58);
        org.junit.Assert.assertNotNull(serverListOptional59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(serverList62);
        org.junit.Assert.assertNotNull(serverArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(serverList66);
        org.junit.Assert.assertNotNull(serverList67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(serverArray69);
        org.junit.Assert.assertNotNull(serverListOptional70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Optional.empty" + "'", str71, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray72);
        org.junit.Assert.assertNotNull(serverListOptional73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(serverList76);
        org.junit.Assert.assertNotNull(serverArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(serverList80);
        org.junit.Assert.assertNotNull(serverList81);
        org.junit.Assert.assertNotNull(serverArray82);
        org.junit.Assert.assertNotNull(serverListOptional83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Optional.empty" + "'", str84, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray85);
        org.junit.Assert.assertNotNull(serverListOptional86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(serverList89);
        org.junit.Assert.assertNotNull(serverArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(serverList93);
        org.junit.Assert.assertNotNull(serverList94);
        org.junit.Assert.assertNotNull(serverList95);
        org.junit.Assert.assertNotNull(serverList96);
        org.junit.Assert.assertNotNull(serverList97);
        org.junit.Assert.assertNotNull(serverList98);
        org.junit.Assert.assertNotNull(serverList99);
    }

    @Test
    public void test03213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03213");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.lang.Integer int8 = strComparableSchema0.getMinItems();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema10.maxProperties((java.lang.Integer) 100);
        java.lang.String str13 = schema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.lang.String str26 = strComparableSchema14.get$ref();
        java.lang.String[] strArray31 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        strComparableSchema14.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = strComparableSchema14.getMaxLength();
        java.lang.Integer int36 = strComparableSchema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema14.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal50 = strComparableSchema39.getMultipleOf();
        java.lang.String str51 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema schema52 = schema38.example((java.lang.Object) strComparableSchema39);
        io.swagger.oas.models.media.Schema schema54 = schema52.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML55 = schema54.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str58 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str64 = strComparableSchema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str70 = strComparableSchema69.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema71.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema69.not((io.swagger.oas.models.media.Schema) strComparableSchema71);
        strComparableSchema69.setDescription("hi!");
        strComparableSchema69.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema63.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema69);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = null;
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema59.externalDocs(externalDocumentation82);
        java.lang.Object obj84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema83.example(obj84);
        java.lang.Object obj86 = schema83.getExample();
        io.swagger.oas.models.media.Schema schema88 = schema83.deprecated((java.lang.Boolean) true);
        schema54.addExtension("#/components/schemas/", (java.lang.Object) schema88);
        java.lang.String str90 = schema54.getFormat();
        io.swagger.oas.models.media.Schema schema92 = schema54.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setNot(schema54);
        java.math.BigDecimal bigDecimal94 = schema10.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(xML55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(bigDecimal94);
    }

    @Test
    public void test03214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03214");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        schema44.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal47 = null;
        schema44.setMaximum(bigDecimal47);
        schema44.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        schema44.setExternalDocs(externalDocumentation51);
        java.lang.Integer int53 = schema44.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int53);
    }

    @Test
    public void test03215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03215");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = strComparableSchema16.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableSchema16.getDefault();
        java.math.BigDecimal bigDecimal19 = null;
        strComparableSchema16.setMaximum(bigDecimal19);
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean22 = strComparableSchema16.getReadOnly();
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema16.setMaximum(bigDecimal23);
        strComparableSchema16.setDeprecated((java.lang.Boolean) true);
        strComparableSchema16.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema16.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation17);
        org.junit.Assert.assertNull(strComparable18);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03216");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = schema16.getReadOnly();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema16.addRequiredItem("#/components/schemas/");
        java.lang.Integer int22 = schema21.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test03217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03217");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        strComparableSchema2.setProperties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema10.setNullable((java.lang.Boolean) false);
        java.lang.String str23 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema10.name("");
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema10.setMinimum(bigDecimal26);
        java.lang.Boolean boolean28 = strComparableSchema10.getReadOnly();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema10.description("*/*");
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema10.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList33 = strComparableSchema10.getRequired();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema2.required(strList33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        java.math.BigDecimal bigDecimal43 = null;
        strComparableSchema35.setMaximum(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal56 = strComparableSchema45.getMultipleOf();
        java.lang.String str57 = strComparableSchema45.get$ref();
        java.lang.String[] strArray62 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        strComparableSchema45.setRequired((java.util.List<java.lang.String>) strList63);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema35.required((java.util.List<java.lang.String>) strList63);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema35.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str70 = strComparableSchema69.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema71.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema69.not((io.swagger.oas.models.media.Schema) strComparableSchema71);
        java.lang.String str75 = strComparableSchema69.get$ref();
        java.lang.String[] strArray80 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional83 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema69.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema85 = schema68.required((java.util.List<java.lang.String>) strList81);
        java.lang.String str86 = schema68.get$ref();
        io.swagger.oas.models.media.Schema schema88 = schema68.maxLength((java.lang.Integer) 10);
        strComparableSchema2.setExample((java.lang.Object) schema68);
        java.lang.Object obj90 = schema68.getExample();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(obj90);
    }

    @Test
    public void test03218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03218");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator13 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema15.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        schema15.setExternalDocs(externalDocumentation18);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03219");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.addRequiredItem("");
        schema23.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03220");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema0.getEnum();
        java.lang.Boolean boolean21 = strComparableSchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema23.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test03221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03221");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.title("");
        java.lang.Integer int12 = schema11.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = strComparableSchema13.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema13.getDefault();
        java.lang.Integer int16 = strComparableSchema13.getMinProperties();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.minItems((java.lang.Integer) 0);
        boolean boolean19 = schema11.equals((java.lang.Object) 0);
        io.swagger.oas.annotations.servers.Server server20 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray21 = new io.swagger.oas.annotations.servers.Server[] { server20 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        boolean boolean23 = serverListOptional22.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema24.getNot();
        boolean boolean32 = serverListOptional22.equals((java.lang.Object) schema31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema31.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema31.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal37 = schema31.getMaximum();
        schema11.setNot(schema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema39.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema49.setDescription("hi!");
        strComparableSchema49.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal60 = strComparableSchema49.getMultipleOf();
        java.lang.String str61 = strComparableSchema49.get$ref();
        java.lang.String[] strArray66 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        strComparableSchema49.setRequired((java.util.List<java.lang.String>) strList67);
        schema48.setNot((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.lang.Integer int71 = strComparableSchema49.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema49.properties(strMap72);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        strComparableSchema49.setExternalDocs(externalDocumentation74);
        java.lang.Object obj76 = strComparableSchema49.getExample();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema49.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema80 = schema78.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = schema80.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str84 = strComparableSchema83.get$ref();
        java.lang.String[] strArray86 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        strComparableSchema83.setRequired((java.util.List<java.lang.String>) strList87);
        schema80.setRequired((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema91 = schema11.required((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema93 = schema91.title("#/components/schemas/");
        java.math.BigDecimal bigDecimal94 = null;
        io.swagger.oas.models.media.Schema schema95 = schema93.minimum(bigDecimal94);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertNotNull(serverListOptional22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(obj76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test03222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03222");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = schema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema23.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema39.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.multipleOf(bigDecimal58);
        io.swagger.oas.models.media.Schema schema60 = schema32.not(schema59);
        io.swagger.oas.models.media.Schema schema61 = schema3.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema32);
        io.swagger.oas.models.media.Schema schema63 = schema32.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema32.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean66 = schema32.getExclusiveMaximum();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean66);
    }

    @Test
    public void test03223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03223");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        strComparableSchema0.setName("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation20);
        java.lang.Boolean boolean22 = strComparableSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.deprecated((java.lang.Boolean) false);
        java.lang.String str27 = schema26.getTitle();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test03224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03224");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        schema30.setExample((java.lang.Object) tagSetOptional37);
        java.lang.Object obj40 = null;
        schema30.addExtension("*/*", obj40);
        java.lang.String str42 = schema30.getDescription();
        java.lang.String str43 = schema30.getType();
        java.lang.String str44 = schema30.getName();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema2.addProperties("*/*", schema30);
        java.math.BigDecimal bigDecimal46 = schema45.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema schema49 = schema45.name(",");
        schema49.setMinLength((java.lang.Integer) 10);
        schema49.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema55.setNullable((java.lang.Boolean) false);
        java.lang.String str68 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema55.name("");
        io.swagger.oas.models.media.Schema schema71 = null;
        schema70.setNot(schema71);
        io.swagger.oas.models.media.Schema schema74 = schema70.name(",");
        schema49.addExtension("Optional.empty", (java.lang.Object) ",");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03225");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema24.setExternalDocs(externalDocumentation25);
        java.lang.String str27 = schema24.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        java.math.BigDecimal bigDecimal36 = null;
        strComparableSchema28.setMaximum(bigDecimal36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        java.lang.String[] strArray55 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        strComparableSchema38.setRequired((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema28.required((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema28.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.externalDocs(externalDocumentation62);
        java.lang.Boolean boolean64 = schema63.getUniqueItems();
        io.swagger.oas.models.media.Schema schema65 = schema24.example((java.lang.Object) boolean64);
        io.swagger.oas.models.media.Schema schema67 = schema65.title("");
        schema65.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test03226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03226");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        strComparableSchema0.setType("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation31);
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test03227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03227");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = strComparableSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Boolean boolean21 = strComparableSchema15.getReadOnly();
        strComparableSchema15.setType("");
        strComparableSchema15.setMinLength((java.lang.Integer) 0);
        strComparableSchema15.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema15.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema15.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema15.pattern("");
        schema33.setUniqueItems((java.lang.Boolean) false);
        boolean boolean36 = strComparableSchema0.equals((java.lang.Object) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test03228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03228");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = schema2.maxLength((java.lang.Integer) (-1));
        schema14.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.set$ref("hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03229");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.String str40 = strComparableSchema34.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional48 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema33.required((java.util.List<java.lang.String>) strList46);
        java.lang.String str51 = schema33.get$ref();
        io.swagger.oas.models.media.Schema schema53 = schema33.minItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema33.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator55 = schema33.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = schema33.exclusiveMaximum((java.lang.Boolean) true);
        schema57.setType("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema57.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test03230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03230");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        java.lang.Integer int28 = strComparableSchema6.getMaxProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema6.maxLength((java.lang.Integer) 10);
        strComparableSchema2.setExample((java.lang.Object) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema2.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = schema35.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strMap36);
    }

    @Test
    public void test03231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03231");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.multipleOf(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema34.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema34.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03232");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal41 = null;
        schema40.setMultipleOf(bigDecimal41);
        schema40.set$ref("");
        io.swagger.oas.models.media.Schema schema46 = schema40.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test03233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03233");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.String str25 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.Integer int47 = strComparableSchema26.getMaxLength();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema26.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema26.getNot();
        io.swagger.oas.models.media.Schema schema52 = schema50.uniqueItems((java.lang.Boolean) true);
        strComparableSchema0.setAdditionalProperties(schema52);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList54 = schema52.getEnum();
        io.swagger.oas.models.media.Schema schema56 = schema52.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str25, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strComparableList54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test03234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03234");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema25 = schema24.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema27 = schema24.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema27.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema31 = schema27.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal32 = schema27.getMultipleOf();
        io.swagger.oas.models.media.Schema schema34 = schema27.minItems((java.lang.Integer) 100);
        schema27.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03235");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.String> strList7 = strComparableSchema0.getRequired();
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.format(",");
        java.lang.Boolean boolean12 = schema11.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test03236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03236");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        strComparableSchema0.setProperties(strMap3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minimum(bigDecimal5);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test03237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03237");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        schema28.set$ref("#/components/schemas/no description");
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
    }

    @Test
    public void test03238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03238");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.pattern("");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema2.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03239");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.lang.String str16 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema22.setExtensions(strMap26);
        strComparableSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = strComparableSchema30.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.uniqueItems((java.lang.Boolean) false);
        strComparableSchema22.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        schema18.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strComparableSchema22);
        java.math.BigDecimal bigDecimal38 = strComparableSchema22.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        strComparableSchema41.setExtensions(strMap45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        strComparableSchema41.setProperties(strMap47);
        strComparableSchema22.setNot((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema41.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test03240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03240");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal16 = strComparableSchema5.getMultipleOf();
        java.lang.String str17 = strComparableSchema5.get$ref();
        java.lang.String[] strArray22 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        strComparableSchema5.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.Integer int26 = strComparableSchema5.getMaxLength();
        java.lang.Integer int27 = strComparableSchema5.getMaxProperties();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal41 = strComparableSchema30.getMultipleOf();
        java.lang.String str42 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema schema43 = schema29.example((java.lang.Object) strComparableSchema30);
        strComparableSchema0.setNot(schema43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.String str56 = strComparableSchema50.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema50.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        strComparableSchema66.setDescription("hi!");
        strComparableSchema66.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema66.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = strComparableSchema66.getProperties();
        java.lang.Boolean boolean80 = strComparableSchema66.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable81 = strComparableSchema66.getDefault();
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema66.addRequiredItem("");
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema66.maximum(bigDecimal84);
        strComparableSchema66.setReadOnly((java.lang.Boolean) true);
        boolean boolean88 = schema65.equals((java.lang.Object) strComparableSchema66);
        java.math.BigDecimal bigDecimal89 = null;
        io.swagger.oas.models.media.Schema schema90 = strComparableSchema66.minimum(bigDecimal89);
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema0.addProperties("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema90);
        io.swagger.oas.models.media.XML xML92 = strComparableSchema0.getXml();
        java.lang.Comparable<java.lang.String> strComparable93 = strComparableSchema0.getDefault();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNull(strComparable81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(xML92);
        org.junit.Assert.assertNull(strComparable93);
    }

    @Test
    public void test03241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03241");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema0.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Object obj24 = schema23.getExample();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(obj24);
    }

    @Test
    public void test03242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03242");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        java.util.List<java.lang.String> strList13 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.math.BigDecimal bigDecimal26 = strComparableSchema14.getMultipleOf();
        java.lang.Boolean boolean27 = strComparableSchema14.getNullable();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema14.properties(strMap28);
        java.util.List<java.lang.String> strList30 = strComparableSchema14.getRequired();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema14.getNot();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema34.getAdditionalProperties();
        java.lang.String str36 = schema35.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test03243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03243");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema schema5 = schema2.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = schema5.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = strComparableSchema7.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable9 = strComparableSchema7.getDefault();
        java.lang.Integer int10 = strComparableSchema7.getMinProperties();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema7.format("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        boolean boolean15 = schema5.equals((java.lang.Object) "class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNull(externalDocumentation8);
        org.junit.Assert.assertNull(strComparable9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test03244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03244");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.lang.Integer int25 = strComparableSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema26.title("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema0.not(schema35);
        io.swagger.oas.models.media.Schema schema40 = schema35.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03245");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        strComparableSchema18.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema18.multipleOf(bigDecimal29);
        schema30.setExample((java.lang.Object) "hi!");
        schema30.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean35 = schema30.getReadOnly();
        java.lang.Boolean boolean36 = schema30.getNullable();
        schema30.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema0.not(schema30);
        io.swagger.oas.models.media.Schema schema41 = schema30.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema30.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema30.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03246");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray23 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        schema17.setExample((java.lang.Object) tagSetOptional24);
        java.lang.Object obj27 = null;
        schema17.addExtension("*/*", obj27);
        java.lang.String str29 = schema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        java.lang.Boolean boolean38 = schema33.getUniqueItems();
        schema17.addExtension("Optional.empty", (java.lang.Object) boolean38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema17.getExtensions();
        schema10.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema schema43 = schema10.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema10.externalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema46.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema46.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = strComparableSchema46.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = strComparableSchema55.getExternalDocs();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema55.minItems((java.lang.Integer) (-1));
        schema58.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema58.setExclusiveMinimum((java.lang.Boolean) false);
        schema58.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str65 = schema58.getFormat();
        io.swagger.oas.models.media.Schema schema67 = schema58.maxLength((java.lang.Integer) (-1));
        strComparableSchema46.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (-1));
        io.swagger.oas.models.media.Schema schema69 = schema10.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema46.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList72 = schema71.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(externalDocumentation53);
        org.junit.Assert.assertNull(externalDocumentation56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(strList72);
    }

    @Test
    public void test03247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03247");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray29 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional30 = io.swagger.jaxrs2.OperationParser.getTags(strArray29);
        schema23.setExample((java.lang.Object) tagSetOptional30);
        io.swagger.oas.models.media.Schema schema33 = schema23.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal34 = null;
        schema23.setMaximum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema23.format("#/components/schemas/");
        schema19.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema23);
        java.lang.String str39 = schema23.getPattern();
        schema23.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(tagSetOptional30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test03248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03248");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal15 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.xml(xML16);
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema0.setMultipleOf(bigDecimal18);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03249");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.String str40 = strComparableSchema34.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional48 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema33.required((java.util.List<java.lang.String>) strList46);
        java.lang.String str51 = schema33.get$ref();
        io.swagger.oas.models.media.Schema schema53 = schema33.minItems((java.lang.Integer) 100);
        java.lang.Boolean boolean54 = schema33.getExclusiveMinimum();
        java.lang.Boolean boolean55 = schema33.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(boolean55);
    }

    @Test
    public void test03250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03250");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        schema11.setDeprecated((java.lang.Boolean) false);
        schema11.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema11.format("no description");
        io.swagger.oas.models.media.Schema schema21 = schema19.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema19.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList33 = strComparableSchema32.getRequired();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema32.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal47 = strComparableSchema36.getMultipleOf();
        java.lang.String str48 = strComparableSchema36.get$ref();
        java.lang.String[] strArray53 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        strComparableSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        java.lang.Integer int57 = strComparableSchema36.getMaxLength();
        strComparableSchema36.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema32.discriminator(discriminator61);
        java.lang.Boolean boolean63 = strComparableSchema32.getDeprecated();
        boolean boolean64 = strComparableSchema26.equals((java.lang.Object) boolean63);
        strComparableSchema26.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema67 = schema19.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.Integer int68 = schema19.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
    }

    @Test
    public void test03251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03251");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema40.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema43 = schema40.getNot();
        java.lang.Boolean boolean44 = schema43.getUniqueItems();
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema43.xml(xML45);
        java.lang.Boolean boolean47 = schema46.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
    }

    @Test
    public void test03252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03252");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator21 = schema19.getDiscriminator();
        schema19.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema19.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema19.name("#/components/schemas/");
        java.lang.Boolean boolean28 = schema19.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema19.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03253");
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(apiResponseArrayOptional0);
    }

    @Test
    public void test03254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03254");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        strComparableSchema14.setDefault((java.lang.Object) strComparableSchema17);
        java.lang.Boolean boolean22 = strComparableSchema17.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.lang.String[] strArray41 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        strComparableSchema24.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.Integer int45 = strComparableSchema24.getMaxLength();
        strComparableSchema24.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema24.$ref("#/components/schemas/");
        strComparableSchema24.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal52 = null;
        strComparableSchema24.setMinimum(bigDecimal52);
        strComparableSchema24.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema24.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema24);
        schema58.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test03255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03255");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema9.setExternalDocs(externalDocumentation10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.maximum(bigDecimal12);
        schema13.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str16 = schema13.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test03256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03256");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        strComparableSchema14.setDefault((java.lang.Object) strComparableSchema17);
        java.lang.Boolean boolean22 = strComparableSchema17.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.lang.String[] strArray41 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        strComparableSchema24.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.Integer int45 = strComparableSchema24.getMaxLength();
        strComparableSchema24.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema24.$ref("#/components/schemas/");
        strComparableSchema24.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal52 = null;
        strComparableSchema24.setMinimum(bigDecimal52);
        strComparableSchema24.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema24.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema17.minimum(bigDecimal59);
        schema60.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test03257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03257");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.discriminator(discriminator36);
        io.swagger.oas.models.media.Schema schema39 = schema35.exclusiveMaximum((java.lang.Boolean) true);
        schema35.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test03258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03258");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.multipleOf(bigDecimal41);
        schema40.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test03259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03259");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = schema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal39 = strComparableSchema28.getMultipleOf();
        java.lang.String str40 = strComparableSchema28.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        strComparableSchema28.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.Integer int49 = strComparableSchema28.getMaxLength();
        java.lang.Integer int50 = strComparableSchema28.getMaxProperties();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema28.maxLength((java.lang.Integer) 10);
        strComparableSchema24.setExample((java.lang.Object) strComparableSchema28);
        schema3.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema28);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema28.multipleOf(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema28.deprecated((java.lang.Boolean) true);
        schema60.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test03260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03260");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = strComparableSchema0.getWriteOnly();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.discriminator(discriminator20);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean24 = strComparableSchema0.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + true + "'", boolean24, true);
    }

    @Test
    public void test03261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03261");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema21 = schema2.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = schema2.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema2.minimum(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        schema2.setXml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema2.uniqueItems((java.lang.Boolean) false);
        java.lang.String str30 = schema29.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test03262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03262");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        strComparableSchema0.setDiscriminator(discriminator14);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
    }

    @Test
    public void test03263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03263");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional1 = java.util.Optional.of((java.lang.CharSequence) "#/components/schemas/no description");
        org.junit.Assert.assertNotNull(charSequenceOptional1);
    }

    @Test
    public void test03264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03264");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = schema3.deprecated((java.lang.Boolean) true);
        schema21.setMinProperties((java.lang.Integer) (-1));
        schema21.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean26 = schema21.getNullable();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test03265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03265");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema5.multipleOf(bigDecimal12);
        schema13.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema17.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList23 = strComparableSchema22.getRequired();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema22.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.Integer int47 = strComparableSchema26.getMaxLength();
        strComparableSchema26.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema17.setDefault((java.lang.Object) strComparableSchema26);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema26.discriminator(discriminator52);
        schema13.addExtension("no description", (java.lang.Object) schema53);
        java.util.List<java.lang.String> strList55 = schema53.getRequired();
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.xml(xML56);
        java.lang.Integer int58 = schema53.getMaxItems();
        schema53.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema53.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
    }

    @Test
    public void test03266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03266");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        schema11.setDeprecated((java.lang.Boolean) false);
        schema11.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema11.format("no description");
        io.swagger.oas.models.media.Schema schema21 = schema19.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema21.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema23.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03267");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.annotations.servers.Server server10 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray11 = new io.swagger.oas.annotations.servers.Server[] { server10 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray11);
        boolean boolean13 = serverListOptional12.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.String str20 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.getNot();
        boolean boolean22 = serverListOptional12.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema21.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema2.not(schema24);
        io.swagger.oas.models.media.Schema schema27 = schema24.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema24.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema24.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema24.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema24.discriminator(discriminator34);
        java.lang.Integer int36 = schema24.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertNotNull(serverListOptional12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
    }

    @Test
    public void test03268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03268");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.xml(xML6);
        java.lang.String str8 = strComparableSchema0.getFormat();
        strComparableSchema0.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema16 = schema12.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal17 = schema16.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test03269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03269");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.multipleOf(bigDecimal11);
        java.lang.String str13 = strComparableSchema0.getDescription();
        java.lang.Integer int14 = strComparableSchema0.getMinItems();
        java.lang.String str15 = strComparableSchema0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test03270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03270");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        strComparableSchema0.setProperties(strMap3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        java.lang.Integer int11 = schema8.getMaxProperties();
        io.swagger.oas.models.media.Schema schema13 = schema8.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03271");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema11.uniqueItems((java.lang.Boolean) false);
        schema16.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema20 = schema16.deprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        schema22.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        java.math.BigDecimal bigDecimal33 = null;
        strComparableSchema25.setMaximum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal46 = strComparableSchema35.getMultipleOf();
        java.lang.String str47 = strComparableSchema35.get$ref();
        java.lang.String[] strArray52 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        strComparableSchema35.setRequired((java.util.List<java.lang.String>) strList53);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema25.required((java.util.List<java.lang.String>) strList53);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema25.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema25.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.discriminator(discriminator61);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.externalDocs(externalDocumentation63);
        java.lang.String str65 = schema62.getType();
        schema22.setExample((java.lang.Object) schema62);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema22.multipleOf(bigDecimal67);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test03272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03272");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getExclusiveMinimum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList8 = schema2.getEnum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema schema12 = schema10.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean13 = schema10.getDeprecated();
        java.lang.String str14 = schema10.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(strComparableList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#/components/schemas/" + "'", str14, "#/components/schemas/");
    }

    @Test
    public void test03273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03273");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        strComparableSchema0.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.name("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal9 = schema8.getMinimum();
        java.util.List<java.lang.String> strList10 = schema8.getRequired();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test03274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03274");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setMinItems((java.lang.Integer) 1);
        java.lang.String str3 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema4.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strComparableSchema4.getProperties();
        java.lang.Boolean boolean18 = strComparableSchema4.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.properties(strMap23);
        java.lang.Boolean boolean25 = schema24.getNullable();
        java.lang.String str26 = schema24.getType();
        schema24.setTitle("#/components/schemas/");
        schema24.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema24.addRequiredItem("*/*");
        java.lang.Object obj33 = schema24.getExample();
        java.lang.String str34 = schema24.getType();
        io.swagger.oas.models.media.Schema schema36 = schema24.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema37.title("");
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema37.title("");
        java.lang.Integer int49 = schema48.getMaxLength();
        schema48.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema48.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema48.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = strComparableSchema56.getExternalDocs();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema56.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        strComparableSchema61.setDescription("hi!");
        strComparableSchema61.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema61.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = strComparableSchema61.getProperties();
        io.swagger.oas.models.media.Schema schema75 = schema59.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema61);
        java.lang.Boolean boolean76 = schema75.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator77 = null;
        schema75.setDiscriminator(discriminator77);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = schema75.getProperties();
        schema48.setProperties(strMap79);
        io.swagger.oas.models.media.Schema schema81 = schema36.properties(strMap79);
        strComparableSchema0.setProperties(strMap79);
        java.math.BigDecimal bigDecimal83 = null;
        strComparableSchema0.setMultipleOf(bigDecimal83);
        java.lang.Boolean boolean85 = strComparableSchema0.getWriteOnly();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str3, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(externalDocumentation57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean85);
    }

    @Test
    public void test03275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03275");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        boolean boolean2 = serverListOptional1.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList4 = serverListOptional1.orElse(serverList3);
        io.swagger.oas.annotations.servers.Server[] serverArray5 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray5);
        java.lang.String str7 = serverListOptional6.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray8 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray8);
        boolean boolean10 = serverListOptional9.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional9.orElse(serverList11);
        io.swagger.oas.models.servers.Server[] serverArray13 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList14 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList14, serverArray13);
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = serverListOptional9.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList14);
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional6.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList14);
        io.swagger.oas.annotations.servers.Server[] serverArray18 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray18);
        java.lang.String str20 = serverListOptional19.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray21 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        boolean boolean23 = serverListOptional22.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList24 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional22.orElse(serverList24);
        io.swagger.oas.models.servers.Server[] serverArray26 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList27 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList27, serverArray26);
        java.util.List<io.swagger.oas.models.servers.Server> serverList29 = serverListOptional22.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList27);
        java.util.List<io.swagger.oas.models.servers.Server> serverList30 = serverListOptional19.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList27);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional6.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList27);
        java.util.List<io.swagger.oas.models.servers.Server> serverList32 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList27);
        boolean boolean33 = serverListOptional1.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray34 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional35 = io.swagger.jaxrs2.OperationParser.getServers(serverArray34);
        java.lang.String str36 = serverListOptional35.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray37 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional38 = io.swagger.jaxrs2.OperationParser.getServers(serverArray37);
        boolean boolean39 = serverListOptional38.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList40 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList41 = serverListOptional38.orElse(serverList40);
        io.swagger.oas.models.servers.Server[] serverArray42 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList43 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList43, serverArray42);
        java.util.List<io.swagger.oas.models.servers.Server> serverList45 = serverListOptional38.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList43);
        java.util.List<io.swagger.oas.models.servers.Server> serverList46 = serverListOptional35.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList43);
        io.swagger.oas.annotations.servers.Server[] serverArray47 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional48 = io.swagger.jaxrs2.OperationParser.getServers(serverArray47);
        java.lang.String str49 = serverListOptional48.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray50 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional51 = io.swagger.jaxrs2.OperationParser.getServers(serverArray50);
        boolean boolean52 = serverListOptional51.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList53 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList54 = serverListOptional51.orElse(serverList53);
        io.swagger.oas.models.servers.Server[] serverArray55 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList56 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList56, serverArray55);
        java.util.List<io.swagger.oas.models.servers.Server> serverList58 = serverListOptional51.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList56);
        java.util.List<io.swagger.oas.models.servers.Server> serverList59 = serverListOptional48.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList56);
        java.lang.String str60 = serverListOptional48.toString();
        boolean boolean61 = serverListOptional48.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray62 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional63 = io.swagger.jaxrs2.OperationParser.getServers(serverArray62);
        boolean boolean64 = serverListOptional63.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList65 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList66 = serverListOptional63.orElse(serverList65);
        io.swagger.oas.models.servers.Server[] serverArray67 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList68 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList68, serverArray67);
        java.util.List<io.swagger.oas.models.servers.Server> serverList70 = serverListOptional63.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList68);
        java.util.List<io.swagger.oas.models.servers.Server> serverList71 = serverListOptional48.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList68);
        java.util.List<io.swagger.oas.models.servers.Server> serverList72 = serverListOptional35.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList68);
        java.util.List<io.swagger.oas.models.servers.Server> serverList73 = serverListOptional1.orElse(serverList72);
        java.lang.String str74 = serverListOptional1.toString();
        boolean boolean75 = serverListOptional1.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray76 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional77 = io.swagger.jaxrs2.OperationParser.getServers(serverArray76);
        java.util.Optional<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalOptional78 = java.util.Optional.of(serverListOptional77);
        io.swagger.oas.annotations.servers.Server[] serverArray79 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional80 = io.swagger.jaxrs2.OperationParser.getServers(serverArray79);
        java.lang.String str81 = serverListOptional80.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray82 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional83 = io.swagger.jaxrs2.OperationParser.getServers(serverArray82);
        java.lang.String str84 = serverListOptional83.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray85 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional86 = io.swagger.jaxrs2.OperationParser.getServers(serverArray85);
        boolean boolean87 = serverListOptional86.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList88 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList89 = serverListOptional86.orElse(serverList88);
        io.swagger.oas.models.servers.Server[] serverArray90 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList91 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList91, serverArray90);
        java.util.List<io.swagger.oas.models.servers.Server> serverList93 = serverListOptional86.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList91);
        java.util.List<io.swagger.oas.models.servers.Server> serverList94 = serverListOptional83.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList91);
        java.util.List<io.swagger.oas.models.servers.Server> serverList95 = serverListOptional80.orElse(serverList94);
        java.util.List<io.swagger.oas.models.servers.Server> serverList96 = serverListOptional77.orElse(serverList94);
        java.util.List<io.swagger.oas.models.servers.Server> serverList97 = serverListOptional1.orElse(serverList94);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(serverList4);
        org.junit.Assert.assertNotNull(serverArray5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertNotNull(serverListOptional9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(serverList16);
        org.junit.Assert.assertNotNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertNotNull(serverListOptional19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Optional.empty" + "'", str20, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertNotNull(serverListOptional22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(serverList25);
        org.junit.Assert.assertNotNull(serverArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(serverList29);
        org.junit.Assert.assertNotNull(serverList30);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNotNull(serverList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(serverArray34);
        org.junit.Assert.assertNotNull(serverListOptional35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Optional.empty" + "'", str36, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray37);
        org.junit.Assert.assertNotNull(serverListOptional38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(serverList41);
        org.junit.Assert.assertNotNull(serverArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(serverList45);
        org.junit.Assert.assertNotNull(serverList46);
        org.junit.Assert.assertNotNull(serverArray47);
        org.junit.Assert.assertNotNull(serverListOptional48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Optional.empty" + "'", str49, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray50);
        org.junit.Assert.assertNotNull(serverListOptional51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(serverList54);
        org.junit.Assert.assertNotNull(serverArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(serverList58);
        org.junit.Assert.assertNotNull(serverList59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Optional.empty" + "'", str60, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(serverArray62);
        org.junit.Assert.assertNotNull(serverListOptional63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(serverList66);
        org.junit.Assert.assertNotNull(serverArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(serverList70);
        org.junit.Assert.assertNotNull(serverList71);
        org.junit.Assert.assertNotNull(serverList72);
        org.junit.Assert.assertNotNull(serverList73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Optional.empty" + "'", str74, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(serverArray76);
        org.junit.Assert.assertNotNull(serverListOptional77);
        org.junit.Assert.assertNotNull(serverListOptionalOptional78);
        org.junit.Assert.assertNotNull(serverArray79);
        org.junit.Assert.assertNotNull(serverListOptional80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Optional.empty" + "'", str81, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray82);
        org.junit.Assert.assertNotNull(serverListOptional83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "Optional.empty" + "'", str84, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray85);
        org.junit.Assert.assertNotNull(serverListOptional86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(serverList89);
        org.junit.Assert.assertNotNull(serverArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(serverList93);
        org.junit.Assert.assertNotNull(serverList94);
        org.junit.Assert.assertNotNull(serverList95);
        org.junit.Assert.assertNotNull(serverList96);
        org.junit.Assert.assertNotNull(serverList97);
    }

    @Test
    public void test03276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03276");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema schema10 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = schema14.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.externalDocs(externalDocumentation16);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = schema17.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(externalDocumentation18);
    }

    @Test
    public void test03277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03277");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList12 = strComparableSchema0.getRequired();
        java.lang.Boolean boolean13 = strComparableSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = schema15.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.multipleOf(bigDecimal18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = schema19.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
    }

    @Test
    public void test03278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03278");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema2.deprecated((java.lang.Boolean) false);
        schema2.setDescription("#/components/schemas/");
        java.lang.String str16 = schema2.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#/components/schemas/" + "'", str16, "#/components/schemas/");
    }

    @Test
    public void test03279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03279");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema schema30 = schema28.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema30.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema30.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03280");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema10.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema36.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema36.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03281");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = strComparableSchema0.getWriteOnly();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.discriminator(discriminator20);
        java.lang.Boolean boolean22 = strComparableSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.addRequiredItem("");
        java.lang.Class<?> wildcardClass25 = strComparableSchema0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test03282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03282");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        schema11.setDeprecated((java.lang.Boolean) false);
        schema11.setDescription("*/*");
        java.math.BigDecimal bigDecimal18 = null;
        schema11.setMinimum(bigDecimal18);
        schema11.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03283");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        java.lang.String str8 = strComparableSchema2.getDescription();
        strComparableSchema2.setFormat("#/components/schemas/");
        java.lang.String str11 = strComparableSchema2.getDescription();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.name("");
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.xml(xML14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.writeOnly((java.lang.Boolean) true);
        schema17.setDeprecated((java.lang.Boolean) true);
        schema17.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator24 = schema17.getDiscriminator();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(discriminator24);
    }

    @Test
    public void test03284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03284");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = schema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.not(schema7);
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        schema8.setMinLength((java.lang.Integer) 10);
        java.lang.String str13 = schema8.getTitle();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema8.multipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema8.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema17.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test03285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03285");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        strComparableSchema0.setProperties(strMap3);
        java.lang.Boolean boolean5 = strComparableSchema0.getExclusiveMaximum();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int10 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.String str15 = strComparableSchema0.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test03286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03286");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.lang.Integer int33 = strComparableSchema10.getMaxLength();
        java.lang.String str34 = strComparableSchema10.getType();
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema10.discriminator(discriminator35);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03287");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.title("Optional.empty");
        schema44.setReadOnly((java.lang.Boolean) true);
        java.lang.String str47 = schema44.getName();
        schema44.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.properties(strMap51);
        java.lang.Boolean boolean53 = schema52.getUniqueItems();
        schema52.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal56 = null;
        schema52.setMultipleOf(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = schema52.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema59.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema59.title("hi!");
        java.lang.String str64 = schema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = strComparableSchema65.getExternalDocs();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema65.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.not((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema70.setDescription("hi!");
        strComparableSchema70.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema70.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = strComparableSchema70.getProperties();
        io.swagger.oas.models.media.Schema schema84 = schema68.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean85 = schema84.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator86 = null;
        schema84.setDiscriminator(discriminator86);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema84.getProperties();
        io.swagger.oas.models.media.Schema schema89 = schema63.properties(strMap88);
        schema44.setProperties(strMap88);
        strComparableSchema0.setProperties(strMap88);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList92 = strComparableSchema0.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(strComparableList92);
    }

    @Test
    public void test03288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03288");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema2.minProperties((java.lang.Integer) 1);
        java.lang.String str17 = schema16.toString();
        java.math.BigDecimal bigDecimal18 = schema16.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        strComparableSchema19.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema19.setNullable((java.lang.Boolean) false);
        java.lang.String str32 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema19.name("");
        java.math.BigDecimal bigDecimal35 = null;
        strComparableSchema19.setMinimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema19.addRequiredItem("*/*");
        schema16.setNot(schema38);
        schema16.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal42 = schema16.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal42);
    }

    @Test
    public void test03289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03289");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.xml(xML6);
        schema7.setMaxItems((java.lang.Integer) (-1));
        schema7.setWriteOnly((java.lang.Boolean) true);
        schema7.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema7.getNot();
        schema7.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03290");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.description("Optional.empty");
        schema7.setDefault((java.lang.Object) strComparableSchema8);
        java.util.List<java.lang.String> strList13 = schema7.getRequired();
        io.swagger.oas.models.media.Schema schema15 = schema7.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema15.nullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        schema17.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03291");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema0.setMinimum(bigDecimal25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        strComparableSchema0.setProperties(strMap27);
        java.lang.Integer int29 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema32.setNullable((java.lang.Boolean) true);
        strComparableSchema32.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        strComparableSchema41.setExtensions(strMap45);
        strComparableSchema41.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int49 = strComparableSchema41.getMaxItems();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema41.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema52.setDescription("hi!");
        java.math.BigDecimal bigDecimal60 = null;
        strComparableSchema52.setMaximum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema52.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList64 = strComparableSchema52.getRequired();
        io.swagger.oas.models.media.Schema schema65 = schema51.required(strList64);
        strComparableSchema32.setRequired(strList64);
        strComparableSchema0.setRequired(strList64);
        java.lang.Boolean boolean68 = strComparableSchema0.getExclusiveMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema0.externalDocs(externalDocumentation69);
        java.lang.Class<?> wildcardClass71 = strComparableSchema0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test03292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03292");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema14.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str17 = schema16.getType();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test03293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03293");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        java.lang.Integer int39 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.lang.String str46 = strComparableSchema40.get$ref();
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional54 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema40.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = schema38.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema38.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = schema38.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema60.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator63 = null;
        schema60.setDiscriminator(discriminator63);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test03294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03294");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        schema45.setExample((java.lang.Object) "Optional.empty");
        schema45.setNullable((java.lang.Boolean) true);
        schema45.setPattern("");
        java.math.BigDecimal bigDecimal52 = null;
        schema45.setMaximum(bigDecimal52);
        io.swagger.oas.models.media.Schema schema54 = schema45.getNot();
        java.lang.Boolean boolean55 = schema54.getUniqueItems();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
    }

    @Test
    public void test03295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03295");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal17 = null;
        schema16.setMaximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema16.nullable((java.lang.Boolean) true);
        schema16.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int23 = schema16.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test03296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03296");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray11);
        schema5.setExample((java.lang.Object) tagSetOptional12);
        java.lang.Object obj15 = null;
        schema5.addExtension("*/*", obj15);
        java.lang.String str17 = schema5.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema18.setMaximum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal39 = strComparableSchema28.getMultipleOf();
        java.lang.String str40 = strComparableSchema28.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        strComparableSchema28.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema18.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = null;
        strComparableSchema52.setExtensions(strMap56);
        strComparableSchema52.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema52.minimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema62 = schema49.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.media.Schema schema63 = schema5.additionalProperties(schema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = null;
        schema49.setExtensions(strMap64);
        java.math.BigDecimal bigDecimal66 = null;
        schema49.setMaximum(bigDecimal66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str69 = strComparableSchema68.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema68.not((io.swagger.oas.models.media.Schema) strComparableSchema70);
        strComparableSchema68.setDescription("hi!");
        strComparableSchema68.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema68.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        strComparableSchema68.setExternalDocs(externalDocumentation80);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema68.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema84 = schema49.example((java.lang.Object) schema83);
        strComparableSchema0.setNot(schema84);
        io.swagger.oas.models.media.Schema schema87 = schema84.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str88 = schema87.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(tagSetOptional12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test03297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03297");
        java.io.Serializable serializable0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Optional<java.io.Serializable> serializableOptional1 = java.util.Optional.of(serializable0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03298");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.properties(strMap8);
        java.lang.Boolean boolean10 = schema9.getNullable();
        schema9.setMaxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal13 = null;
        schema9.setMultipleOf(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = schema9.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.writeOnly((java.lang.Boolean) false);
        schema18.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema18.title("#/components/schemas/");
        schema22.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal25 = schema22.getMinimum();
        java.lang.String str26 = schema22.getTitle();
        io.swagger.oas.models.media.Schema schema28 = schema22.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        java.math.BigDecimal bigDecimal37 = null;
        strComparableSchema29.setMaximum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal50 = strComparableSchema39.getMultipleOf();
        java.lang.String str51 = strComparableSchema39.get$ref();
        java.lang.String[] strArray56 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        strComparableSchema39.setRequired((java.util.List<java.lang.String>) strList57);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema29.required((java.util.List<java.lang.String>) strList57);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema29.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str64 = strComparableSchema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        java.lang.String str69 = strComparableSchema63.get$ref();
        java.lang.String[] strArray74 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional77 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema63.required((java.util.List<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema79 = schema62.required((java.util.List<java.lang.String>) strList75);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional80 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList75);
        java.util.Optional<java.util.Collection<java.lang.String>> strCollectionOptional81 = java.util.Optional.ofNullable((java.util.Collection<java.lang.String>) strList75);
        schema28.setRequired((java.util.List<java.lang.String>) strList75);
        java.util.Optional<java.util.AbstractList<java.lang.String>> strListOptional83 = java.util.Optional.ofNullable((java.util.AbstractList<java.lang.String>) strList75);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional84 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema85 = schema9.required((java.util.List<java.lang.String>) strList75);
        boolean boolean86 = serverListOptional6.equals((java.lang.Object) strList75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList87 = serverListOptional6.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "#/components/schemas/" + "'", str26, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strCollectionOptional80);
        org.junit.Assert.assertNotNull(strCollectionOptional81);
        org.junit.Assert.assertNotNull(strListOptional83);
        org.junit.Assert.assertNotNull(strCollectionOptional84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test03299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03299");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        java.math.BigDecimal bigDecimal32 = schema31.getMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = schema31.getExtensions();
        io.swagger.oas.models.media.XML xML34 = schema31.getXml();
        java.lang.Boolean boolean35 = schema31.getNullable();
        java.math.BigDecimal bigDecimal36 = null;
        schema31.setMinimum(bigDecimal36);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test03300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03300");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        schema24.setName("no description");
        io.swagger.oas.models.media.Schema schema28 = schema24.minProperties((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema28.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03301");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema0.setMinimum(bigDecimal28);
        java.math.BigDecimal bigDecimal30 = strComparableSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional40 = io.swagger.jaxrs2.OperationParser.getTags(strArray39);
        schema33.setExample((java.lang.Object) tagSetOptional40);
        io.swagger.oas.models.media.Schema schema43 = schema33.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema0.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.not((io.swagger.oas.models.media.Schema) strComparableSchema62);
        strComparableSchema60.setDescription("hi!");
        strComparableSchema60.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema54.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = null;
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema50.externalDocs(externalDocumentation73);
        java.lang.Object obj75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema74.example(obj75);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList77 = schema74.getEnum();
        io.swagger.oas.models.media.Schema schema79 = schema74.minProperties((java.lang.Integer) 10);
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) schema74);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema74.externalDocs(externalDocumentation81);
        io.swagger.oas.models.media.Schema schema84 = schema82.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(tagSetOptional40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(strComparableList77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test03302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03302");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        io.swagger.oas.models.media.Schema schema62 = schema60.minLength((java.lang.Integer) 100);
        java.lang.Integer int63 = schema60.getMaxProperties();
        java.lang.Boolean boolean64 = schema60.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal65 = null;
        schema60.setMinimum(bigDecimal65);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNull(boolean64);
    }

    @Test
    public void test03303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03303");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        boolean boolean15 = serverListOptional14.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional14.orElse(serverList16);
        io.swagger.oas.models.servers.Server[] serverArray18 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList19 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList19, serverArray18);
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.lang.String str23 = serverListOptional1.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema24.setNullable((java.lang.Boolean) false);
        java.lang.String str37 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema24.name("");
        io.swagger.oas.models.media.Schema schema40 = null;
        schema39.setNot(schema40);
        io.swagger.oas.models.media.Schema schema43 = schema39.name(",");
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = schema43.getExtensions();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema43.multipleOf(bigDecimal45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema43.externalDocs(externalDocumentation47);
        boolean boolean49 = serverListOptional1.equals((java.lang.Object) schema43);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema43.maximum(bigDecimal50);
        schema43.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serverList21);
        org.junit.Assert.assertNotNull(serverList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Optional.empty" + "'", str23, "Optional.empty");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test03304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03304");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.writeOnly((java.lang.Boolean) false);
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema3.additionalProperties(schema6);
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        schema12.set$ref("");
        java.lang.Integer int15 = schema12.getMinLength();
        schema12.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test03305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03305");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        schema2.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setNullable((java.lang.Boolean) false);
        java.lang.String str29 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema16.name("");
        java.math.BigDecimal bigDecimal32 = null;
        strComparableSchema16.setMinimum(bigDecimal32);
        java.lang.Boolean boolean34 = strComparableSchema16.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema16.description("*/*");
        boolean boolean37 = schema2.equals((java.lang.Object) schema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema51.setDescription("hi!");
        strComparableSchema51.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema45.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema41.externalDocs(externalDocumentation64);
        java.lang.Object obj66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.example(obj66);
        java.lang.Object obj68 = schema65.getExample();
        java.lang.Integer int69 = schema65.getMaxProperties();
        schema65.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema72 = schema36.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema73.properties(strMap74);
        java.lang.Boolean boolean76 = schema75.getNullable();
        java.lang.String str77 = schema75.getType();
        schema75.setTitle("#/components/schemas/");
        schema75.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema83 = schema75.addRequiredItem("*/*");
        schema83.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema87 = schema83.description("Optional.empty");
        java.math.BigDecimal bigDecimal88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema83.maximum(bigDecimal88);
        schema83.setDescription("no description");
        schema36.setDefault((java.lang.Object) schema83);
        schema83.setFormat("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test03306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03306");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.name("*/*");
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        strComparableSchema19.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal30 = strComparableSchema19.getMultipleOf();
        java.lang.String str31 = strComparableSchema19.get$ref();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema19.maximum(bigDecimal32);
        io.swagger.oas.models.media.Discriminator discriminator34 = strComparableSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema19.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema36.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.setMinLength((java.lang.Integer) 100);
        java.lang.String str49 = strComparableSchema39.getDescription();
        schema36.setNot((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        strComparableSchema53.setExtensions(strMap57);
        strComparableSchema53.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int61 = strComparableSchema53.getMaxItems();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema53.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str65 = strComparableSchema64.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema64.not((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema64.setDescription("hi!");
        java.math.BigDecimal bigDecimal72 = null;
        strComparableSchema64.setMaximum(bigDecimal72);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema64.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList76 = strComparableSchema64.getRequired();
        io.swagger.oas.models.media.Schema schema77 = schema63.required(strList76);
        strComparableSchema39.setRequired(strList76);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema39.pattern("#/components/schemas/");
        java.math.BigDecimal bigDecimal81 = schema80.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema80.externalDocs(externalDocumentation82);
        io.swagger.oas.models.media.Schema schema84 = schema16.additionalProperties(schema83);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation85 = null;
        schema83.setExternalDocs(externalDocumentation85);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test03307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03307");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema0.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema19.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList38 = schema37.getEnum();
        io.swagger.oas.models.media.Schema schema40 = schema37.type("*/*");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema0.addProperties("#/components/schemas/", schema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema48.setDescription("hi!");
        strComparableSchema48.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema42.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema42.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema63 = schema61.type("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setNot(schema61);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setFormat("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strComparableList38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test03308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03308");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        strComparableSchema0.addExtension("#/components/schemas/", (java.lang.Object) str30);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.externalDocs(externalDocumentation32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema36.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.maximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema40.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.externalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema45.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = strComparableSchema45.getProperties();
        java.lang.Boolean boolean59 = strComparableSchema45.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = strComparableSchema45.getProperties();
        strComparableSchema45.setMinItems((java.lang.Integer) 0);
        strComparableSchema45.setExclusiveMinimum((java.lang.Boolean) true);
        boolean boolean65 = schema42.equals((java.lang.Object) strComparableSchema45);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema42.minimum(bigDecimal66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = strComparableSchema68.getExternalDocs();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema68.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str74 = strComparableSchema73.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema75.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema73.not((io.swagger.oas.models.media.Schema) strComparableSchema75);
        strComparableSchema73.setDescription("hi!");
        strComparableSchema73.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema73.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = strComparableSchema73.getProperties();
        io.swagger.oas.models.media.Schema schema87 = schema71.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema73);
        java.lang.Boolean boolean88 = schema87.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator89 = null;
        schema87.setDiscriminator(discriminator89);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap91 = schema87.getProperties();
        schema67.setProperties(strMap91);
        io.swagger.oas.models.media.Schema schema93 = strComparableSchema0.properties(strMap91);
        java.lang.Boolean boolean94 = strComparableSchema0.getDeprecated();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation95 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation95);
        java.lang.Object obj97 = strComparableSchema0.getExample();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(externalDocumentation69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(boolean88);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(boolean94);
        org.junit.Assert.assertNull(obj97);
    }

    @Test
    public void test03309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03309");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.lang.Integer int20 = strComparableSchema0.getMaxItems();
        java.lang.Boolean boolean21 = strComparableSchema0.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test03310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03310");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.discriminator(discriminator4);
        java.lang.Integer int6 = strComparableSchema0.getMinLength();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator9 = schema8.getDiscriminator();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(discriminator9);
    }

    @Test
    public void test03311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03311");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        schema11.setDeprecated((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList16 = schema11.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test03312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03312");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        java.math.BigDecimal bigDecimal27 = schema26.getMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema26.getProperties();
        java.math.BigDecimal bigDecimal29 = schema26.getMaximum();
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema26.discriminator(discriminator30);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test03313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03313");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema2.format("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.discriminator(discriminator12);
        schema13.setDescription(",");
        java.math.BigDecimal bigDecimal16 = schema13.getMaximum();
        schema13.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test03314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03314");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema16.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema16.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.String str56 = strComparableSchema50.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema50.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema49.required((java.util.List<java.lang.String>) strList62);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional67 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema0.required((java.util.List<java.lang.String>) strList62);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.multipleOf(bigDecimal74);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strCollectionOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test03315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03315");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        java.math.BigDecimal bigDecimal31 = null;
        strComparableSchema23.setMaximum(bigDecimal31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema33.setDescription("hi!");
        strComparableSchema33.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal44 = strComparableSchema33.getMultipleOf();
        java.lang.String str45 = strComparableSchema33.get$ref();
        java.lang.String[] strArray50 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        strComparableSchema33.setRequired((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema23.required((java.util.List<java.lang.String>) strList51);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema23.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str58 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        java.lang.String str63 = strComparableSchema57.get$ref();
        java.lang.String[] strArray68 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional71 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList69);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema57.required((java.util.List<java.lang.String>) strList69);
        io.swagger.oas.models.media.Schema schema73 = schema56.required((java.util.List<java.lang.String>) strList69);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList69);
        io.swagger.oas.annotations.links.Link[] linkArray75 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap76 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray75);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap77 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray75);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional78 = java.util.Optional.of(linkArray75);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema0.example((java.lang.Object) linkArray75);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(linkArray75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(linkArrayOptional78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test03316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03316");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.properties(strMap28);
        java.lang.Boolean boolean30 = schema29.getNullable();
        java.lang.String str31 = schema29.getType();
        schema29.setTitle("#/components/schemas/");
        schema29.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema29.addRequiredItem("*/*");
        strComparableSchema0.setExample((java.lang.Object) schema29);
        io.swagger.oas.models.media.Schema schema40 = schema29.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean41 = schema40.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema42 = schema40.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML43 = null;
        // The following exception was thrown during execution in test generation
        try {
            schema42.setXml(xML43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(schema42);
    }

    @Test
    public void test03317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03317");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        strComparableSchema14.setDefault((java.lang.Object) strComparableSchema17);
        java.util.List<java.lang.String> strList22 = strComparableSchema14.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema25.setExtensions(strMap29);
        strComparableSchema25.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.minimum(bigDecimal33);
        schema34.set$ref("no description");
        java.lang.Boolean boolean37 = schema34.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList39 = strComparableSchema38.getRequired();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema38.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal53 = strComparableSchema42.getMultipleOf();
        java.lang.String str54 = strComparableSchema42.get$ref();
        java.lang.String[] strArray59 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        strComparableSchema42.setRequired((java.util.List<java.lang.String>) strList60);
        java.lang.Integer int63 = strComparableSchema42.getMaxLength();
        strComparableSchema42.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema38.setDescription("");
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema38.multipleOf(bigDecimal69);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = strComparableSchema71.getExternalDocs();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema71.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str77 = strComparableSchema76.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema78.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema76.not((io.swagger.oas.models.media.Schema) strComparableSchema78);
        strComparableSchema76.setDescription("hi!");
        strComparableSchema76.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema76.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap89 = strComparableSchema76.getProperties();
        io.swagger.oas.models.media.Schema schema90 = schema74.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema76);
        java.lang.Boolean boolean91 = schema90.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator92 = null;
        schema90.setDiscriminator(discriminator92);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap94 = schema90.getProperties();
        io.swagger.oas.models.media.Schema schema95 = strComparableSchema38.properties(strMap94);
        io.swagger.oas.models.media.Schema schema96 = schema34.properties(strMap94);
        strComparableSchema14.setProperties(strMap94);
        java.math.BigDecimal bigDecimal98 = null;
        strComparableSchema14.setMaximum(bigDecimal98);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(externalDocumentation72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(boolean91);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test03318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03318");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema5.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.pattern(",");
        java.lang.Object obj25 = null;
        schema23.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", obj25);
        java.lang.String str27 = schema23.getPattern();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "," + "'", str27, ",");
    }

    @Test
    public void test03319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03319");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        io.swagger.oas.models.media.XML xML8 = null;
        schema5.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema5.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema12.title("");
        io.swagger.oas.models.media.Schema schema22 = schema5.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        java.lang.Boolean boolean34 = strComparableSchema23.getUniqueItems();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema22.example((java.lang.Object) schema36);
        schema36.setPattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test03320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03320");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.pattern("");
        java.lang.String str14 = strComparableSchema2.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal26 = strComparableSchema15.getMultipleOf();
        java.lang.String str27 = strComparableSchema15.get$ref();
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        strComparableSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.Integer int36 = strComparableSchema15.getMaxLength();
        java.lang.Integer int37 = strComparableSchema15.getMaxProperties();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema40.setDescription("hi!");
        strComparableSchema40.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal51 = strComparableSchema40.getMultipleOf();
        java.lang.String str52 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema schema53 = schema39.example((java.lang.Object) strComparableSchema40);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema40.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList63 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean64 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean65 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean66 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean67 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean68 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean69 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean70 = strComparableList63.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema55.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList63);
        strComparableSchema2.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList63);
        java.math.BigDecimal bigDecimal73 = strComparableSchema2.getMultipleOf();
        strComparableSchema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = strComparableSchema76.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable78 = strComparableSchema76.getDefault();
        java.lang.Integer int79 = strComparableSchema76.getMinProperties();
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema76.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = null;
        strComparableSchema76.setExtensions(strMap82);
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema76.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema87 = schema85.exclusiveMinimum((java.lang.Boolean) true);
        strComparableSchema2.setExample((java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema2.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema89.setPattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str14, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(bigDecimal73);
        org.junit.Assert.assertNull(externalDocumentation77);
        org.junit.Assert.assertNull(strComparable78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(schema89);
    }

    @Test
    public void test03321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03321");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.Schema schema12 = schema2.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal13 = null;
        schema2.setMaximum(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema2.maximum(bigDecimal15);
        schema2.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        io.swagger.oas.models.media.Schema schema20 = schema2.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03322");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        schema15.setReadOnly((java.lang.Boolean) true);
        java.lang.String str18 = schema15.getName();
        schema15.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.properties(strMap24);
        java.lang.Boolean boolean26 = schema25.getUniqueItems();
        schema25.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj29 = schema25.getExample();
        io.swagger.oas.models.media.Schema schema31 = schema25.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = schema25.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMinimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema33.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema33.title("no description");
        io.swagger.oas.models.media.Schema schema41 = schema39.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator42 = schema41.getDiscriminator();
        schema22.setNot(schema41);
        io.swagger.oas.models.media.Schema schema45 = schema41.deprecated((java.lang.Boolean) false);
        schema41.setName("*/*");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03323");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.math.BigDecimal bigDecimal3 = null;
        schema2.setMaximum(bigDecimal3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList6 = strComparableSchema5.getRequired();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema5.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema9.setDescription("hi!");
        strComparableSchema9.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal20 = strComparableSchema9.getMultipleOf();
        java.lang.String str21 = strComparableSchema9.get$ref();
        java.lang.String[] strArray26 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        strComparableSchema9.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.Integer int30 = strComparableSchema9.getMaxLength();
        strComparableSchema9.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        strComparableSchema34.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema34.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        strComparableSchema34.setExternalDocs(externalDocumentation46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.format("");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema9.additionalProperties(schema49);
        java.lang.Boolean boolean51 = schema50.getExclusiveMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = schema50.getExtensions();
        io.swagger.oas.models.media.Schema schema53 = schema2.not(schema50);
        java.math.BigDecimal bigDecimal54 = null;
        schema2.setMinimum(bigDecimal54);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test03324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03324");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMaxProperties();
        schema9.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema schema15 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema17.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema21.setNullable((java.lang.Boolean) false);
        java.lang.String str34 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema21.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = strComparableSchema38.getExternalDocs();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema38.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        strComparableSchema43.setDescription("hi!");
        strComparableSchema43.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema43.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = strComparableSchema43.getProperties();
        io.swagger.oas.models.media.Schema schema57 = schema41.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema43);
        java.lang.Boolean boolean58 = strComparableSchema43.getDeprecated();
        io.swagger.oas.models.media.Schema schema59 = schema36.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray68 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional69 = io.swagger.jaxrs2.OperationParser.getTags(strArray68);
        schema62.setExample((java.lang.Object) tagSetOptional69);
        java.lang.Object obj72 = null;
        schema62.addExtension("*/*", obj72);
        java.lang.String str74 = schema62.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema76.properties(strMap77);
        java.lang.Boolean boolean79 = schema78.getNullable();
        java.lang.String str80 = schema78.getType();
        schema78.setTitle("#/components/schemas/");
        java.lang.Boolean boolean83 = schema78.getUniqueItems();
        schema62.addExtension("Optional.empty", (java.lang.Object) boolean83);
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = schema62.getExtensions();
        schema59.setExtensions(strMap85);
        // The following exception was thrown during execution in test generation
        try {
            schema20.setExtensions(strMap85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(externalDocumentation39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(tagSetOptional69);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(strMap85);
    }

    @Test
    public void test03325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03325");
        java.util.Optional<java.lang.Cloneable> cloneableOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(cloneableOptional0);
    }

    @Test
    public void test03326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03326");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.annotations.servers.Server server10 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray11 = new io.swagger.oas.annotations.servers.Server[] { server10 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray11);
        boolean boolean13 = serverListOptional12.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.String str20 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.getNot();
        boolean boolean22 = serverListOptional12.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema21.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema2.not(schema24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = schema24.getExternalDocs();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList27 = schema24.getEnum();
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema24.minimum(bigDecimal28);
        java.lang.String str30 = schema24.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertNotNull(serverListOptional12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNull(strComparableList27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test03327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03327");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.annotations.servers.Server[] serverArray4 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray4);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional6 = java.util.Optional.ofNullable(serverArray4);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray4);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional8 = java.util.Optional.ofNullable(serverArray4);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray4);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray4);
        io.swagger.oas.annotations.servers.Server[] serverArray11 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray11);
        java.lang.String str13 = serverListOptional12.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray14 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray14);
        boolean boolean16 = serverListOptional15.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList18 = serverListOptional15.orElse(serverList17);
        io.swagger.oas.models.servers.Server[] serverArray19 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList20 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList20, serverArray19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional15.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList20);
        java.util.List<io.swagger.oas.models.servers.Server> serverList23 = serverListOptional12.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList20);
        io.swagger.oas.annotations.servers.Server[] serverArray24 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray24);
        boolean boolean26 = serverListOptional25.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList27 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList28 = serverListOptional25.orElse(serverList27);
        io.swagger.oas.models.servers.Server[] serverArray29 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList30 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList30, serverArray29);
        java.util.List<io.swagger.oas.models.servers.Server> serverList32 = serverListOptional25.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList30);
        java.util.List<io.swagger.oas.models.servers.Server> serverList33 = serverListOptional12.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList30);
        boolean boolean34 = serverListOptional12.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray35 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional36 = io.swagger.jaxrs2.OperationParser.getServers(serverArray35);
        boolean boolean37 = serverListOptional36.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList38 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional36.orElse(serverList38);
        io.swagger.oas.models.servers.Server[] serverArray40 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList41 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList41, serverArray40);
        java.util.List<io.swagger.oas.models.servers.Server> serverList43 = serverListOptional36.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList41);
        io.swagger.oas.annotations.servers.Server[] serverArray44 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional45 = io.swagger.jaxrs2.OperationParser.getServers(serverArray44);
        java.lang.String str46 = serverListOptional45.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray47 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional48 = io.swagger.jaxrs2.OperationParser.getServers(serverArray47);
        java.lang.String str49 = serverListOptional48.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray50 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional51 = io.swagger.jaxrs2.OperationParser.getServers(serverArray50);
        boolean boolean52 = serverListOptional51.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList53 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList54 = serverListOptional51.orElse(serverList53);
        io.swagger.oas.models.servers.Server[] serverArray55 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList56 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList56, serverArray55);
        java.util.List<io.swagger.oas.models.servers.Server> serverList58 = serverListOptional51.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList56);
        java.util.List<io.swagger.oas.models.servers.Server> serverList59 = serverListOptional48.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList56);
        java.util.List<io.swagger.oas.models.servers.Server> serverList60 = serverListOptional45.orElse(serverList59);
        java.util.List<io.swagger.oas.models.servers.Server> serverList61 = serverListOptional36.orElse(serverList59);
        java.util.List<io.swagger.oas.models.servers.Server> serverList62 = serverListOptional12.orElse(serverList61);
        io.swagger.oas.annotations.servers.Server[] serverArray63 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional64 = io.swagger.jaxrs2.OperationParser.getServers(serverArray63);
        boolean boolean65 = serverListOptional64.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList66 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList67 = serverListOptional64.orElse(serverList66);
        io.swagger.oas.models.servers.Server[] serverArray68 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList69 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList69, serverArray68);
        java.util.List<io.swagger.oas.models.servers.Server> serverList71 = serverListOptional64.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList69);
        io.swagger.oas.annotations.servers.Server[] serverArray72 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional73 = io.swagger.jaxrs2.OperationParser.getServers(serverArray72);
        java.lang.String str74 = serverListOptional73.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray75 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional76 = io.swagger.jaxrs2.OperationParser.getServers(serverArray75);
        java.lang.String str77 = serverListOptional76.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray78 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional79 = io.swagger.jaxrs2.OperationParser.getServers(serverArray78);
        boolean boolean80 = serverListOptional79.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList81 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList82 = serverListOptional79.orElse(serverList81);
        io.swagger.oas.models.servers.Server[] serverArray83 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList84 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList84, serverArray83);
        java.util.List<io.swagger.oas.models.servers.Server> serverList86 = serverListOptional79.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList84);
        java.util.List<io.swagger.oas.models.servers.Server> serverList87 = serverListOptional76.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList84);
        java.util.List<io.swagger.oas.models.servers.Server> serverList88 = serverListOptional73.orElse(serverList87);
        java.util.List<io.swagger.oas.models.servers.Server> serverList89 = serverListOptional64.orElse(serverList87);
        java.util.List<io.swagger.oas.models.servers.Server> serverList90 = serverListOptional12.orElse(serverList89);
        java.util.List<io.swagger.oas.models.servers.Server> serverList91 = serverListOptional10.orElse(serverList90);
        java.util.List<io.swagger.oas.models.servers.Server> serverList92 = serverListOptional3.orElse(serverList91);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverArray4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverArrayOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverArrayOptional8);
        org.junit.Assert.assertNotNull(serverListOptional9);
        org.junit.Assert.assertNotNull(serverListOptional10);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertNotNull(serverListOptional12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Optional.empty" + "'", str13, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertNotNull(serverListOptional15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(serverList18);
        org.junit.Assert.assertNotNull(serverArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(serverList22);
        org.junit.Assert.assertNotNull(serverList23);
        org.junit.Assert.assertNotNull(serverArray24);
        org.junit.Assert.assertNotNull(serverListOptional25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(serverList28);
        org.junit.Assert.assertNotNull(serverArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(serverList32);
        org.junit.Assert.assertNotNull(serverList33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(serverArray35);
        org.junit.Assert.assertNotNull(serverListOptional36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(serverList39);
        org.junit.Assert.assertNotNull(serverArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(serverList43);
        org.junit.Assert.assertNotNull(serverArray44);
        org.junit.Assert.assertNotNull(serverListOptional45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Optional.empty" + "'", str46, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray47);
        org.junit.Assert.assertNotNull(serverListOptional48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Optional.empty" + "'", str49, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray50);
        org.junit.Assert.assertNotNull(serverListOptional51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(serverList54);
        org.junit.Assert.assertNotNull(serverArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(serverList58);
        org.junit.Assert.assertNotNull(serverList59);
        org.junit.Assert.assertNotNull(serverList60);
        org.junit.Assert.assertNotNull(serverList61);
        org.junit.Assert.assertNotNull(serverList62);
        org.junit.Assert.assertNotNull(serverArray63);
        org.junit.Assert.assertNotNull(serverListOptional64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(serverList67);
        org.junit.Assert.assertNotNull(serverArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(serverList71);
        org.junit.Assert.assertNotNull(serverArray72);
        org.junit.Assert.assertNotNull(serverListOptional73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Optional.empty" + "'", str74, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray75);
        org.junit.Assert.assertNotNull(serverListOptional76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Optional.empty" + "'", str77, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray78);
        org.junit.Assert.assertNotNull(serverListOptional79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(serverList82);
        org.junit.Assert.assertNotNull(serverArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(serverList86);
        org.junit.Assert.assertNotNull(serverList87);
        org.junit.Assert.assertNotNull(serverList88);
        org.junit.Assert.assertNotNull(serverList89);
        org.junit.Assert.assertNotNull(serverList90);
        org.junit.Assert.assertNotNull(serverList91);
        org.junit.Assert.assertNotNull(serverList92);
    }

    @Test
    public void test03328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03328");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.lang.Boolean boolean11 = strComparableSchema0.getUniqueItems();
        strComparableSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test03329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03329");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList6 = strComparableSchema5.getRequired();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema5.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema9.setDescription("hi!");
        strComparableSchema9.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal20 = strComparableSchema9.getMultipleOf();
        java.lang.String str21 = strComparableSchema9.get$ref();
        java.lang.String[] strArray26 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        strComparableSchema9.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.Integer int30 = strComparableSchema9.getMaxLength();
        strComparableSchema9.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        strComparableSchema0.setDefault((java.lang.Object) strComparableSchema9);
        java.math.BigDecimal bigDecimal35 = strComparableSchema0.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int37 = strComparableSchema0.getMinItems();
        strComparableSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(externalDocumentation36);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test03330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03330");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema21.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator34 = strComparableSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.properties(strMap36);
        java.lang.Boolean boolean38 = schema37.getUniqueItems();
        schema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = null;
        schema37.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema37.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema21.example((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema schema46 = schema19.addProperties("*/*", (io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema21.discriminator(discriminator47);
        io.swagger.oas.models.media.Schema schema50 = schema48.pattern("no description");
        io.swagger.oas.models.media.Schema schema51 = schema48.getNot();
        io.swagger.oas.models.media.XML xML52 = schema48.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(xML52);
    }

    @Test
    public void test03331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03331");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema11.uniqueItems((java.lang.Boolean) false);
        schema16.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema20 = schema16.deprecated((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = schema16.getEnum();
        java.lang.String[] strArray26 = new java.lang.String[] { ",", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        io.swagger.oas.models.media.Schema schema29 = schema16.required((java.util.List<java.lang.String>) strList27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = schema29.getProperties();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strComparableList21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
    }

    @Test
    public void test03332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03332");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema21.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator34 = strComparableSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.properties(strMap36);
        java.lang.Boolean boolean38 = schema37.getUniqueItems();
        schema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = null;
        schema37.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema37.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema21.example((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema schema46 = schema19.addProperties("*/*", (io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.lang.String str47 = strComparableSchema21.getTitle();
        strComparableSchema21.set$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema21.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test03333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03333");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.lang.Boolean boolean13 = schema11.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema11.maxLength((java.lang.Integer) 100);
        schema15.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03334");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        java.lang.Integer int39 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.lang.String str46 = strComparableSchema40.get$ref();
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional54 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema40.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = schema38.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema58 = schema56.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal59 = null;
        schema58.setMinimum(bigDecimal59);
        io.swagger.oas.models.media.Schema schema62 = schema58.pattern("*/*");
        schema58.setPattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal65 = schema58.getMultipleOf();
        schema58.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(bigDecimal65);
    }

    @Test
    public void test03335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03335");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.nullable((java.lang.Boolean) false);
        java.lang.Object obj41 = strComparableSchema0.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema46.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema55.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.maximum(bigDecimal58);
        io.swagger.oas.models.media.Schema schema61 = schema59.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema63 = schema61.title("hi!");
        schema61.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema46.addProperties(",", schema61);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema61.multipleOf(bigDecimal67);
        io.swagger.oas.models.media.XML xML69 = null;
        schema68.setXml(xML69);
        io.swagger.oas.models.media.Schema schema72 = schema68.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema74 = schema72.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema0.additionalProperties(schema72);
        java.math.BigDecimal bigDecimal76 = null;
        strComparableSchema0.setMinimum(bigDecimal76);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test03336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03336");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.multipleOf(bigDecimal66);
        java.lang.Integer int68 = schema67.getMaxItems();
        strComparableSchema0.setAdditionalProperties(schema67);
        io.swagger.oas.models.media.Discriminator discriminator70 = strComparableSchema0.getDiscriminator();
        java.lang.Object obj71 = null;
        strComparableSchema0.setDefault(obj71);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema0.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03337");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema10.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = strComparableSchema10.getProperties();
        strComparableSchema10.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.writeOnly((java.lang.Boolean) false);
        schema28.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema28.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML33 = null;
        schema32.setXml(xML33);
        io.swagger.oas.models.media.Schema schema36 = schema32.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema32.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema32.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str41 = schema32.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = strComparableSchema42.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable44 = strComparableSchema42.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str58 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        strComparableSchema57.setDescription("hi!");
        strComparableSchema57.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema51.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema57);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        java.lang.Boolean boolean70 = strComparableSchema47.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList79 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean80 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean81 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean82 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean83 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean84 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean85 = strComparableList79.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean86 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean87 = strComparableList79.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema47.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList79);
        strComparableSchema42.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList79);
        schema32.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList79);
        strComparableSchema10.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList79);
        schema9.setExample((java.lang.Object) strComparableSchema10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation93 = null;
        schema9.setExternalDocs(externalDocumentation93);
        io.swagger.oas.models.media.Schema schema96 = schema9.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema98 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(externalDocumentation43);
        org.junit.Assert.assertNull(strComparable44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test03338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03338");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.properties(strMap28);
        java.lang.Integer int30 = schema29.getMinProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test03339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03339");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = schema7.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(externalDocumentation8);
    }

    @Test
    public void test03340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03340");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        schema37.setExternalDocs(externalDocumentation38);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.multipleOf(bigDecimal40);
        schema37.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test03341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03341");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.properties(strMap32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema0.format("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test03342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03342");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.multipleOf(bigDecimal11);
        schema12.setExample((java.lang.Object) "hi!");
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = schema12.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = strComparableSchema19.getExternalDocs();
        java.lang.Integer int21 = strComparableSchema19.getMaxLength();
        java.lang.Integer int22 = strComparableSchema19.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = strComparableSchema25.getExternalDocs();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema25.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema30.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = strComparableSchema30.getProperties();
        io.swagger.oas.models.media.Schema schema44 = schema28.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema30);
        java.lang.Boolean boolean45 = schema44.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        schema44.setDiscriminator(discriminator46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = schema44.getProperties();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema19.properties(strMap48);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema19.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema19.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema53);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test03343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03343");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        strComparableSchema0.setName("no description");
        java.lang.Integer int15 = strComparableSchema0.getMinLength();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.nullable((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass18 = schema17.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test03344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03344");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.properties(strMap32);
        java.lang.String str34 = strComparableSchema0.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
    }

    @Test
    public void test03345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03345");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema0.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        schema11.set$ref("*/*");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03346");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema15.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        strComparableSchema15.setExternalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema15.format("");
        strComparableSchema15.setReadOnly((java.lang.Boolean) true);
        strComparableSchema15.setDefault((java.lang.Object) 0.0d);
        io.swagger.oas.models.media.Schema schema35 = schema11.example((java.lang.Object) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema15.minItems((java.lang.Integer) 10);
        java.lang.Boolean boolean38 = schema37.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.properties(strMap40);
        java.lang.Boolean boolean42 = schema41.getNullable();
        java.lang.String str43 = schema41.getType();
        schema41.setTitle("#/components/schemas/");
        schema41.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema41.addRequiredItem("*/*");
        schema49.setMinProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal52 = schema49.getMinimum();
        java.math.BigDecimal bigDecimal53 = schema49.getMultipleOf();
        io.swagger.oas.models.media.Schema schema55 = schema49.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema55.minItems((java.lang.Integer) 100);
        boolean boolean58 = schema37.equals((java.lang.Object) schema55);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test03347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03347");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal15 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.xml(xML16);
        java.lang.Boolean boolean18 = schema17.getExclusiveMinimum();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema17.getExtensions();
        java.lang.String str20 = schema17.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test03348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03348");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setMinItems((java.lang.Integer) 1);
        java.lang.String str3 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema4.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strComparableSchema4.getProperties();
        java.lang.Boolean boolean18 = strComparableSchema4.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema4.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema4);
        java.math.BigDecimal bigDecimal22 = null;
        schema21.setMinimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema21.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj26 = schema25.getExample();
        schema25.addEnumItemObject((java.lang.Comparable<java.lang.String>) ",");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str3, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(obj26);
    }

    @Test
    public void test03349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03349");
        java.util.Optional<java.util.Collection<java.lang.String>> strCollectionOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strCollectionOptional0);
    }

    @Test
    public void test03350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03350");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal16 = strComparableSchema5.getMultipleOf();
        java.lang.String str17 = strComparableSchema5.get$ref();
        java.lang.String[] strArray22 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        strComparableSchema5.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.Integer int26 = strComparableSchema5.getMaxLength();
        java.lang.Integer int27 = strComparableSchema5.getMaxProperties();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal41 = strComparableSchema30.getMultipleOf();
        java.lang.String str42 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema schema43 = schema29.example((java.lang.Object) strComparableSchema30);
        strComparableSchema0.setNot(schema43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema0.multipleOf(bigDecimal45);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.discriminator(discriminator47);
        schema46.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test03351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03351");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        strComparableSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03352");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema18.setMaximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema18.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList30 = strComparableSchema18.getRequired();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required(strList30);
        io.swagger.oas.models.media.XML xML32 = strComparableSchema0.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema33.setDescription("hi!");
        strComparableSchema33.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal44 = strComparableSchema33.getMultipleOf();
        java.lang.String str45 = strComparableSchema33.get$ref();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema33.maximum(bigDecimal46);
        io.swagger.oas.models.media.Discriminator discriminator48 = strComparableSchema33.getDiscriminator();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema33.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema50.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal53 = schema50.getMinimum();
        java.util.List<java.lang.String> strList54 = schema50.getRequired();
        strComparableSchema0.setNot(schema50);
        io.swagger.oas.models.media.Schema schema57 = schema50.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(xML32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test03353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03353");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str4 = schema3.getType();
        schema3.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test03354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03354");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.properties(strMap18);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03355");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional45 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema2.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        io.swagger.oas.models.media.Schema schema50 = schema48.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML51 = schema48.getXml();
        schema48.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        strComparableSchema54.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema54.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = strComparableSchema54.getProperties();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema54.type("");
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema54.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean72 = strComparableSchema54.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str74 = strComparableSchema73.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema75.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema73.not((io.swagger.oas.models.media.Schema) strComparableSchema75);
        java.lang.String str79 = strComparableSchema73.get$ref();
        java.lang.String[] strArray84 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional87 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema73.required((java.util.List<java.lang.String>) strList85);
        io.swagger.oas.models.media.Schema schema90 = schema88.minProperties((java.lang.Integer) 100);
        strComparableSchema54.setDefault((java.lang.Object) schema90);
        java.lang.Boolean boolean92 = schema90.getWriteOnly();
        java.lang.Boolean boolean93 = schema90.getNullable();
        schema48.setExample((java.lang.Object) boolean93);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(xML51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertEquals("'" + boolean72 + "' != '" + false + "'", boolean72, false);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(boolean92);
        org.junit.Assert.assertNull(boolean93);
    }

    @Test
    public void test03356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03356");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean9 = schema6.getNullable();
        schema6.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        schema6.setDiscriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = null;
        schema6.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema16.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        strComparableSchema16.setExternalDocs(externalDocumentation28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema16.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        java.math.BigDecimal bigDecimal40 = null;
        strComparableSchema32.setMaximum(bigDecimal40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal53 = strComparableSchema42.getMultipleOf();
        java.lang.String str54 = strComparableSchema42.get$ref();
        java.lang.String[] strArray59 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        strComparableSchema42.setRequired((java.util.List<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema32.required((java.util.List<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema32.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        java.lang.String str72 = strComparableSchema66.get$ref();
        java.lang.String[] strArray77 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional80 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema66.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema82 = schema65.required((java.util.List<java.lang.String>) strList78);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional83 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema16.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema85 = schema6.required((java.util.List<java.lang.String>) strList78);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strCollectionOptional83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test03357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03357");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        java.lang.Boolean boolean4 = schema2.getDeprecated();
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.minimum(bigDecimal5);
        java.lang.String str7 = schema6.toString();
        java.lang.String str8 = schema6.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str7, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test03358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03358");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema3.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = schema3.writeOnly((java.lang.Boolean) false);
        schema3.setMaxLength((java.lang.Integer) 10);
        schema3.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test03359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03359");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.lang.Cloneable> cloneableOptional4 = java.util.Optional.ofNullable((java.lang.Cloneable) serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema8.setMaximum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        strComparableSchema18.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal29 = strComparableSchema18.getMultipleOf();
        java.lang.String str30 = strComparableSchema18.get$ref();
        java.lang.String[] strArray35 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        strComparableSchema18.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema8.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema8.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema8.discriminator(discriminator42);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        boolean boolean46 = serverListOptional7.equals((java.lang.Object) true);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(cloneableOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test03360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03360");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        strComparableSchema0.setName("Optional.empty");
        java.math.BigDecimal bigDecimal20 = strComparableSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        schema22.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03361");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        io.swagger.oas.annotations.servers.Server[] serverArray7 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray7);
        java.lang.String str9 = serverListOptional8.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray10 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray10);
        boolean boolean12 = serverListOptional11.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList13 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList14 = serverListOptional11.orElse(serverList13);
        io.swagger.oas.models.servers.Server[] serverArray15 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList16 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList16, serverArray15);
        java.util.List<io.swagger.oas.models.servers.Server> serverList18 = serverListOptional11.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList16);
        java.util.List<io.swagger.oas.models.servers.Server> serverList19 = serverListOptional8.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList16);
        io.swagger.oas.annotations.servers.Server[] serverArray20 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        java.lang.String str22 = serverListOptional21.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray23 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray23);
        boolean boolean25 = serverListOptional24.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList27 = serverListOptional24.orElse(serverList26);
        io.swagger.oas.models.servers.Server[] serverArray28 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList29 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList29, serverArray28);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional24.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        java.util.List<io.swagger.oas.models.servers.Server> serverList32 = serverListOptional21.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        io.swagger.oas.annotations.servers.Server[] serverArray33 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional34 = io.swagger.jaxrs2.OperationParser.getServers(serverArray33);
        boolean boolean35 = serverListOptional34.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList36 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList37 = serverListOptional34.orElse(serverList36);
        io.swagger.oas.models.servers.Server[] serverArray38 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList39 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList39, serverArray38);
        java.util.List<io.swagger.oas.models.servers.Server> serverList41 = serverListOptional34.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList39);
        java.util.List<io.swagger.oas.models.servers.Server> serverList42 = serverListOptional21.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList39);
        boolean boolean43 = serverListOptional8.equals((java.lang.Object) serverListOptional21);
        java.util.List<io.swagger.oas.models.servers.Server> serverList44 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList45 = serverListOptional8.orElse(serverList44);
        io.swagger.oas.annotations.servers.Server[] serverArray46 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional47 = io.swagger.jaxrs2.OperationParser.getServers(serverArray46);
        java.lang.String str48 = serverListOptional47.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray49 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional50 = io.swagger.jaxrs2.OperationParser.getServers(serverArray49);
        boolean boolean51 = serverListOptional50.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList52 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList53 = serverListOptional50.orElse(serverList52);
        io.swagger.oas.models.servers.Server[] serverArray54 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList55 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList55, serverArray54);
        java.util.List<io.swagger.oas.models.servers.Server> serverList57 = serverListOptional50.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList55);
        java.util.List<io.swagger.oas.models.servers.Server> serverList58 = serverListOptional47.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList55);
        io.swagger.oas.annotations.servers.Server[] serverArray59 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional60 = io.swagger.jaxrs2.OperationParser.getServers(serverArray59);
        boolean boolean61 = serverListOptional60.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList62 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList63 = serverListOptional60.orElse(serverList62);
        io.swagger.oas.models.servers.Server[] serverArray64 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList65 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList65, serverArray64);
        java.util.List<io.swagger.oas.models.servers.Server> serverList67 = serverListOptional60.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList65);
        java.util.List<io.swagger.oas.models.servers.Server> serverList68 = serverListOptional47.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList65);
        io.swagger.oas.annotations.servers.Server[] serverArray69 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional70 = io.swagger.jaxrs2.OperationParser.getServers(serverArray69);
        boolean boolean71 = serverListOptional70.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList72 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList73 = serverListOptional70.orElse(serverList72);
        io.swagger.oas.models.servers.Server[] serverArray74 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList75 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList75, serverArray74);
        java.util.List<io.swagger.oas.models.servers.Server> serverList77 = serverListOptional70.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList75);
        java.util.List<io.swagger.oas.models.servers.Server> serverList78 = serverListOptional47.orElse(serverList77);
        java.util.List<io.swagger.oas.models.servers.Server> serverList79 = serverListOptional8.orElse(serverList77);
        java.util.List<io.swagger.oas.models.servers.Server> serverList80 = serverListOptional6.orElse(serverList77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList81 = serverListOptional6.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverArray7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Optional.empty" + "'", str9, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray10);
        org.junit.Assert.assertNotNull(serverListOptional11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(serverList14);
        org.junit.Assert.assertNotNull(serverArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serverList18);
        org.junit.Assert.assertNotNull(serverList19);
        org.junit.Assert.assertNotNull(serverArray20);
        org.junit.Assert.assertNotNull(serverListOptional21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Optional.empty" + "'", str22, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray23);
        org.junit.Assert.assertNotNull(serverListOptional24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(serverList27);
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNotNull(serverList32);
        org.junit.Assert.assertNotNull(serverArray33);
        org.junit.Assert.assertNotNull(serverListOptional34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(serverList37);
        org.junit.Assert.assertNotNull(serverArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(serverList41);
        org.junit.Assert.assertNotNull(serverList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(serverList45);
        org.junit.Assert.assertNotNull(serverArray46);
        org.junit.Assert.assertNotNull(serverListOptional47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Optional.empty" + "'", str48, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray49);
        org.junit.Assert.assertNotNull(serverListOptional50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(serverList53);
        org.junit.Assert.assertNotNull(serverArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(serverList57);
        org.junit.Assert.assertNotNull(serverList58);
        org.junit.Assert.assertNotNull(serverArray59);
        org.junit.Assert.assertNotNull(serverListOptional60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(serverList63);
        org.junit.Assert.assertNotNull(serverArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(serverList67);
        org.junit.Assert.assertNotNull(serverList68);
        org.junit.Assert.assertNotNull(serverArray69);
        org.junit.Assert.assertNotNull(serverListOptional70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(serverList73);
        org.junit.Assert.assertNotNull(serverArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(serverList77);
        org.junit.Assert.assertNotNull(serverList78);
        org.junit.Assert.assertNotNull(serverList79);
        org.junit.Assert.assertNotNull(serverList80);
    }

    @Test
    public void test03362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03362");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        boolean boolean15 = serverListOptional14.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional14.orElse(serverList16);
        io.swagger.oas.models.servers.Server[] serverArray18 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList19 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList19, serverArray18);
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.lang.String str23 = serverListOptional1.toString();
        io.swagger.oas.models.servers.Server[] serverArray24 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList25 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList25, serverArray24);
        java.util.List<io.swagger.oas.models.servers.Server> serverList27 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList25);
        io.swagger.oas.models.servers.Server[] serverArray28 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList29 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList29, serverArray28);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        io.swagger.oas.models.servers.Server[] serverArray32 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList33 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList33, serverArray32);
        java.util.List<io.swagger.oas.models.servers.Server> serverList35 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList33);
        boolean boolean36 = serverListOptional1.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serverList21);
        org.junit.Assert.assertNotNull(serverList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Optional.empty" + "'", str23, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(serverList27);
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNotNull(serverArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(serverList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test03363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03363");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        schema33.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema33.$ref("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        schema33.setExternalDocs(externalDocumentation38);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema33.minimum(bigDecimal40);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test03364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03364");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        java.lang.Boolean boolean27 = strComparableSchema2.getExclusiveMinimum();
        strComparableSchema2.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        strComparableSchema2.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema2.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.properties(strMap35);
        java.lang.Boolean boolean37 = schema36.getNullable();
        java.lang.String str38 = schema36.getType();
        schema36.setTitle("#/components/schemas/");
        java.lang.Boolean boolean41 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema43 = schema36.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema36.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal46 = schema36.getMaximum();
        io.swagger.oas.models.media.Schema schema48 = schema36.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator49 = schema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema2.not(schema48);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(discriminator49);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test03365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03365");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.lang.String str26 = strComparableSchema14.get$ref();
        java.lang.String[] strArray31 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        strComparableSchema14.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = strComparableSchema14.getMaxLength();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema14.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema38 = schema2.addProperties("#/components/schemas/", schema37);
        java.math.BigDecimal bigDecimal39 = null;
        schema2.setMultipleOf(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema2.deprecated((java.lang.Boolean) false);
        schema2.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test03366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03366");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        schema45.setExample((java.lang.Object) "Optional.empty");
        schema45.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int50 = schema45.getMaxItems();
        java.lang.Boolean boolean51 = schema45.getWriteOnly();
        schema45.setName("");
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(boolean51);
    }

    @Test
    public void test03367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03367");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.xml(xML52);
        io.swagger.oas.models.media.Schema schema55 = schema51.name("");
        io.swagger.oas.models.media.Schema schema57 = schema51.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str59 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        java.lang.Boolean boolean64 = strComparableSchema58.getReadOnly();
        strComparableSchema58.setType("");
        strComparableSchema58.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema58.minimum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.not(schema71);
        io.swagger.oas.models.media.Schema schema74 = schema72.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema75 = schema51.example((java.lang.Object) true);
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.minimum(bigDecimal76);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test03368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03368");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean13 = strComparableSchema7.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strComparableSchema7.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema16 = schema6.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.uniqueItems((java.lang.Boolean) false);
        schema22.setDescription("");
        schema22.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        schema22.setExternalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema22.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = strComparableSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = schema22.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema7.additionalProperties(schema22);
        schema34.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema34.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal39 = null;
        schema38.setMultipleOf(bigDecimal39);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test03369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03369");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        io.swagger.oas.models.media.Schema schema14 = schema11.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema11.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema19.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList25 = strComparableSchema24.getRequired();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema24.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal39 = strComparableSchema28.getMultipleOf();
        java.lang.String str40 = strComparableSchema28.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        strComparableSchema28.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.Integer int49 = strComparableSchema28.getMaxLength();
        strComparableSchema28.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema19.setDefault((java.lang.Object) strComparableSchema28);
        io.swagger.oas.models.media.Discriminator discriminator54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema28.discriminator(discriminator54);
        java.util.List<java.lang.String> strList56 = strComparableSchema28.getRequired();
        io.swagger.oas.models.media.Schema schema57 = schema16.required(strList56);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList58 = schema57.getEnum();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(strComparableList58);
    }

    @Test
    public void test03370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03370");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = strComparableSchema0.getWriteOnly();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.discriminator(discriminator20);
        java.util.List<java.lang.String> strList22 = strComparableSchema0.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strList22);
    }

    @Test
    public void test03371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03371");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional45 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema2.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        io.swagger.oas.models.media.Schema schema50 = schema48.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema52.setDescription("hi!");
        strComparableSchema52.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = strComparableSchema52.getProperties();
        java.lang.Boolean boolean66 = strComparableSchema52.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable67 = strComparableSchema52.getDefault();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema52.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema70 = schema48.addProperties("no description", schema69);
        io.swagger.oas.models.media.Discriminator discriminator71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema48.discriminator(discriminator71);
        java.math.BigDecimal bigDecimal73 = schema72.getMinimum();
        java.lang.Integer int74 = schema72.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(strComparable67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(bigDecimal73);
        org.junit.Assert.assertNull(int74);
    }

    @Test
    public void test03372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03372");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema40.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        schema40.setDiscriminator(discriminator43);
        io.swagger.oas.models.media.Schema schema45 = schema40.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03373");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.Schema schema12 = schema2.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int15 = schema12.getMaxLength();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema12.minimum(bigDecimal16);
        java.lang.Boolean boolean18 = schema17.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test03374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03374");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        schema2.setExternalDocs(externalDocumentation7);
        java.lang.String str9 = schema2.toString();
        io.swagger.oas.models.media.XML xML10 = null;
        schema2.setXml(xML10);
        java.math.BigDecimal bigDecimal12 = null;
        schema2.setMinimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str16 = schema2.get$ref();
        java.lang.Integer int17 = schema2.getMinLength();
        java.lang.Boolean boolean18 = schema2.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test03375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03375");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        schema24.setName("no description");
        java.math.BigDecimal bigDecimal27 = null;
        schema24.setMaximum(bigDecimal27);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema24.getExtensions();
        java.lang.Integer int30 = schema24.getMaxLength();
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema24.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema24.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03376");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList12 = strComparableSchema0.getRequired();
        java.lang.Boolean boolean13 = strComparableSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.minItems((java.lang.Integer) 1);
        java.lang.Integer int16 = strComparableSchema0.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test03377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03377");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        strComparableSchema0.addExtension("#/components/schemas/", (java.lang.Object) str30);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.externalDocs(externalDocumentation32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema36.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.maximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema40.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.externalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema45.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = strComparableSchema45.getProperties();
        java.lang.Boolean boolean59 = strComparableSchema45.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = strComparableSchema45.getProperties();
        strComparableSchema45.setMinItems((java.lang.Integer) 0);
        strComparableSchema45.setExclusiveMinimum((java.lang.Boolean) true);
        boolean boolean65 = schema42.equals((java.lang.Object) strComparableSchema45);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema42.minimum(bigDecimal66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = strComparableSchema68.getExternalDocs();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema68.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str74 = strComparableSchema73.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema75.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema73.not((io.swagger.oas.models.media.Schema) strComparableSchema75);
        strComparableSchema73.setDescription("hi!");
        strComparableSchema73.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema73.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap86 = strComparableSchema73.getProperties();
        io.swagger.oas.models.media.Schema schema87 = schema71.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema73);
        java.lang.Boolean boolean88 = schema87.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator89 = null;
        schema87.setDiscriminator(discriminator89);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap91 = schema87.getProperties();
        schema67.setProperties(strMap91);
        io.swagger.oas.models.media.Schema schema93 = strComparableSchema0.properties(strMap91);
        io.swagger.oas.models.media.XML xML94 = null;
        strComparableSchema0.setXml(xML94);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(externalDocumentation69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(boolean88);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test03378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03378");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML25 = null;
        strComparableSchema0.setXml(xML25);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int29 = strComparableSchema0.getMinItems();
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test03379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03379");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.Boolean boolean14 = schema9.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal26 = strComparableSchema15.getMultipleOf();
        java.lang.String str27 = strComparableSchema15.get$ref();
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        strComparableSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        java.lang.Integer int36 = strComparableSchema15.getMaxLength();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema15.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema15.getNot();
        java.math.BigDecimal bigDecimal40 = null;
        strComparableSchema15.setMinimum(bigDecimal40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        strComparableSchema15.setProperties(strMap42);
        java.lang.Integer int44 = strComparableSchema15.getMinProperties();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema47.setNullable((java.lang.Boolean) true);
        strComparableSchema47.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = null;
        strComparableSchema56.setExtensions(strMap60);
        strComparableSchema56.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int64 = strComparableSchema56.getMaxItems();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema56.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema67.setDescription("hi!");
        java.math.BigDecimal bigDecimal75 = null;
        strComparableSchema67.setMaximum(bigDecimal75);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema67.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList79 = strComparableSchema67.getRequired();
        io.swagger.oas.models.media.Schema schema80 = schema66.required(strList79);
        strComparableSchema47.setRequired(strList79);
        strComparableSchema15.setRequired(strList79);
        io.swagger.oas.models.media.Schema schema83 = schema9.required(strList79);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional84 = java.util.Optional.of(strList79);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strListOptional84);
    }

    @Test
    public void test03380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03380");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.XML xML6 = null;
        strComparableSchema0.setXml(xML6);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.deprecated((java.lang.Boolean) false);
        strComparableSchema0.setDefault((java.lang.Object) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal27 = strComparableSchema16.getMultipleOf();
        java.lang.String str28 = strComparableSchema16.get$ref();
        strComparableSchema16.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema16.description("hi!");
        java.lang.Boolean boolean33 = strComparableSchema16.getNullable();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema35.getAdditionalProperties();
        boolean boolean37 = strComparableSchema0.equals((java.lang.Object) schema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema38.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.not((io.swagger.oas.models.media.Schema) strComparableSchema62);
        strComparableSchema60.setDescription("hi!");
        strComparableSchema60.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema54.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema60);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.multipleOf(bigDecimal73);
        io.swagger.oas.models.media.Schema schema75 = schema47.not(schema74);
        io.swagger.oas.models.media.Schema schema77 = schema75.maxProperties((java.lang.Integer) 100);
        schema77.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema81 = schema77.readOnly((java.lang.Boolean) true);
        schema35.setDefault((java.lang.Object) schema77);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema84 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema84.writeOnly((java.lang.Boolean) false);
        schema86.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema90 = schema86.title("#/components/schemas/");
        schema90.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal93 = schema90.getMinimum();
        java.lang.String str94 = schema90.getTitle();
        java.math.BigDecimal bigDecimal95 = null;
        io.swagger.oas.models.media.Schema schema96 = schema90.multipleOf(bigDecimal95);
        io.swagger.oas.models.media.Schema schema97 = schema77.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema90);
        java.math.BigDecimal bigDecimal98 = null;
        schema90.setMultipleOf(bigDecimal98);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(bigDecimal93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "#/components/schemas/" + "'", str94, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test03381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03381");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal13 = schema10.getMinimum();
        java.math.BigDecimal bigDecimal14 = schema10.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        schema10.setDiscriminator(discriminator15);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test03382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03382");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        java.lang.String str15 = schema2.getType();
        java.lang.String str16 = schema2.getName();
        schema2.setMaxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal19 = null;
        schema2.setMultipleOf(bigDecimal19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test03383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03383");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = schema24.description("*/*");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03384");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.not(schema13);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema12.getEnum();
        schema12.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema12.addRequiredItem("*/*");
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema19.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator22 = schema19.getDiscriminator();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(discriminator22);
    }

    @Test
    public void test03385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03385");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.pattern("");
        java.lang.Class<?> wildcardClass23 = strComparableSchema0.getClass();
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional24 = java.util.Optional.ofNullable((java.lang.reflect.GenericDeclaration) wildcardClass23);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(genericDeclarationOptional24);
    }

    @Test
    public void test03386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03386");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = strComparableSchema0.getProperties();
        java.math.BigDecimal bigDecimal12 = strComparableSchema0.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test03387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03387");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("Optional.empty");
        io.swagger.oas.models.media.Schema schema13 = schema11.description("Optional.empty");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList14 = schema13.getEnum();
        java.lang.Integer int15 = schema13.getMinLength();
        schema13.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema13.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strComparableList14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(discriminator18);
    }

    @Test
    public void test03388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03388");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = schema11.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        schema17.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema17.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML22 = null;
        schema21.setXml(xML22);
        io.swagger.oas.models.media.Schema schema25 = schema21.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema21.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema21.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.writeOnly((java.lang.Boolean) false);
        schema36.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal39 = schema36.getMaximum();
        io.swagger.oas.models.media.Schema schema40 = schema33.additionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema42 = schema40.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal43 = null;
        schema40.setMultipleOf(bigDecimal43);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList49 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean51 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean52 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean53 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList49);
        schema29.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList49);
        schema11.setAdditionalProperties(schema29);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test03389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03389");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema27.setNullable((java.lang.Boolean) false);
        java.lang.String str40 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema27.name("");
        io.swagger.oas.models.media.Schema schema44 = schema42.minProperties((java.lang.Integer) 10);
        boolean boolean45 = schema26.equals((java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema47 = schema26.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.externalDocs(externalDocumentation48);
        java.lang.String str50 = schema49.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test03390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03390");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        java.lang.Boolean boolean23 = strComparableSchema8.getDeprecated();
        strComparableSchema8.setMinProperties((java.lang.Integer) 100);
        java.lang.String str26 = strComparableSchema8.getDescription();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test03391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03391");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.xml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal26 = strComparableSchema15.getMultipleOf();
        java.math.BigDecimal bigDecimal27 = strComparableSchema15.getMultipleOf();
        strComparableSchema15.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = strComparableSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema31.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema36.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = strComparableSchema36.getProperties();
        io.swagger.oas.models.media.Schema schema50 = schema34.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema36.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal64 = strComparableSchema53.getMultipleOf();
        java.lang.String str65 = strComparableSchema53.get$ref();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema53.maximum(bigDecimal66);
        io.swagger.oas.models.media.Discriminator discriminator68 = strComparableSchema53.getDiscriminator();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema53.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = schema70.minProperties((java.lang.Integer) 0);
        schema52.setNot(schema70);
        strComparableSchema15.addExtension("", (java.lang.Object) schema52);
        java.lang.Integer int75 = schema52.getMaxItems();
        io.swagger.oas.models.media.Schema schema77 = schema52.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema78 = schema13.addProperties("#/components/schemas/no description", schema77);
        io.swagger.oas.models.media.Schema schema80 = schema77.maxLength((java.lang.Integer) 100);
        java.lang.Integer int81 = schema77.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(int81);
    }

    @Test
    public void test03392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03392");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema4.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema9.setDescription("hi!");
        strComparableSchema9.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal20 = strComparableSchema9.getMultipleOf();
        java.lang.String str21 = strComparableSchema9.get$ref();
        java.lang.String[] strArray26 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        strComparableSchema9.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.Integer int30 = strComparableSchema9.getMaxLength();
        java.lang.Integer int31 = strComparableSchema9.getMaxProperties();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        strComparableSchema34.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal45 = strComparableSchema34.getMultipleOf();
        java.lang.String str46 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema schema47 = schema33.example((java.lang.Object) strComparableSchema34);
        strComparableSchema4.setNot(schema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema4.multipleOf(bigDecimal49);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.example((java.lang.Object) schema50);
        java.lang.String str52 = strComparableSchema0.getTitle();
        java.lang.Integer int53 = strComparableSchema0.getMaxProperties();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(int53);
    }

    @Test
    public void test03393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03393");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        strComparableSchema0.setProperties(strMap5);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean9 = strComparableSchema0.getExclusiveMaximum();
        strComparableSchema0.setMinItems((java.lang.Integer) 0);
        java.lang.Integer int12 = strComparableSchema0.getMaxLength();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + true + "'", boolean9, true);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test03394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03394");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.properties(strMap33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        strComparableSchema10.setExternalDocs(externalDocumentation35);
        java.lang.Object obj37 = strComparableSchema10.getExample();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema10.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema39.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema44.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema44.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        strComparableSchema54.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal65 = strComparableSchema54.getMultipleOf();
        java.lang.String str66 = strComparableSchema54.get$ref();
        java.lang.String[] strArray71 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        strComparableSchema54.setRequired((java.util.List<java.lang.String>) strList72);
        schema53.setNot((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.lang.Integer int76 = strComparableSchema54.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema54.properties(strMap77);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        strComparableSchema54.setExternalDocs(externalDocumentation79);
        java.lang.Object obj81 = strComparableSchema54.getExample();
        io.swagger.oas.models.media.Schema schema82 = schema43.example(obj81);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = strComparableSchema83.getExternalDocs();
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema83.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal87 = null;
        strComparableSchema83.setMinimum(bigDecimal87);
        io.swagger.oas.models.media.Schema schema90 = strComparableSchema83.uniqueItems((java.lang.Boolean) false);
        java.lang.String str91 = schema90.get$ref();
        io.swagger.oas.models.media.Schema schema93 = schema90.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema94 = schema82.not(schema93);
        schema94.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal97 = null;
        schema94.setMinimum(bigDecimal97);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(obj81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(externalDocumentation84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test03395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03395");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema20.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema schema39 = schema38.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema41 = schema38.minLength((java.lang.Integer) 0);
        schema41.setReadOnly((java.lang.Boolean) true);
        schema41.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema46.setDescription("hi!");
        strComparableSchema46.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema46.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = strComparableSchema46.getProperties();
        io.swagger.oas.models.media.Schema schema60 = schema41.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        boolean boolean61 = strComparableSchema0.equals((java.lang.Object) strComparableSchema46);
        java.lang.Integer int62 = strComparableSchema46.getMaxProperties();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema46.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test03396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03396");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema4.description("");
        java.lang.Integer int7 = schema4.getMaxItems();
        io.swagger.oas.models.media.Schema schema9 = schema4.writeOnly((java.lang.Boolean) false);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema9.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03397");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema schema10 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        schema6.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03398");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema17.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema24.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        schema28.setExternalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema32 = schema28.writeOnly((java.lang.Boolean) true);
        schema28.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test03399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03399");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = strComparableSchema16.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableSchema16.getDefault();
        java.math.BigDecimal bigDecimal19 = null;
        strComparableSchema16.setMaximum(bigDecimal19);
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.Comparable<java.lang.String>> strComparableList23 = schema22.getEnum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation17);
        org.junit.Assert.assertNull(strComparable18);
        org.junit.Assert.assertNull(schema22);
    }

    @Test
    public void test03400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03400");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema0.xml(xML37);
        strComparableSchema0.setName("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema42.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema42.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test03401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03401");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.maxProperties((java.lang.Integer) 100);
        schema39.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = schema39.getExternalDocs();
        schema39.setMinProperties((java.lang.Integer) 100);
        schema39.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation42);
    }

    @Test
    public void test03402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03402");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        strComparableSchema0.setPattern("no description");
        strComparableSchema0.setTitle("");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.type("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation26);
        strComparableSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03403");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String str2 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = strComparableSchema5.getExternalDocs();
        java.lang.Integer int7 = strComparableSchema5.getMinProperties();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.maxProperties((java.lang.Integer) (-1));
        strComparableSchema5.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema5.minLength((java.lang.Integer) 100);
        schema13.setMaxItems((java.lang.Integer) 10);
        schema4.setAdditionalProperties(schema13);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema13.externalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema19.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList25 = strComparableSchema24.getRequired();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema24.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal39 = strComparableSchema28.getMultipleOf();
        java.lang.String str40 = strComparableSchema28.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        strComparableSchema28.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.Integer int49 = strComparableSchema28.getMaxLength();
        strComparableSchema28.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema19.setDefault((java.lang.Object) strComparableSchema28);
        io.swagger.oas.models.media.Discriminator discriminator54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema28.discriminator(discriminator54);
        java.util.List<java.lang.String> strList56 = strComparableSchema28.getRequired();
        io.swagger.oas.models.media.Schema schema57 = schema18.required(strList56);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test03404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03404");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema23.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.externalDocs(externalDocumentation28);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03405");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema4.description("");
        java.lang.Integer int7 = schema4.getMaxItems();
        io.swagger.oas.models.media.Schema schema9 = schema4.writeOnly((java.lang.Boolean) false);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        schema9.setDiscriminator(discriminator12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema9.multipleOf(bigDecimal14);
        schema9.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = schema9.getExclusiveMinimum();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test03406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03406");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        java.lang.Boolean boolean30 = schema28.getDeprecated();
        io.swagger.oas.models.media.Schema schema32 = schema28.$ref("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema28.externalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = strComparableSchema35.getExternalDocs();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema35.minItems((java.lang.Integer) (-1));
        schema38.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema38.setExclusiveMinimum((java.lang.Boolean) false);
        schema38.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str45 = schema38.getFormat();
        io.swagger.oas.models.media.Discriminator discriminator46 = schema38.getDiscriminator();
        schema34.setDefault((java.lang.Object) discriminator46);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(discriminator46);
    }

    @Test
    public void test03407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03407");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.String str40 = strComparableSchema34.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional48 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema33.required((java.util.List<java.lang.String>) strList46);
        java.lang.String str51 = schema33.get$ref();
        io.swagger.oas.models.media.Schema schema53 = schema33.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema33.minimum(bigDecimal54);
        java.lang.Integer int56 = schema55.getMaxLength();
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        schema55.setDiscriminator(discriminator57);
        io.swagger.oas.models.media.Schema schema60 = schema55.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test03408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03408");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML12 = null;
        strComparableSchema0.setXml(xML12);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03409");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = schema3.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML22 = schema3.getXml();
        schema3.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(xML22);
    }

    @Test
    public void test03410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03410");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema21 = schema2.format("no description");
        java.lang.String str22 = schema2.getType();
        java.lang.String str23 = schema2.getFormat();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema2.minimum(bigDecimal24);
        schema25.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "no description" + "'", str23, "no description");
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03411");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema4.description("");
        java.lang.Integer int7 = schema4.getMaxItems();
        io.swagger.oas.models.media.Schema schema9 = schema4.writeOnly((java.lang.Boolean) false);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03412");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        java.lang.String str31 = strComparableSchema0.getFormat();
        io.swagger.oas.annotations.servers.Server server32 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray33 = new io.swagger.oas.annotations.servers.Server[] { server32 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional34 = io.swagger.jaxrs2.OperationParser.getServers(serverArray33);
        boolean boolean35 = serverListOptional34.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        java.lang.String str42 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema36.getNot();
        boolean boolean44 = serverListOptional34.equals((java.lang.Object) schema43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema43.multipleOf(bigDecimal45);
        io.swagger.oas.models.media.Schema schema48 = schema46.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int49 = schema46.getMaxItems();
        io.swagger.oas.models.media.Schema schema51 = schema46.minProperties((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) schema51);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(serverArray33);
        org.junit.Assert.assertNotNull(serverListOptional34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test03413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03413");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.addRequiredItem("");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setDescription("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = null;
        strComparableSchema29.setExtensions(strMap33);
        strComparableSchema29.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema29.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema38.exclusiveMaximum((java.lang.Boolean) true);
        schema38.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema38.deprecated((java.lang.Boolean) true);
        java.lang.Object obj45 = schema44.getExample();
        java.lang.Integer int46 = schema44.getMaxLength();
        io.swagger.oas.models.media.Schema schema47 = schema23.addProperties("*/*", schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema48.setDescription("hi!");
        strComparableSchema48.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema48.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = strComparableSchema48.getProperties();
        java.lang.Boolean boolean62 = strComparableSchema48.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable63 = strComparableSchema48.getDefault();
        java.lang.String str64 = strComparableSchema48.getFormat();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema48.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str69 = strComparableSchema68.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema68.not((io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = null;
        strComparableSchema70.setExtensions(strMap74);
        strComparableSchema70.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = strComparableSchema78.getExternalDocs();
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema78.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema78.uniqueItems((java.lang.Boolean) false);
        strComparableSchema70.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema78);
        schema66.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strComparableSchema70);
        io.swagger.oas.models.media.Schema schema86 = schema44.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema70);
        schema44.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(strComparable63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(externalDocumentation79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test03414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03414");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.lang.Boolean boolean20 = strComparableSchema5.getDeprecated();
        java.lang.Boolean boolean21 = strComparableSchema5.getWriteOnly();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test03415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03415");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema0.$ref("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        strComparableSchema57.setExtensions(strMap61);
        strComparableSchema57.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema57.minimum(bigDecimal65);
        io.swagger.oas.models.media.Schema schema68 = schema66.exclusiveMaximum((java.lang.Boolean) true);
        schema68.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema72 = schema68.maxLength((java.lang.Integer) 1);
        schema53.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) 1);
        io.swagger.oas.models.media.Schema schema75 = schema53.nullable((java.lang.Boolean) true);
        schema53.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test03416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03416");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.writeOnly((java.lang.Boolean) false);
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema3.additionalProperties(schema6);
        java.lang.String str11 = schema6.getPattern();
        io.swagger.oas.models.media.Schema schema13 = schema6.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema6.discriminator(discriminator14);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03417");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema10.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList37 = strComparableSchema36.getRequired();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema36.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema40.setDescription("hi!");
        strComparableSchema40.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal51 = strComparableSchema40.getMultipleOf();
        java.lang.String str52 = strComparableSchema40.get$ref();
        java.lang.String[] strArray57 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        strComparableSchema40.setRequired((java.util.List<java.lang.String>) strList58);
        java.lang.Integer int61 = strComparableSchema40.getMaxLength();
        strComparableSchema40.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema36.minimum(bigDecimal65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema67.setDescription("hi!");
        java.math.BigDecimal bigDecimal75 = null;
        strComparableSchema67.setMaximum(bigDecimal75);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema67.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList79 = strComparableSchema67.getRequired();
        io.swagger.oas.models.media.Schema schema80 = schema66.required(strList79);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema10.not(schema66);
        java.math.BigDecimal bigDecimal82 = schema81.getMultipleOf();
        schema81.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(bigDecimal82);
    }

    @Test
    public void test03418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03418");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.addRequiredItem("hi!");
        java.lang.Integer int12 = schema11.getMinLength();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema16 = schema11.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = schema16.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test03419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03419");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        schema2.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        strComparableSchema16.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setNullable((java.lang.Boolean) false);
        java.lang.String str29 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema16.name("");
        java.math.BigDecimal bigDecimal32 = null;
        strComparableSchema16.setMinimum(bigDecimal32);
        java.lang.Boolean boolean34 = strComparableSchema16.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema16.description("*/*");
        boolean boolean37 = schema2.equals((java.lang.Object) schema36);
        java.util.List<java.lang.String> strList38 = schema36.getRequired();
        schema36.setTitle("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(strList38);
    }

    @Test
    public void test03420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03420");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        schema23.setExternalDocs(externalDocumentation24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema23.readOnly((java.lang.Boolean) false);
        schema29.setName("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03421");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.xml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal26 = strComparableSchema15.getMultipleOf();
        java.math.BigDecimal bigDecimal27 = strComparableSchema15.getMultipleOf();
        strComparableSchema15.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = strComparableSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema31.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema36.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = strComparableSchema36.getProperties();
        io.swagger.oas.models.media.Schema schema50 = schema34.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema36.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal64 = strComparableSchema53.getMultipleOf();
        java.lang.String str65 = strComparableSchema53.get$ref();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema53.maximum(bigDecimal66);
        io.swagger.oas.models.media.Discriminator discriminator68 = strComparableSchema53.getDiscriminator();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema53.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = schema70.minProperties((java.lang.Integer) 0);
        schema52.setNot(schema70);
        strComparableSchema15.addExtension("", (java.lang.Object) schema52);
        java.lang.Integer int75 = schema52.getMaxItems();
        io.swagger.oas.models.media.Schema schema77 = schema52.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema78 = schema13.addProperties("#/components/schemas/no description", schema77);
        io.swagger.oas.models.media.Schema schema80 = schema77.maxLength((java.lang.Integer) 100);
        schema77.setMinProperties((java.lang.Integer) 100);
        java.lang.String str83 = schema77.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test03422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03422");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        java.lang.Integer int39 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.lang.String str46 = strComparableSchema40.get$ref();
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional54 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema40.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = schema38.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema38.xml(xML57);
        schema38.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema62 = schema38.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema38.setFormat("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Integer int65 = schema38.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int65);
    }

    @Test
    public void test03423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03423");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema8.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        strComparableSchema8.setExternalDocs(externalDocumentation20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema8.maximum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema24 = schema7.additionalProperties(schema23);
        io.swagger.oas.models.media.Schema schema26 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema26.nullable((java.lang.Boolean) true);
        java.lang.String str29 = schema26.getPattern();
        schema26.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test03424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03424");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.lang.String str26 = strComparableSchema14.get$ref();
        java.lang.String[] strArray31 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        strComparableSchema14.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = strComparableSchema14.getMaxLength();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema14.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema38 = schema2.addProperties("#/components/schemas/", schema37);
        schema37.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema37.$ref("*/*");
        java.lang.String str43 = schema42.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal56 = strComparableSchema45.getMultipleOf();
        java.lang.String str57 = strComparableSchema45.get$ref();
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema45.maximum(bigDecimal58);
        strComparableSchema45.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.properties(strMap63);
        java.lang.Boolean boolean65 = schema64.getUniqueItems();
        schema64.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal68 = null;
        schema64.setMultipleOf(bigDecimal68);
        io.swagger.oas.models.media.Schema schema71 = schema64.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = schema71.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = schema71.title("hi!");
        schema75.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean79 = strComparableSchema45.equals((java.lang.Object) (byte) 10);
        java.lang.Boolean boolean80 = strComparableSchema45.getReadOnly();
        strComparableSchema45.setPattern("");
        java.lang.Object obj83 = strComparableSchema45.getExample();
        io.swagger.oas.models.media.Schema schema84 = schema42.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema45);
        java.lang.String str85 = strComparableSchema45.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + true + "'", boolean80, true);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
    }

    @Test
    public void test03425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03425");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.math.BigDecimal bigDecimal6 = null;
        schema5.setMinimum(bigDecimal6);
        schema5.setName(",");
        schema5.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema13 = schema5.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj14 = schema5.getExample();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
    }

    @Test
    public void test03426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03426");
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(serverArrayOptional0);
    }

    @Test
    public void test03427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03427");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        java.lang.Boolean boolean14 = schema11.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList16 = strComparableSchema15.getRequired();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        strComparableSchema19.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal30 = strComparableSchema19.getMultipleOf();
        java.lang.String str31 = strComparableSchema19.get$ref();
        java.lang.String[] strArray36 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        strComparableSchema19.setRequired((java.util.List<java.lang.String>) strList37);
        java.lang.Integer int40 = strComparableSchema19.getMaxLength();
        strComparableSchema19.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema15.setDescription("");
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema15.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = strComparableSchema48.getExternalDocs();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema48.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema53.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = strComparableSchema53.getProperties();
        io.swagger.oas.models.media.Schema schema67 = schema51.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema53);
        java.lang.Boolean boolean68 = schema67.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator69 = null;
        schema67.setDiscriminator(discriminator69);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema67.getProperties();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema15.properties(strMap71);
        io.swagger.oas.models.media.Schema schema73 = schema11.properties(strMap71);
        io.swagger.oas.models.media.Schema schema75 = schema73.maxLength((java.lang.Integer) 0);
        schema75.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(externalDocumentation49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test03428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03428");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        strComparableSchema0.setProperties(strMap5);
        strComparableSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strComparableSchema0.getExtensions();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.maximum(bigDecimal12);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03429");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema2.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Object obj12 = schema11.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj12);
    }

    @Test
    public void test03430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03430");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema0.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str12 = schema9.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.discriminator(discriminator13);
        schema14.set$ref("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03431");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        boolean boolean2 = serverListOptional1.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList4 = serverListOptional1.orElse(serverList3);
        io.swagger.oas.models.servers.Server[] serverArray5 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList6 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList6, serverArray5);
        java.util.List<io.swagger.oas.models.servers.Server> serverList8 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList6);
        io.swagger.oas.annotations.servers.Server[] serverArray9 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray9);
        java.lang.String str11 = serverListOptional10.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray12 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray12);
        java.lang.String str14 = serverListOptional13.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray15 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray15);
        boolean boolean17 = serverListOptional16.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList18 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList19 = serverListOptional16.orElse(serverList18);
        io.swagger.oas.models.servers.Server[] serverArray20 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList21 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList21, serverArray20);
        java.util.List<io.swagger.oas.models.servers.Server> serverList23 = serverListOptional16.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList21);
        java.util.List<io.swagger.oas.models.servers.Server> serverList24 = serverListOptional13.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList21);
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional10.orElse(serverList24);
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional1.orElse(serverList24);
        boolean boolean27 = serverListOptional1.isPresent();
        java.lang.String str28 = serverListOptional1.toString();
        java.util.List<io.swagger.oas.models.servers.Server> serverList29 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList30 = serverListOptional1.orElse(serverList29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema31.setDescription("hi!");
        java.math.BigDecimal bigDecimal39 = null;
        strComparableSchema31.setMaximum(bigDecimal39);
        strComparableSchema31.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema31.readOnly((java.lang.Boolean) true);
        java.lang.String str45 = strComparableSchema31.getTitle();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema31.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = schema47.getNot();
        io.swagger.oas.models.media.Schema schema50 = schema48.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema48.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList53 = schema48.getRequired();
        boolean boolean54 = serverListOptional1.equals((java.lang.Object) strList53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.properties(strMap56);
        java.lang.Boolean boolean58 = schema57.getNullable();
        java.lang.String str59 = schema57.getType();
        schema57.setTitle("#/components/schemas/");
        schema57.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema57.addRequiredItem("*/*");
        java.lang.Object obj66 = schema57.getExample();
        java.math.BigDecimal bigDecimal67 = null;
        schema57.setMaximum(bigDecimal67);
        io.swagger.oas.models.media.Schema schema70 = schema57.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema57.xml(xML71);
        java.lang.String str73 = schema72.getFormat();
        boolean boolean74 = serverListOptional1.equals((java.lang.Object) str73);
        boolean boolean75 = serverListOptional1.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(serverList4);
        org.junit.Assert.assertNotNull(serverArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(serverList8);
        org.junit.Assert.assertNotNull(serverArray9);
        org.junit.Assert.assertNotNull(serverListOptional10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Optional.empty" + "'", str11, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray12);
        org.junit.Assert.assertNotNull(serverListOptional13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional.empty" + "'", str14, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray15);
        org.junit.Assert.assertNotNull(serverListOptional16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(serverList19);
        org.junit.Assert.assertNotNull(serverArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(serverList23);
        org.junit.Assert.assertNotNull(serverList24);
        org.junit.Assert.assertNotNull(serverList25);
        org.junit.Assert.assertNotNull(serverList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Optional.empty" + "'", str28, "Optional.empty");
        org.junit.Assert.assertNull(serverList30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "*/*" + "'", str45, "*/*");
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "#/components/schemas/" + "'", str73, "#/components/schemas/");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test03432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03432");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = schema3.deprecated((java.lang.Boolean) true);
        schema21.setMinProperties((java.lang.Integer) (-1));
        schema21.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema21.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML28 = schema27.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = strComparableSchema30.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = strComparableSchema35.getProperties();
        io.swagger.oas.models.media.Schema schema49 = schema33.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.lang.Boolean boolean50 = strComparableSchema35.getDeprecated();
        java.lang.Boolean boolean51 = strComparableSchema35.getUniqueItems();
        io.swagger.oas.models.media.Schema schema52 = schema27.addProperties("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema35.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(xML28);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test03433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03433");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema2.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema2.minLength((java.lang.Integer) (-1));
        schema14.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema17.title("");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema17.title("");
        java.lang.Integer int29 = schema28.getMaxLength();
        schema28.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator34 = schema33.getDiscriminator();
        schema14.setExample((java.lang.Object) discriminator34);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
    }

    @Test
    public void test03434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03434");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema0.getEnum();
        strComparableSchema0.setMinLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        strComparableSchema0.setDiscriminator(discriminator24);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setMaxLength((java.lang.Integer) 1);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test03435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03435");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.lang.String str26 = strComparableSchema14.get$ref();
        java.lang.String[] strArray31 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        strComparableSchema14.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = strComparableSchema14.getMaxLength();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema14.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema38 = schema2.addProperties("#/components/schemas/", schema37);
        io.swagger.oas.models.media.Schema schema40 = schema37.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03436");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema2.type("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.lang.String[] strArray34 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        strComparableSchema17.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = strComparableSchema17.getMaxLength();
        java.lang.Integer int39 = strComparableSchema17.getMaxProperties();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema17.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal53 = strComparableSchema42.getMultipleOf();
        java.lang.String str54 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema schema55 = schema41.example((java.lang.Object) strComparableSchema42);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema42.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator58 = strComparableSchema42.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema42.type("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = strComparableSchema42.getExtensions();
        java.lang.Integer int62 = strComparableSchema42.getMaxItems();
        schema2.setExample((java.lang.Object) strComparableSchema42);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(discriminator58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(int62);
    }

    @Test
    public void test03437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03437");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.setMinLength((java.lang.Integer) 100);
        java.lang.String str30 = strComparableSchema20.getDescription();
        schema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema20.maximum(bigDecimal32);
        java.lang.String str34 = strComparableSchema20.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test03438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03438");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.name("*/*");
        io.swagger.oas.models.media.Schema schema18 = schema16.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        strComparableSchema19.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal30 = strComparableSchema19.getMultipleOf();
        java.lang.String str31 = strComparableSchema19.get$ref();
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema19.maximum(bigDecimal32);
        io.swagger.oas.models.media.Discriminator discriminator34 = strComparableSchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema19.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema36.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.setMinLength((java.lang.Integer) 100);
        java.lang.String str49 = strComparableSchema39.getDescription();
        schema36.setNot((io.swagger.oas.models.media.Schema) strComparableSchema39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = null;
        strComparableSchema53.setExtensions(strMap57);
        strComparableSchema53.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int61 = strComparableSchema53.getMaxItems();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema53.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str65 = strComparableSchema64.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema64.not((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema64.setDescription("hi!");
        java.math.BigDecimal bigDecimal72 = null;
        strComparableSchema64.setMaximum(bigDecimal72);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema64.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList76 = strComparableSchema64.getRequired();
        io.swagger.oas.models.media.Schema schema77 = schema63.required(strList76);
        strComparableSchema39.setRequired(strList76);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema39.pattern("#/components/schemas/");
        java.math.BigDecimal bigDecimal81 = schema80.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema80.externalDocs(externalDocumentation82);
        io.swagger.oas.models.media.Schema schema84 = schema16.additionalProperties(schema83);
        java.lang.String str85 = schema84.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test03439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03439");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.annotations.servers.Server server10 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray11 = new io.swagger.oas.annotations.servers.Server[] { server10 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray11);
        boolean boolean13 = serverListOptional12.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.String str20 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.getNot();
        boolean boolean22 = serverListOptional12.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema21.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema2.not(schema24);
        io.swagger.oas.models.media.Schema schema27 = schema24.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema24.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema24.discriminator(discriminator30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        strComparableSchema32.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal43 = strComparableSchema32.getMultipleOf();
        java.lang.String str44 = strComparableSchema32.get$ref();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema32.maximum(bigDecimal45);
        io.swagger.oas.models.media.Discriminator discriminator47 = strComparableSchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema32.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.minimum(bigDecimal50);
        schema49.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator54 = null;
        schema49.setDiscriminator(discriminator54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList57 = strComparableSchema56.getRequired();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema56.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema56.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean62 = strComparableSchema56.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema56.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema65 = schema49.not(schema64);
        io.swagger.oas.models.media.Schema schema67 = schema49.maxItems((java.lang.Integer) 1);
        schema31.setNot(schema49);
        schema31.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertNotNull(serverListOptional12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test03440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03440");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        strComparableSchema14.setDefault((java.lang.Object) strComparableSchema17);
        java.lang.Boolean boolean22 = strComparableSchema17.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.lang.String[] strArray41 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        strComparableSchema24.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.Integer int45 = strComparableSchema24.getMaxLength();
        strComparableSchema24.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema24.$ref("#/components/schemas/");
        strComparableSchema24.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal52 = null;
        strComparableSchema24.setMinimum(bigDecimal52);
        strComparableSchema24.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema24.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.lang.Integer int59 = strComparableSchema17.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
    }

    @Test
    public void test03441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03441");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        java.util.List<java.lang.String> strList8 = strComparableSchema2.getRequired();
        strComparableSchema2.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj11 = strComparableSchema2.getExample();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema15.setNullable((java.lang.Boolean) false);
        java.lang.String str28 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema15.name("");
        io.swagger.oas.models.media.Schema schema31 = null;
        schema30.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = schema30.name(",");
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema34.getExtensions();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema34.multipleOf(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = schema34.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema34.addRequiredItem("#/components/schemas/no description");
        strComparableSchema2.setNot(schema41);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test03442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03442");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        schema11.setDeprecated((java.lang.Boolean) false);
        schema11.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema11.format("no description");
        schema11.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03443");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema25 = schema24.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema27 = schema24.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema27.type("*/*");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03444");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.uniqueItems((java.lang.Boolean) false);
        strComparableSchema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.String str17 = strComparableSchema2.getName();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema2.minimum(bigDecimal18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.multipleOf(bigDecimal20);
        schema21.setType("*/*");
        schema21.setTitle("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test03445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03445");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema15.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        java.lang.String str55 = strComparableSchema49.get$ref();
        java.lang.String[] strArray60 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional63 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema49.required((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema65 = schema48.required((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema66 = schema11.required((java.util.List<java.lang.String>) strList61);
        java.lang.String str67 = schema11.getType();
        io.swagger.oas.models.media.Schema schema69 = schema11.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean70 = schema69.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
    }

    @Test
    public void test03446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03446");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        schema9.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema9.example((java.lang.Object) "no description");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.maximum(bigDecimal18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03447");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maximum(bigDecimal18);
        io.swagger.oas.annotations.servers.Server[] serverArray20 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional22 = java.util.Optional.ofNullable(serverArray20);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        io.swagger.oas.annotations.servers.Server server25 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray26 = new io.swagger.oas.annotations.servers.Server[] { server25 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional27 = io.swagger.jaxrs2.OperationParser.getServers(serverArray26);
        boolean boolean28 = serverListOptional27.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.lang.String str35 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema29.getNot();
        boolean boolean37 = serverListOptional27.equals((java.lang.Object) schema36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema36.multipleOf(bigDecimal38);
        boolean boolean40 = serverListOptional24.equals((java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema schema41 = schema19.example((java.lang.Object) serverListOptional24);
        java.lang.String str42 = serverListOptional24.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(serverArray20);
        org.junit.Assert.assertNotNull(serverListOptional21);
        org.junit.Assert.assertNotNull(serverArrayOptional22);
        org.junit.Assert.assertNotNull(serverListOptional23);
        org.junit.Assert.assertNotNull(serverListOptional24);
        org.junit.Assert.assertNotNull(serverArray26);
        org.junit.Assert.assertNotNull(serverListOptional27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Optional.empty" + "'", str42, "Optional.empty");
    }

    @Test
    public void test03448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03448");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = strComparableSchema2.getDeprecated();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema2.getNot();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator12 = strComparableSchema2.getDiscriminator();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator12);
    }

    @Test
    public void test03449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03449");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.lang.String str16 = strComparableSchema0.getFormat();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str20 = schema19.getType();
        java.lang.Boolean boolean21 = schema19.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test03450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03450");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = null;
        strComparableSchema0.setExtensions(strMap10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema19.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList38 = schema37.getEnum();
        io.swagger.oas.models.media.Schema schema40 = schema37.type("*/*");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema0.addProperties("#/components/schemas/", schema37);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        schema41.setDiscriminator(discriminator42);
        io.swagger.oas.models.media.Schema schema45 = schema41.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strComparableList38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03451");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.setMinLength((java.lang.Integer) 100);
        java.lang.String str30 = strComparableSchema20.getDescription();
        schema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema20.maximum(bigDecimal32);
        schema33.setFormat("");
        java.lang.Boolean boolean36 = schema33.getNullable();
        io.swagger.oas.models.media.Schema schema38 = schema33.maxProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean39 = schema38.getNullable();
        schema38.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
    }

    @Test
    public void test03452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03452");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema11.getNullable();
        java.math.BigDecimal bigDecimal13 = null;
        schema11.setMaximum(bigDecimal13);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema11.maximum(bigDecimal15);
        java.math.BigDecimal bigDecimal17 = schema11.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test03453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03453");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.uniqueItems((java.lang.Boolean) false);
        strComparableSchema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.xml(xML29);
        strComparableSchema2.setNot(schema26);
        io.swagger.oas.models.media.Schema schema33 = schema26.name("*/*");
        java.lang.String str34 = schema26.toString();
        io.swagger.oas.models.media.Schema schema36 = schema26.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = schema26.format("no description");
        java.lang.Integer int39 = schema38.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str34, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test03454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03454");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema31.type("no description");
        java.lang.Object obj47 = schema31.getExample();
        io.swagger.oas.models.media.Schema schema49 = schema31.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(obj47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03455");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema schema16 = null;
        schema15.setNot(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema15.name(",");
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema19.multipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema19.addRequiredItem("#/components/schemas/no description");
        java.lang.String str27 = schema26.toString();
        java.lang.String str28 = schema26.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str27, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "," + "'", str28, ",");
    }

    @Test
    public void test03456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03456");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema16.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal32 = strComparableSchema21.getMultipleOf();
        java.lang.String str33 = strComparableSchema21.get$ref();
        java.lang.String[] strArray38 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        strComparableSchema21.setRequired((java.util.List<java.lang.String>) strList39);
        java.lang.Integer int42 = strComparableSchema21.getMaxLength();
        java.lang.Integer int43 = strComparableSchema21.getMaxProperties();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema21.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema46.setDescription("hi!");
        strComparableSchema46.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal57 = strComparableSchema46.getMultipleOf();
        java.lang.String str58 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema schema59 = schema45.example((java.lang.Object) strComparableSchema46);
        strComparableSchema16.setNot(schema59);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema16.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = schema13.addProperties("no description", (io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.annotations.links.Link[] linkArray64 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap65 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray64);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap66 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray64);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional67 = java.util.Optional.of(linkArray64);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap68 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray64);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap69 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray64);
        strComparableSchema16.setExample((java.lang.Object) strMap69);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema16.writeOnly((java.lang.Boolean) true);
        strComparableSchema16.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(bigDecimal57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(linkArray64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(linkArrayOptional67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test03457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03457");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.XML xML7 = schema2.getXml();
        io.swagger.oas.models.media.Schema schema9 = schema2.$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema11.setDescription("hi!");
        strComparableSchema11.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = strComparableSchema11.getProperties();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema11.description("*/*");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema11.maxLength((java.lang.Integer) 100);
        schema25.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        java.lang.Integer int29 = schema9.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test03458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03458");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema39.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.XML xML43 = schema41.getXml();
        java.lang.String str44 = schema41.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(xML43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "*/*" + "'", str44, "*/*");
    }

    @Test
    public void test03459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03459");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray28 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional29 = io.swagger.jaxrs2.OperationParser.getTags(strArray28);
        schema22.setExample((java.lang.Object) tagSetOptional29);
        java.lang.Object obj32 = null;
        schema22.addExtension("*/*", obj32);
        java.lang.String str34 = schema22.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.properties(strMap37);
        java.lang.Boolean boolean39 = schema38.getNullable();
        java.lang.String str40 = schema38.getType();
        schema38.setTitle("#/components/schemas/");
        java.lang.Boolean boolean43 = schema38.getUniqueItems();
        schema22.addExtension("Optional.empty", (java.lang.Object) boolean43);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema22.getExtensions();
        strComparableSchema0.setExtensions(strMap45);
        java.lang.Class<?> wildcardClass47 = strComparableSchema0.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional48 = java.util.Optional.ofNullable(wildcardClass47);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(tagSetOptional29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClassOptional48);
    }

    @Test
    public void test03460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03460");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal4 = null;
        strComparableSchema0.setMinimum(bigDecimal4);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03461");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String str2 = strComparableSchema0.getFormat();
        java.math.BigDecimal bigDecimal3 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(bigDecimal3);
    }

    @Test
    public void test03462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03462");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema0.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.maxLength((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList24 = strComparableSchema0.getRequired();
        java.util.List<java.lang.String> strList25 = strComparableSchema0.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(strList25);
    }

    @Test
    public void test03463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03463");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal12 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = strComparableSchema16.getExternalDocs();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema16.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema21.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = strComparableSchema21.getProperties();
        io.swagger.oas.models.media.Schema schema35 = schema19.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema21.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema38.maximum(bigDecimal51);
        io.swagger.oas.models.media.Discriminator discriminator53 = strComparableSchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema38.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema55.minProperties((java.lang.Integer) 0);
        schema37.setNot(schema55);
        strComparableSchema0.addExtension("", (java.lang.Object) schema37);
        java.lang.Integer int60 = schema37.getMaxItems();
        io.swagger.oas.models.media.Schema schema62 = schema37.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.xml(xML63);
        io.swagger.oas.models.media.Schema schema66 = schema64.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str67 = schema66.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(externalDocumentation17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test03464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03464");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema16.writeOnly((java.lang.Boolean) false);
        java.lang.String str19 = schema18.getDescription();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = schema18.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.properties(strMap23);
        java.lang.Boolean boolean25 = schema24.getUniqueItems();
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal28 = null;
        schema24.setMultipleOf(bigDecimal28);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema24.externalDocs(externalDocumentation30);
        io.swagger.oas.annotations.servers.Server server32 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray33 = new io.swagger.oas.annotations.servers.Server[] { server32 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional34 = io.swagger.jaxrs2.OperationParser.getServers(serverArray33);
        boolean boolean35 = serverListOptional34.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        java.lang.String str42 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema36.getNot();
        boolean boolean44 = serverListOptional34.equals((java.lang.Object) schema43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema43.multipleOf(bigDecimal45);
        io.swagger.oas.models.media.Schema schema47 = schema24.not(schema46);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = schema46.getExternalDocs();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList49 = schema46.getEnum();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema46.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = schema18.addProperties("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema51);
        java.lang.Boolean boolean53 = schema18.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(serverArray33);
        org.junit.Assert.assertNotNull(serverListOptional34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(externalDocumentation48);
        org.junit.Assert.assertNull(strComparableList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
    }

    @Test
    public void test03465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03465");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema2.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema2.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema2.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema2.minProperties((java.lang.Integer) (-1));
        schema16.setMaxLength((java.lang.Integer) 100);
        java.lang.Integer int19 = schema16.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test03466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03466");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema schema16 = null;
        schema15.setNot(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema15.name(",");
        schema15.setMinItems((java.lang.Integer) 100);
        schema15.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03467");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        java.lang.Boolean boolean27 = strComparableSchema2.getExclusiveMinimum();
        strComparableSchema2.setDeprecated((java.lang.Boolean) true);
        strComparableSchema2.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test03468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03468");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema0.setMinimum(bigDecimal25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        strComparableSchema0.setProperties(strMap27);
        java.lang.Integer int29 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.nullable((java.lang.Boolean) true);
        schema31.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema34.xml(xML40);
        schema41.setMaxItems((java.lang.Integer) (-1));
        schema41.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal46 = schema41.getMinimum();
        io.swagger.oas.models.media.Schema schema47 = schema31.not(schema41);
        io.swagger.oas.models.media.Schema schema49 = schema31.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03469");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional3 = java.util.Optional.of(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional7 = java.util.Optional.ofNullable(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        org.junit.Assert.assertNotNull(linkArray0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(linkArrayOptional3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(linkArrayOptional7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test03470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03470");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.xml(xML6);
        java.lang.String str8 = strComparableSchema0.getFormat();
        strComparableSchema0.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema16 = schema12.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema18 = schema16.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema16.addRequiredItem("#/components/schemas/no description");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03471");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema0.getEnum();
        strComparableSchema0.setMinLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        strComparableSchema0.setDiscriminator(discriminator24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = strComparableSchema26.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema26.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema31.setDescription("hi!");
        strComparableSchema31.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema31.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = strComparableSchema31.getProperties();
        io.swagger.oas.models.media.Schema schema45 = schema29.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        boolean boolean47 = strComparableSchema0.equals((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema schema49 = schema45.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema51 = schema45.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.lang.String str58 = strComparableSchema52.get$ref();
        java.lang.String[] strArray63 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional66 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema52.required((java.util.List<java.lang.String>) strList64);
        strComparableSchema52.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.not((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema70.setDescription("hi!");
        java.math.BigDecimal bigDecimal78 = null;
        strComparableSchema70.setMaximum(bigDecimal78);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema70.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList82 = strComparableSchema70.getRequired();
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema52.required(strList82);
        java.lang.Integer int84 = schema83.getMaxProperties();
        schema83.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema88 = schema83.deprecated((java.lang.Boolean) true);
        java.lang.Integer int89 = schema88.getMaxProperties();
        io.swagger.oas.models.media.Schema schema90 = schema45.not(schema88);
        io.swagger.oas.models.media.XML xML91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema90.xml(xML91);
        schema92.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test03472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03472");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.XML xML6 = null;
        strComparableSchema0.setXml(xML6);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.discriminator(discriminator8);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str12 = strComparableSchema0.getTitle();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema16.minLength((java.lang.Integer) 0);
        schema18.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03473");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.discriminator(discriminator36);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.lang.Boolean boolean46 = strComparableSchema40.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        strComparableSchema40.setProperties(strMap47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.properties(strMap50);
        java.lang.Boolean boolean52 = schema51.getUniqueItems();
        schema51.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal55 = null;
        schema51.setMultipleOf(bigDecimal55);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema51.externalDocs(externalDocumentation57);
        java.lang.Boolean boolean59 = schema51.getNullable();
        strComparableSchema40.setNot(schema51);
        schema39.setNot(schema51);
        schema39.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean59);
    }

    @Test
    public void test03474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03474");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema17.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        strComparableSchema20.setExternalDocs(externalDocumentation32);
        io.swagger.oas.models.media.XML xML34 = strComparableSchema20.getXml();
        io.swagger.oas.models.media.XML xML35 = strComparableSchema20.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        java.lang.String str42 = strComparableSchema36.get$ref();
        java.lang.String[] strArray47 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional50 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList48);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema36.required((java.util.List<java.lang.String>) strList48);
        strComparableSchema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        java.math.BigDecimal bigDecimal62 = null;
        strComparableSchema54.setMaximum(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema54.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList66 = strComparableSchema54.getRequired();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema36.required(strList66);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema20.required(strList66);
        io.swagger.oas.models.media.Schema schema69 = schema17.required(strList66);
        java.lang.Integer int70 = schema17.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(xML35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int70);
    }

    @Test
    public void test03475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03475");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str59 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema58.setDescription("hi!");
        strComparableSchema58.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema58);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema48.externalDocs(externalDocumentation71);
        strComparableSchema4.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        java.lang.String str74 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema4.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = schema76.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test03476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03476");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean42 = schema41.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema43.maxItems((java.lang.Integer) 10);
        schema46.setMinItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean49 = schema46.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema51 = schema46.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema41.not(schema46);
        java.math.BigDecimal bigDecimal53 = schema41.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
    }

    @Test
    public void test03477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03477");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.discriminator(discriminator29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema32.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03478");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        schema13.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema18 = schema13.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        schema13.setExternalDocs(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03479");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxItems();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test03480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03480");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.XML xML6 = null;
        strComparableSchema0.setXml(xML6);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.String str16 = strComparableSchema10.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional24 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema10.required((java.util.List<java.lang.String>) strList22);
        strComparableSchema10.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        java.math.BigDecimal bigDecimal36 = null;
        strComparableSchema28.setMaximum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema28.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList40 = strComparableSchema28.getRequired();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema10.required(strList40);
        io.swagger.oas.models.media.Schema schema42 = schema9.example((java.lang.Object) schema41);
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass45 = schema9.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test03481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03481");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        strComparableSchema0.setProperties(strMap5);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.format(",");
        io.swagger.oas.models.media.Schema schema10 = schema8.readOnly((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = schema8.getEnum();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.maximum(bigDecimal12);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strComparableList11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03482");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        schema46.setExtensions(strMap61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema46.maximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema46.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str69 = strComparableSchema68.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema68.not((io.swagger.oas.models.media.Schema) strComparableSchema70);
        strComparableSchema68.setDescription("hi!");
        strComparableSchema68.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal79 = strComparableSchema68.getMultipleOf();
        java.lang.String str80 = strComparableSchema68.get$ref();
        strComparableSchema68.setDeprecated((java.lang.Boolean) false);
        java.lang.String str83 = strComparableSchema68.getType();
        io.swagger.oas.models.media.Schema schema84 = schema46.addProperties(",", (io.swagger.oas.models.media.Schema) strComparableSchema68);
        io.swagger.oas.models.media.XML xML85 = strComparableSchema68.getXml();
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema68.maximum(bigDecimal86);
        java.lang.Integer int88 = schema87.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(bigDecimal79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(xML85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(int88);
    }

    @Test
    public void test03483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03483");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema24.setExternalDocs(externalDocumentation25);
        schema24.setPattern("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = schema24.getExternalDocs();
        schema24.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation29);
    }

    @Test
    public void test03484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03484");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = strComparableSchema6.getProperties();
        java.lang.Boolean boolean20 = strComparableSchema6.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable21 = strComparableSchema6.getDefault();
        java.lang.String str22 = strComparableSchema6.getFormat();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema6.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        schema5.setExtensions(strMap25);
        io.swagger.oas.models.media.Schema schema28 = schema5.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        java.lang.Boolean boolean30 = schema28.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(strComparable21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test03485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03485");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        strComparableSchema0.setProperties(strMap3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        schema8.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema8.setMinimum(bigDecimal13);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03486");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        schema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03487");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.maximum(bigDecimal14);
        java.lang.String str16 = schema15.getName();
        schema15.setType("hi!");
        java.lang.Object obj19 = schema15.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema15.externalDocs(externalDocumentation20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.multipleOf(bigDecimal22);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03488");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Integer int3 = schema2.getMaxLength();
        schema2.setWriteOnly((java.lang.Boolean) false);
        schema2.setFormat("*/*");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.minimum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema2.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = null;
        strComparableSchema14.setExtensions(strMap18);
        strComparableSchema14.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema14.minimum(bigDecimal22);
        schema23.set$ref("no description");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.maximum(bigDecimal26);
        io.swagger.oas.models.media.Discriminator discriminator28 = schema27.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("");
        io.swagger.oas.models.media.Schema schema32 = schema30.title("*/*");
        io.swagger.oas.models.media.Schema schema34 = schema30.description("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema35.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        strComparableSchema35.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema35.title("Optional.empty");
        schema50.setReadOnly((java.lang.Boolean) true);
        java.lang.String str53 = schema50.getName();
        schema50.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.properties(strMap57);
        java.lang.Boolean boolean59 = schema58.getUniqueItems();
        schema58.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal62 = null;
        schema58.setMultipleOf(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = schema58.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema67 = schema65.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = schema65.title("hi!");
        java.lang.String str70 = schema69.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = strComparableSchema71.getExternalDocs();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema71.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str77 = strComparableSchema76.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema78.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema76.not((io.swagger.oas.models.media.Schema) strComparableSchema78);
        strComparableSchema76.setDescription("hi!");
        strComparableSchema76.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema76.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap89 = strComparableSchema76.getProperties();
        io.swagger.oas.models.media.Schema schema90 = schema74.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema76);
        java.lang.Boolean boolean91 = schema90.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator92 = null;
        schema90.setDiscriminator(discriminator92);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap94 = schema90.getProperties();
        io.swagger.oas.models.media.Schema schema95 = schema69.properties(strMap94);
        schema50.setProperties(strMap94);
        io.swagger.oas.models.media.Schema schema97 = schema30.properties(strMap94);
        io.swagger.oas.models.media.Schema schema98 = schema11.properties(strMap94);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(externalDocumentation72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(boolean91);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test03489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03489");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.lang.String str16 = strComparableSchema0.getFormat();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.addRequiredItem("*/*");
        schema19.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03490");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.XML xML7 = schema2.getXml();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.minimum(bigDecimal8);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.title(",");
        java.lang.String str14 = schema11.getName();
        schema11.setTitle("no description");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test03491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03491");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.math.BigDecimal bigDecimal6 = null;
        schema5.setMinimum(bigDecimal6);
        schema5.setName(",");
        schema5.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema5.pattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList14 = schema13.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strComparableList14);
    }

    @Test
    public void test03492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03492");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setUniqueItems((java.lang.Boolean) true);
        java.lang.Integer int11 = schema6.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test03493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03493");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal14 = null;
        strComparableSchema0.setMaximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema17.set$ref("#/components/schemas/");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03494");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.title("no description");
        java.lang.Comparable<java.lang.String> strComparable25 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        strComparableSchema26.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str40 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema26.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema26.getNot();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.Boolean boolean45 = schema44.getReadOnly();
        io.swagger.oas.models.media.Schema schema47 = schema44.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema49 = schema47.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str59 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str65 = strComparableSchema64.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema64.not((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema64.setDescription("hi!");
        strComparableSchema64.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema58.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema64);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema58);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema58.name("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str80 = strComparableSchema79.get$ref();
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema79.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema84 = schema82.addRequiredItem("hi!");
        schema78.setExample((java.lang.Object) "hi!");
        schema51.setDefault((java.lang.Object) "hi!");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strComparable25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test03495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03495");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.name("hi!");
        java.lang.Object obj27 = strComparableSchema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = strComparableSchema6.getProperties();
        java.lang.Boolean boolean29 = strComparableSchema6.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray39 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional40 = io.swagger.jaxrs2.OperationParser.getTags(strArray39);
        schema33.setExample((java.lang.Object) tagSetOptional40);
        java.math.BigDecimal bigDecimal42 = schema33.getMinimum();
        java.math.BigDecimal bigDecimal43 = schema33.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal56 = strComparableSchema45.getMultipleOf();
        java.lang.String str57 = strComparableSchema45.get$ref();
        java.lang.String[] strArray62 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        strComparableSchema45.setRequired((java.util.List<java.lang.String>) strList63);
        java.lang.Integer int66 = strComparableSchema45.getMaxLength();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema45.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema69 = schema33.addProperties("#/components/schemas/", schema68);
        schema68.setNullable((java.lang.Boolean) false);
        strComparableSchema6.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema74 = schema68.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(tagSetOptional40);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03496");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setMinItems((java.lang.Integer) 1);
        java.lang.String str17 = strComparableSchema14.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        strComparableSchema18.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema18.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = strComparableSchema18.getProperties();
        java.lang.Boolean boolean32 = strComparableSchema18.getReadOnly();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema18.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        schema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList37 = schema13.getEnum();
        schema13.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strComparableList37);
    }

    @Test
    public void test03497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03497");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = schema16.getMaximum();
        io.swagger.oas.models.media.Schema schema19 = schema16.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setDescription("hi!");
        java.lang.String str22 = schema16.getTitle();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test03498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03498");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.type("#/components/schemas/");
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.xml(xML11);
        java.lang.String str13 = schema12.getType();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema12.setExternalDocs(externalDocumentation14);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#/components/schemas/" + "'", str13, "#/components/schemas/");
    }

    @Test
    public void test03499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03499");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        java.lang.Boolean boolean46 = schema45.getNullable();
        schema45.setMinProperties((java.lang.Integer) 1);
        java.lang.String str49 = schema45.getDescription();
        schema45.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test03500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03500");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.nullable((java.lang.Boolean) true);
        schema26.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        schema26.set$ref(",");
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.discriminator(discriminator31);
        schema26.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema26.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema26.title("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }
}

