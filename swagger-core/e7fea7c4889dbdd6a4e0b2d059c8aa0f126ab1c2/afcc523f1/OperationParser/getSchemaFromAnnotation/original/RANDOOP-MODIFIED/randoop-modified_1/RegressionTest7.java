import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest7 {

    public static boolean debug = false;

    @Test
    public void test03501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03501");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = strComparableSchema2.getMaxItems();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema2.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema13.setMaximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema13.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList25 = strComparableSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema26 = schema12.required(strList25);
        io.swagger.oas.models.media.XML xML27 = null;
        schema12.setXml(xML27);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema12.multipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema12.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema12.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap37);
    }

    @Test
    public void test03502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03502");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema52.setDescription("hi!");
        strComparableSchema52.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal63 = strComparableSchema52.getMultipleOf();
        java.lang.String str64 = strComparableSchema52.get$ref();
        java.lang.String[] strArray69 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        strComparableSchema52.setRequired((java.util.List<java.lang.String>) strList70);
        java.lang.Integer int73 = strComparableSchema52.getMaxLength();
        java.lang.Integer int74 = strComparableSchema52.getMaxProperties();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema52.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str78 = strComparableSchema77.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema79.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema77.not((io.swagger.oas.models.media.Schema) strComparableSchema79);
        strComparableSchema77.setDescription("hi!");
        strComparableSchema77.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal88 = strComparableSchema77.getMultipleOf();
        java.lang.String str89 = strComparableSchema77.get$ref();
        io.swagger.oas.models.media.Schema schema90 = schema76.example((java.lang.Object) strComparableSchema77);
        io.swagger.oas.models.media.Schema schema92 = strComparableSchema77.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema51.setDefault((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(bigDecimal88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test03503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03503");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        io.swagger.oas.models.media.Schema schema14 = schema11.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = strComparableSchema16.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        strComparableSchema16.setProperties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema16.properties(strMap21);
        io.swagger.oas.models.media.Schema schema23 = schema14.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema24.setNullable((java.lang.Boolean) false);
        java.lang.String str37 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema24.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = strComparableSchema41.getExternalDocs();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema41.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema46.setDescription("hi!");
        strComparableSchema46.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema46.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = strComparableSchema46.getProperties();
        io.swagger.oas.models.media.Schema schema60 = schema44.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.lang.Boolean boolean61 = strComparableSchema46.getDeprecated();
        io.swagger.oas.models.media.Schema schema62 = schema39.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = schema62.getProperties();
        io.swagger.oas.models.media.Schema schema64 = schema14.properties(strMap63);
        java.math.BigDecimal bigDecimal65 = null;
        schema64.setMultipleOf(bigDecimal65);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test03504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03504");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        java.lang.Boolean boolean10 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator11 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator12 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.description("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema0.setMaximum(bigDecimal17);
        java.lang.Boolean boolean19 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType(",");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test03505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03505");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 10);
        java.util.List<java.lang.String> strList9 = schema8.getRequired();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema8.setProperties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema8.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal14 = null;
        schema8.setMaximum(bigDecimal14);
        schema8.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03506");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        strComparableSchema0.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema9.setExtensions(strMap13);
        strComparableSchema9.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int17 = strComparableSchema9.getMaxItems();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema20.setMaximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList32 = strComparableSchema20.getRequired();
        io.swagger.oas.models.media.Schema schema33 = schema19.required(strList32);
        strComparableSchema0.setRequired(strList32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = strComparableSchema35.getProperties();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema35.maxLength((java.lang.Integer) 0);
        strComparableSchema0.setExample((java.lang.Object) schema47);
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray50 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces51 = null;
        javax.ws.rs.Produces produces52 = null;
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional54 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray50, produces51, produces52, components53);
        javax.ws.rs.Produces produces55 = null;
        javax.ws.rs.Produces produces56 = null;
        io.swagger.oas.models.Components components57 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional58 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray50, produces55, produces56, components57);
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional59 = java.util.Optional.of(apiResponseArray50);
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional60 = java.util.Optional.of(apiResponseArray50);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray50, produces61, produces62, components63);
        javax.ws.rs.Produces produces65 = null;
        javax.ws.rs.Produces produces66 = null;
        io.swagger.oas.models.Components components67 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional68 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray50, produces65, produces66, components67);
        javax.ws.rs.Produces produces69 = null;
        javax.ws.rs.Produces produces70 = null;
        io.swagger.oas.models.Components components71 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional72 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray50, produces69, produces70, components71);
        javax.ws.rs.Produces produces73 = null;
        javax.ws.rs.Produces produces74 = null;
        io.swagger.oas.models.Components components75 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional76 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray50, produces73, produces74, components75);
        javax.ws.rs.Produces produces77 = null;
        javax.ws.rs.Produces produces78 = null;
        io.swagger.oas.models.Components components79 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional80 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray50, produces77, produces78, components79);
        strComparableSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) produces78);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(apiResponseArray50);
        org.junit.Assert.assertNotNull(apiResponsesOptional54);
        org.junit.Assert.assertNotNull(apiResponsesOptional58);
        org.junit.Assert.assertNotNull(apiResponseArrayOptional59);
        org.junit.Assert.assertNotNull(apiResponseArrayOptional60);
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        org.junit.Assert.assertNotNull(apiResponsesOptional68);
        org.junit.Assert.assertNotNull(apiResponsesOptional72);
        org.junit.Assert.assertNotNull(apiResponsesOptional76);
        org.junit.Assert.assertNotNull(apiResponsesOptional80);
    }

    @Test
    public void test03507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03507");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.writeOnly((java.lang.Boolean) false);
        schema44.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema44.title("#/components/schemas/");
        schema48.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.xml(xML51);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = schema48.getExtensions();
        io.swagger.oas.models.media.Schema schema54 = schema9.additionalProperties(schema48);
        java.math.BigDecimal bigDecimal55 = schema9.getMultipleOf();
        java.lang.Integer int56 = schema9.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(int56);
    }

    @Test
    public void test03508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03508");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03509");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String str2 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.title("#/components/schemas/");
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal7 = strComparableSchema0.getMultipleOf();
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional8 = java.util.Optional.empty();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.example((java.lang.Object) strCollectionOptional8);
        java.lang.String str10 = schema9.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(strCollectionOptional8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test03510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03510");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.writeOnly((java.lang.Boolean) false);
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema3.additionalProperties(schema6);
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int13 = schema12.getMinProperties();
        java.math.BigDecimal bigDecimal14 = null;
        schema12.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema12.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = schema12.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test03511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03511");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.name("hi!");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema6.type("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.lang.Boolean boolean35 = strComparableSchema29.getReadOnly();
        strComparableSchema29.setType("");
        strComparableSchema29.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema29.minimum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.not(schema42);
        schema41.setUniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        schema41.setProperties(strMap46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema50.setMaxLength((java.lang.Integer) 0);
        strComparableSchema50.setMaxProperties((java.lang.Integer) 100);
        schema41.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = strComparableSchema59.getExternalDocs();
        java.lang.Integer int61 = strComparableSchema59.getMaxLength();
        java.lang.Integer int62 = strComparableSchema59.getMaxProperties();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = strComparableSchema65.getExternalDocs();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema65.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str71 = strComparableSchema70.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema72.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema70.not((io.swagger.oas.models.media.Schema) strComparableSchema72);
        strComparableSchema70.setDescription("hi!");
        strComparableSchema70.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema70.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = strComparableSchema70.getProperties();
        io.swagger.oas.models.media.Schema schema84 = schema68.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.Boolean boolean85 = schema84.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator86 = null;
        schema84.setDiscriminator(discriminator86);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema84.getProperties();
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema59.properties(strMap88);
        io.swagger.oas.models.media.Schema schema90 = schema41.properties(strMap88);
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema6.properties(strMap88);
        io.swagger.oas.models.media.XML xML92 = null;
        io.swagger.oas.models.media.Schema schema93 = strComparableSchema6.xml(xML92);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(externalDocumentation60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test03512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03512");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        schema46.setExtensions(strMap61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema46.maximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema46.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator67 = schema66.getDiscriminator();
        io.swagger.oas.models.media.Schema schema69 = schema66.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(discriminator67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test03513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03513");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean5 = serverListOptional4.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList6 = serverListOptional4.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test03514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03514");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema11.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean14 = schema11.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema16 = schema11.example((java.lang.Object) '4');
        schema11.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03515");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        schema9.set$ref("#/components/schemas/");
        schema9.setMaxLength((java.lang.Integer) 10);
        schema9.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03516");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxProperties((java.lang.Integer) (-1));
        java.lang.String str29 = schema26.getDescription();
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        schema26.setDiscriminator(discriminator30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        strComparableSchema32.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema32.title("");
        schema41.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema41.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema26.setNot(schema41);
        java.lang.Integer int47 = schema41.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int47);
    }

    @Test
    public void test03517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03517");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean3 = strComparableSchema0.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator4 = null;
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.discriminator(discriminator4);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema5);
    }

    @Test
    public void test03518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03518");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList25 = schema24.getEnum();
        io.swagger.oas.models.media.Schema schema27 = schema24.type("*/*");
        schema24.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema24.xml(xML30);
        schema24.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strComparableList25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test03519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03519");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.XML xML6 = null;
        strComparableSchema0.setXml(xML6);
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        strComparableSchema0.setDiscriminator(discriminator10);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.xml(xML12);
        java.lang.String str14 = strComparableSchema0.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test03520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03520");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.XML xML45 = schema44.getXml();
        java.lang.String str46 = schema44.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal58 = strComparableSchema47.getMultipleOf();
        strComparableSchema47.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str61 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema47.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema47.getNot();
        strComparableSchema47.setName("Optional.empty");
        java.math.BigDecimal bigDecimal67 = strComparableSchema47.getMaximum();
        io.swagger.oas.models.media.Schema schema68 = schema44.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str70 = strComparableSchema69.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema71.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema69.not((io.swagger.oas.models.media.Schema) strComparableSchema71);
        java.lang.String str75 = strComparableSchema69.get$ref();
        strComparableSchema69.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema69.type("#/components/schemas/");
        io.swagger.oas.models.media.XML xML80 = null;
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema69.xml(xML80);
        java.lang.String str82 = schema81.getType();
        strComparableSchema47.setAdditionalProperties(schema81);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(xML45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "#/components/schemas/" + "'", str82, "#/components/schemas/");
    }

    @Test
    public void test03521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03521");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema5.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal33 = strComparableSchema22.getMultipleOf();
        java.lang.String str34 = strComparableSchema22.get$ref();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema22.maximum(bigDecimal35);
        io.swagger.oas.models.media.Discriminator discriminator37 = strComparableSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema22.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema39.minProperties((java.lang.Integer) 0);
        schema21.setNot(schema39);
        io.swagger.oas.models.media.Schema schema44 = schema21.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema44.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema44.maxItems((java.lang.Integer) 10);
        schema48.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test03522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03522");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.addRequiredItem("");
        java.lang.Object obj18 = strComparableSchema0.getExample();
        io.swagger.oas.annotations.media.Content[] contentArray19 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional21 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional23 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional25 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional27 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional29 = io.swagger.jaxrs2.OperationParser.getContents(contentArray19, components28);
        strComparableSchema0.setDefault((java.lang.Object) contentOptional29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema32.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNotNull(contentArray19);
        org.junit.Assert.assertNotNull(contentOptional21);
        org.junit.Assert.assertNotNull(contentOptional23);
        org.junit.Assert.assertNotNull(contentOptional25);
        org.junit.Assert.assertNotNull(contentOptional27);
        org.junit.Assert.assertNotNull(contentOptional29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03523");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal52 = strComparableSchema41.getMultipleOf();
        java.lang.String str53 = strComparableSchema41.get$ref();
        java.lang.String[] strArray58 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        strComparableSchema41.setRequired((java.util.List<java.lang.String>) strList59);
        java.lang.Integer int62 = strComparableSchema41.getMaxLength();
        java.lang.Integer int63 = strComparableSchema41.getMaxProperties();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema41.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        strComparableSchema66.setDescription("hi!");
        strComparableSchema66.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal77 = strComparableSchema66.getMultipleOf();
        java.lang.String str78 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema schema79 = schema65.example((java.lang.Object) strComparableSchema66);
        io.swagger.oas.models.media.Schema schema81 = schema79.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML82 = schema81.getXml();
        io.swagger.oas.models.media.Schema schema84 = schema81.uniqueItems((java.lang.Boolean) true);
        schema40.setNot(schema84);
        io.swagger.oas.models.media.Discriminator discriminator86 = schema40.getDiscriminator();
        java.lang.String str87 = schema40.getName();
        io.swagger.oas.models.media.Schema schema89 = schema40.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(bigDecimal77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(xML82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(discriminator86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test03524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03524");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int23 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str26 = strComparableSchema0.getTitle();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test03525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03525");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        java.util.Optional<io.swagger.oas.annotations.Parameter[]> parameterArrayOptional8 = java.util.Optional.ofNullable(parameterArray1);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components9);
        org.junit.Assert.assertNotNull(parameterArray1);
        org.junit.Assert.assertNotNull(parameterListOptional3);
        org.junit.Assert.assertNotNull(parameterListOptional5);
        org.junit.Assert.assertNotNull(parameterListOptional7);
        org.junit.Assert.assertNotNull(parameterArrayOptional8);
        org.junit.Assert.assertNotNull(parameterListOptional10);
    }

    @Test
    public void test03526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03526");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema16.getNot();
        io.swagger.oas.models.media.Schema schema19 = schema17.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema17.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList22 = schema17.getRequired();
        io.swagger.oas.models.media.XML xML23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema17.xml(xML23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Discriminator discriminator27 = schema26.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        strComparableSchema40.setDescription("hi!");
        strComparableSchema40.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema34.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema40);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.lang.Boolean boolean53 = strComparableSchema30.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema55.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema30.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = schema67.pattern("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = schema69.getExtensions();
        schema26.setExtensions(strMap70);
        schema26.setPattern("#/components/schemas/");
        java.lang.Boolean boolean74 = schema26.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(boolean74);
    }

    @Test
    public void test03527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03527");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema36.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.lang.String str46 = strComparableSchema40.get$ref();
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional54 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema40.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = schema36.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Discriminator discriminator57 = schema56.getDiscriminator();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList58 = schema56.getEnum();
        java.lang.Boolean boolean59 = schema56.getUniqueItems();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList60 = schema56.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(discriminator57);
        org.junit.Assert.assertNull(strComparableList58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNull(strComparableList60);
    }

    @Test
    public void test03528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03528");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList12 = strComparableSchema0.getRequired();
        strComparableSchema0.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03529");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = strComparableSchema16.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable18 = strComparableSchema16.getDefault();
        java.math.BigDecimal bigDecimal19 = null;
        strComparableSchema16.setMaximum(bigDecimal19);
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.Boolean boolean22 = strComparableSchema16.getReadOnly();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema16.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation17);
        org.junit.Assert.assertNull(strComparable18);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03530");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema21 = schema2.maxProperties((java.lang.Integer) 1);
        schema21.setNullable((java.lang.Boolean) true);
        schema21.setWriteOnly((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList26 = schema21.getRequired();
        schema21.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strList26);
    }

    @Test
    public void test03531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03531");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        strComparableSchema14.setDefault((java.lang.Object) strComparableSchema17);
        java.util.List<java.lang.String> strList22 = strComparableSchema14.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.lang.String str29 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema23.getNot();
        java.lang.Boolean boolean31 = strComparableSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        io.swagger.oas.models.media.XML xML33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.xml(xML33);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03532");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        schema2.setDeprecated((java.lang.Boolean) false);
        java.lang.Integer int16 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.multipleOf(bigDecimal43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema45.setNullable((java.lang.Boolean) false);
        java.lang.String str58 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema45.name("");
        io.swagger.oas.models.media.Schema schema62 = schema60.minProperties((java.lang.Integer) 10);
        boolean boolean63 = schema44.equals((java.lang.Object) schema60);
        schema60.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema66 = schema2.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema60);
        io.swagger.oas.models.media.Discriminator discriminator67 = schema60.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(discriminator67);
    }

    @Test
    public void test03533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03533");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        schema13.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema18 = schema13.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema19.setDescription("hi!");
        strComparableSchema19.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema19.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        strComparableSchema19.setExternalDocs(externalDocumentation31);
        io.swagger.oas.models.media.XML xML33 = strComparableSchema19.getXml();
        io.swagger.oas.models.media.XML xML34 = strComparableSchema19.getXml();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = strComparableSchema19.getProperties();
        strComparableSchema19.setMinItems((java.lang.Integer) 10);
        schema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema39.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema39.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.not((io.swagger.oas.models.media.Schema) strComparableSchema62);
        strComparableSchema60.setDescription("hi!");
        strComparableSchema60.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema60.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator73 = strComparableSchema60.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap75 = null;
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema74.properties(strMap75);
        java.lang.Boolean boolean77 = schema76.getUniqueItems();
        schema76.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal80 = null;
        schema76.setMultipleOf(bigDecimal80);
        io.swagger.oas.models.media.Schema schema83 = schema76.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema60.example((java.lang.Object) schema83);
        io.swagger.oas.models.media.Schema schema85 = schema58.addProperties("*/*", (io.swagger.oas.models.media.Schema) strComparableSchema60);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema60.addRequiredItem("Optional.empty");
        schema13.setExample((java.lang.Object) strComparableSchema60);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNull(xML33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(discriminator73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test03534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03534");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String[] strArray3 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList4);
        strComparableSchema0.setPattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema11.setDescription("hi!");
        strComparableSchema11.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal22 = strComparableSchema11.getMultipleOf();
        java.lang.String str23 = strComparableSchema11.get$ref();
        java.lang.String[] strArray28 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        strComparableSchema11.setRequired((java.util.List<java.lang.String>) strList29);
        java.lang.Integer int32 = strComparableSchema11.getMaxLength();
        java.lang.Integer int33 = strComparableSchema11.getMaxProperties();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema11.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal47 = strComparableSchema36.getMultipleOf();
        java.lang.String str48 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema schema49 = schema35.example((java.lang.Object) strComparableSchema36);
        java.lang.Integer int50 = schema49.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        java.lang.String str57 = strComparableSchema51.get$ref();
        java.lang.String[] strArray62 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional65 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList63);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema51.required((java.util.List<java.lang.String>) strList63);
        io.swagger.oas.models.media.Schema schema67 = schema49.required((java.util.List<java.lang.String>) strList63);
        io.swagger.oas.models.media.XML xML68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema49.xml(xML68);
        io.swagger.oas.models.media.Schema schema71 = schema49.writeOnly((java.lang.Boolean) false);
        schema10.setAdditionalProperties(schema49);
        schema49.setTitle("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 10\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test03535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03535");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        schema13.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = schema13.maxLength((java.lang.Integer) 100);
        schema13.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema13.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03536");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        schema13.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = schema13.maxLength((java.lang.Integer) 100);
        java.lang.Boolean boolean18 = schema17.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema20 = schema17.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator21 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema22.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema30.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator43 = strComparableSchema30.getDiscriminator();
        strComparableSchema22.addExtension("Optional.empty", (java.lang.Object) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema22.uniqueItems((java.lang.Boolean) true);
        java.lang.String str47 = strComparableSchema22.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema48.setDescription("hi!");
        strComparableSchema48.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal59 = strComparableSchema48.getMultipleOf();
        java.lang.String str60 = strComparableSchema48.get$ref();
        java.lang.String[] strArray65 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        strComparableSchema48.setRequired((java.util.List<java.lang.String>) strList66);
        java.lang.Integer int69 = strComparableSchema48.getMaxLength();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema48.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema48.getNot();
        io.swagger.oas.models.media.Schema schema74 = schema72.uniqueItems((java.lang.Boolean) true);
        strComparableSchema22.setAdditionalProperties(schema74);
        java.lang.Boolean boolean76 = schema74.getNullable();
        io.swagger.oas.models.media.Schema schema78 = schema74.writeOnly((java.lang.Boolean) false);
        boolean boolean79 = schema17.equals((java.lang.Object) schema74);
        schema17.setMinItems((java.lang.Integer) 0);
        java.lang.String str82 = schema17.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str47, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test03537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03537");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        java.lang.Boolean boolean27 = strComparableSchema2.getExclusiveMinimum();
        strComparableSchema2.setDeprecated((java.lang.Boolean) true);
        java.lang.Object obj30 = strComparableSchema2.getExample();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema2.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test03538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03538");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema26.maximum(bigDecimal39);
        strComparableSchema26.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema26.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setExample((java.lang.Object) strComparableSchema26);
        java.math.BigDecimal bigDecimal46 = null;
        schema23.setMinimum(bigDecimal46);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = schema23.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap48);
    }

    @Test
    public void test03539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03539");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML41 = schema40.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema49.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema45.externalDocs(externalDocumentation68);
        java.lang.Object obj70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.example(obj70);
        java.lang.Object obj72 = schema69.getExample();
        io.swagger.oas.models.media.Schema schema74 = schema69.deprecated((java.lang.Boolean) true);
        schema40.addExtension("#/components/schemas/", (java.lang.Object) schema74);
        java.lang.Integer int76 = schema40.getMaxItems();
        io.swagger.oas.models.media.Schema schema77 = schema40.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema79 = schema40.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema81 = schema40.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str82 = schema81.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test03540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03540");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema10.nullable((java.lang.Boolean) true);
        java.lang.String str34 = strComparableSchema10.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema41.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema10.xml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema62.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = schema64.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(externalDocumentation65);
    }

    @Test
    public void test03541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03541");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        strComparableSchema25.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test03542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03542");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.description("*/*");
        schema12.setMaxItems((java.lang.Integer) 10);
        schema12.setMaxLength((java.lang.Integer) (-1));
        schema12.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema12.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema12.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03543");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = strComparableSchema35.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable37 = strComparableSchema35.getDefault();
        boolean boolean39 = strComparableSchema35.equals((java.lang.Object) (short) 10);
        schema33.setDefault((java.lang.Object) boolean39);
        java.lang.Class<?> wildcardClass41 = schema33.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional42 = java.util.Optional.of(wildcardClass41);
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional43 = java.util.Optional.of((java.lang.reflect.GenericDeclaration) wildcardClass41);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(externalDocumentation36);
        org.junit.Assert.assertNull(strComparable37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClassOptional42);
        org.junit.Assert.assertNotNull(genericDeclarationOptional43);
    }

    @Test
    public void test03544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03544");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.setMinLength((java.lang.Integer) 100);
        java.lang.String str30 = strComparableSchema20.getDescription();
        schema17.setNot((io.swagger.oas.models.media.Schema) strComparableSchema20);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema20.name("");
        java.lang.Integer int34 = strComparableSchema20.getMaxProperties();
        java.lang.String str35 = strComparableSchema20.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test03545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03545");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        java.lang.String str16 = schema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema20.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<java.lang.CharSequence> charSequenceSchema25 = new io.swagger.oas.models.media.Schema<java.lang.CharSequence>();
        io.swagger.oas.models.media.Schema schema26 = schema22.additionalProperties((io.swagger.oas.models.media.Schema) charSequenceSchema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema28.title("");
        java.lang.Boolean boolean38 = strComparableSchema28.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema28.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator40 = strComparableSchema28.getDiscriminator();
        java.lang.String str41 = strComparableSchema28.getPattern();
        schema22.addExtension("#/components/schemas/", (java.lang.Object) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema49.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.lang.Boolean boolean68 = strComparableSchema45.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema45.nullable((java.lang.Boolean) false);
        strComparableSchema28.setDefault((java.lang.Object) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema28.exclusiveMinimum((java.lang.Boolean) true);
        schema15.setDefault((java.lang.Object) strComparableSchema28);
        schema15.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#/components/schemas/no description" + "'", str16, "#/components/schemas/no description");
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test03546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03546");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional3 = java.util.Optional.of(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        org.junit.Assert.assertNotNull(linkArray0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(linkArrayOptional3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test03547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03547");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        java.math.BigDecimal bigDecimal42 = null;
        strComparableSchema34.setMaximum(bigDecimal42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema44.setDescription("hi!");
        strComparableSchema44.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal55 = strComparableSchema44.getMultipleOf();
        java.lang.String str56 = strComparableSchema44.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        strComparableSchema44.setRequired((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema34.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema34.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean68 = schema67.getDeprecated();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema0.additionalProperties(schema67);
        schema69.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test03548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03548");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        strComparableSchema0.setName("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation20);
        java.lang.Boolean boolean22 = strComparableSchema0.getUniqueItems();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.minimum(bigDecimal23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = strComparableSchema0.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
    }

    @Test
    public void test03549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03549");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = strComparableSchema0.getProperties();
        strComparableSchema0.setMinItems((java.lang.Integer) 0);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList18 = strComparableSchema0.getEnum();
        java.math.BigDecimal bigDecimal19 = null;
        strComparableSchema0.setMultipleOf(bigDecimal19);
        strComparableSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strComparableList18);
    }

    @Test
    public void test03550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03550");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMaxLength();
        java.lang.Integer int3 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema6.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema11.setDescription("hi!");
        strComparableSchema11.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema11.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = strComparableSchema11.getProperties();
        io.swagger.oas.models.media.Schema schema25 = schema9.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.lang.Boolean boolean26 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        schema25.setDiscriminator(discriminator27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema25.getProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator33 = strComparableSchema0.getDiscriminator();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
    }

    @Test
    public void test03551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03551");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean13 = strComparableSchema0.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test03552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03552");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema44.minProperties((java.lang.Integer) 100);
        java.lang.Integer int47 = schema44.getMinItems();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema44.multipleOf(bigDecimal48);
        schema44.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03553");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        schema13.setFormat("Optional.empty");
        schema13.setType("hi!");
        java.util.List<java.lang.String> strList19 = schema13.getRequired();
        io.swagger.oas.models.media.Schema schema21 = schema13.minLength((java.lang.Integer) 1);
        java.lang.Integer int22 = schema21.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test03554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03554");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema9.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema9.discriminator(discriminator16);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03555");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.XML xML7 = schema2.getXml();
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.minimum(bigDecimal8);
        io.swagger.oas.models.media.XML xML10 = schema2.getXml();
        io.swagger.oas.models.media.Schema schema12 = schema2.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema2.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(xML10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03556");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        java.lang.String str11 = schema10.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        java.lang.String[] strArray15 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        strComparableSchema12.setRequired((java.util.List<java.lang.String>) strList16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema19.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = schema22.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema12.not(schema24);
        io.swagger.oas.models.media.Schema schema26 = schema10.example((java.lang.Object) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema28 = schema10.addRequiredItem("Optional.empty");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.maximum(bigDecimal29);
        io.swagger.oas.annotations.servers.Server server31 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray32 = new io.swagger.oas.annotations.servers.Server[] { server31 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional33 = io.swagger.jaxrs2.OperationParser.getServers(serverArray32);
        boolean boolean34 = serverListOptional33.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        java.lang.String str41 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema35.getNot();
        boolean boolean43 = serverListOptional33.equals((java.lang.Object) schema42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.properties(strMap44);
        io.swagger.oas.models.media.Schema schema47 = schema42.uniqueItems((java.lang.Boolean) false);
        schema47.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema51 = schema47.deprecated((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList52 = schema47.getEnum();
        java.lang.String[] strArray57 = new java.lang.String[] { ",", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        io.swagger.oas.models.media.Schema schema60 = schema47.required((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema schema61 = schema28.required((java.util.List<java.lang.String>) strList58);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(serverArray32);
        org.junit.Assert.assertNotNull(serverListOptional33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strComparableList52);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test03557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03557");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.type("no description");
        schema30.setTitle("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03558");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray22);
        schema16.setExample((java.lang.Object) tagSetOptional23);
        java.math.BigDecimal bigDecimal25 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema schema26 = schema13.not(schema16);
        java.lang.Boolean boolean27 = schema13.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        strComparableSchema34.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema28.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema28.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema28.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema28.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema51.title("hi!");
        io.swagger.oas.models.media.Schema schema55 = schema51.name("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setDefault((java.lang.Object) "class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test03559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03559");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema15.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        java.lang.String str55 = strComparableSchema49.get$ref();
        java.lang.String[] strArray60 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional63 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema49.required((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema65 = schema48.required((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema66 = schema11.required((java.util.List<java.lang.String>) strList61);
        schema66.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = schema66.addRequiredItem("*/*");
        java.lang.Boolean boolean71 = schema66.getUniqueItems();
        java.lang.Boolean boolean72 = schema66.getExclusiveMaximum();
        schema66.setType("#/components/schemas/no description");
        io.swagger.oas.models.media.Discriminator discriminator75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema66.discriminator(discriminator75);
        schema76.setFormat("hi!");
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test03560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03560");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema2.properties(strMap26);
        strComparableSchema2.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Comparable<java.lang.String> strComparable30 = strComparableSchema2.getDefault();
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        strComparableSchema2.setDiscriminator(discriminator31);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strComparable30);
    }

    @Test
    public void test03561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03561");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = schema2.getMinItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = schema2.getProperties();
        java.lang.Integer int12 = schema2.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(int12);
    }

    @Test
    public void test03562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03562");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        schema16.setDiscriminator(discriminator19);
        java.lang.Boolean boolean21 = schema16.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test03563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03563");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.multipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema13.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean16 = schema15.getReadOnly();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.maximum(bigDecimal17);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03564");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray23 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        schema17.setExample((java.lang.Object) tagSetOptional24);
        java.lang.Object obj27 = null;
        schema17.addExtension("*/*", obj27);
        java.lang.String str29 = schema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        java.lang.Boolean boolean38 = schema33.getUniqueItems();
        schema17.addExtension("Optional.empty", (java.lang.Object) boolean38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema17.getExtensions();
        schema10.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema schema43 = schema10.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str57 = strComparableSchema56.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.not((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema56.setDescription("hi!");
        strComparableSchema56.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema50.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema56);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema46.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str71 = strComparableSchema46.getTitle();
        strComparableSchema46.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema46.minProperties((java.lang.Integer) 1);
        schema43.setExample((java.lang.Object) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test03565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03565");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        schema11.setDeprecated((java.lang.Boolean) false);
        schema11.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema11.format("no description");
        io.swagger.oas.models.media.Schema schema21 = schema19.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema21.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema24.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = strComparableSchema24.getProperties();
        java.lang.Boolean boolean38 = strComparableSchema24.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable39 = strComparableSchema24.getDefault();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema24.addRequiredItem("");
        java.lang.Object obj42 = strComparableSchema24.getExample();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema24.nullable((java.lang.Boolean) false);
        schema21.setDefault((java.lang.Object) false);
        java.lang.Integer int46 = schema21.getMinItems();
        schema21.setUniqueItems((java.lang.Boolean) false);
        java.lang.Comparable<java.lang.String> strComparable49 = null;
        schema21.addEnumItemObject(strComparable49);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(strComparable39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int46);
    }

    @Test
    public void test03566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03566");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.minLength((java.lang.Integer) 0);
        java.lang.Boolean boolean14 = schema13.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test03567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03567");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema25.setNullable((java.lang.Boolean) true);
        strComparableSchema25.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int42 = strComparableSchema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema34.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        java.math.BigDecimal bigDecimal53 = null;
        strComparableSchema45.setMaximum(bigDecimal53);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema45.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList57 = strComparableSchema45.getRequired();
        io.swagger.oas.models.media.Schema schema58 = schema44.required(strList57);
        strComparableSchema25.setRequired(strList57);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional60 = java.util.Optional.of(strList57);
        strComparableSchema0.setRequired(strList57);
        java.lang.Boolean boolean62 = strComparableSchema0.getWriteOnly();
        java.lang.String str63 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        strComparableSchema0.setTitle("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strListOptional60);
        org.junit.Assert.assertEquals("'" + boolean62 + "' != '" + false + "'", boolean62, false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test03568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03568");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj27 = strComparableSchema2.getExample();
        java.lang.Boolean boolean28 = strComparableSchema2.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray65 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        schema59.setExample((java.lang.Object) tagSetOptional66);
        java.lang.Object obj69 = null;
        schema59.addExtension("*/*", obj69);
        java.lang.String str71 = schema59.getDescription();
        java.lang.String str72 = schema59.getType();
        java.lang.String str73 = schema59.getName();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema31.addProperties("*/*", schema59);
        java.math.BigDecimal bigDecimal75 = schema74.getMultipleOf();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema2.additionalProperties(schema74);
        io.swagger.oas.models.media.Schema schema78 = schema74.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema80 = schema78.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean81 = schema78.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertEquals("'" + boolean81 + "' != '" + true + "'", boolean81, true);
    }

    @Test
    public void test03569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03569");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema21 = schema2.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = schema2.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema2.minimum(bigDecimal24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema29.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
    }

    @Test
    public void test03570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03570");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.properties(strMap33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        strComparableSchema10.setExternalDocs(externalDocumentation35);
        java.lang.Object obj37 = strComparableSchema10.getExample();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema10.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema39.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str57 = strComparableSchema56.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.not((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema56.setDescription("hi!");
        strComparableSchema56.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema50.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema56);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema46.externalDocs(externalDocumentation69);
        java.lang.Object obj71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.example(obj71);
        java.lang.Object obj73 = schema70.getExample();
        io.swagger.oas.models.media.Schema schema75 = schema70.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema76 = schema41.additionalProperties(schema70);
        java.math.BigDecimal bigDecimal77 = schema70.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(obj73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(bigDecimal77);
    }

    @Test
    public void test03571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03571");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema46 = schema44.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = schema44.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema50 = schema44.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test03572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03572");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema15.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        java.lang.String str55 = strComparableSchema49.get$ref();
        java.lang.String[] strArray60 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional63 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema49.required((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema65 = schema48.required((java.util.List<java.lang.String>) strList61);
        io.swagger.oas.models.media.Schema schema66 = schema11.required((java.util.List<java.lang.String>) strList61);
        schema66.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = schema66.addRequiredItem("*/*");
        java.math.BigDecimal bigDecimal71 = schema70.getMinimum();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(bigDecimal71);
    }

    @Test
    public void test03573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03573");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema0.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test03574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03574");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.String str25 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.Integer int47 = strComparableSchema26.getMaxLength();
        java.lang.Integer int48 = strComparableSchema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema26.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema51.setDescription("hi!");
        strComparableSchema51.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal62 = strComparableSchema51.getMultipleOf();
        java.lang.String str63 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema schema64 = schema50.example((java.lang.Object) strComparableSchema51);
        java.lang.Integer int65 = schema64.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        java.lang.String str72 = strComparableSchema66.get$ref();
        java.lang.String[] strArray77 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional80 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema66.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema82 = schema64.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema0.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean86 = schema85.getNullable();
        schema85.setDescription(",");
        java.lang.String str89 = schema85.getName();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str25, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(boolean86);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test03575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03575");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema2.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema13.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema15.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        strComparableSchema15.setExternalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema15.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema15.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema39.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        java.lang.Boolean boolean58 = strComparableSchema35.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList67 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean68 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean69 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean70 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean71 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean72 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean73 = strComparableList67.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean74 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean75 = strComparableList67.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema35.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList67);
        schema32.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList67);
        io.swagger.oas.models.media.Schema schema79 = schema32.exclusiveMaximum((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList80 = schema79.getEnum();
        schema13.setEnum(strComparableList80);
        io.swagger.oas.models.media.Discriminator discriminator82 = null;
        schema13.setDiscriminator(discriminator82);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema84 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = null;
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema84.properties(strMap85);
        java.lang.Boolean boolean87 = schema86.getUniqueItems();
        schema86.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj90 = schema86.getExample();
        io.swagger.oas.models.media.Schema schema91 = schema13.not(schema86);
        schema86.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strComparableList80);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(boolean87);
        org.junit.Assert.assertNull(obj90);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test03576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03576");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        java.lang.Object obj11 = schema2.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        schema2.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03577");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        strComparableSchema4.setDescription("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema4.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema4.externalDocs(externalDocumentation33);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03578");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema2.properties(strMap26);
        strComparableSchema2.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int30 = strComparableSchema2.getMinProperties();
        strComparableSchema2.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema2.xml(xML33);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema2.maxProperties((java.lang.Integer) 10);
        strComparableSchema2.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03579");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema5.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal33 = strComparableSchema22.getMultipleOf();
        java.lang.String str34 = strComparableSchema22.get$ref();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema22.maximum(bigDecimal35);
        io.swagger.oas.models.media.Discriminator discriminator37 = strComparableSchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema22.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema39.minProperties((java.lang.Integer) 0);
        schema21.setNot(schema39);
        io.swagger.oas.models.media.Schema schema44 = schema21.deprecated((java.lang.Boolean) false);
        java.lang.String str45 = schema21.getPattern();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test03580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03580");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        java.lang.Integer int12 = strComparableSchema10.getMinProperties();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema14.description("");
        java.lang.Integer int17 = schema14.getMaxItems();
        io.swagger.oas.models.media.Schema schema19 = schema14.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = schema19.getMultipleOf();
        schema2.setAdditionalProperties(schema19);
        io.swagger.oas.models.media.Schema schema23 = schema2.addRequiredItem(",");
        java.lang.Integer int24 = schema2.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema2.setExternalDocs(externalDocumentation25);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test03581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03581");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        java.lang.String str15 = schema2.getType();
        io.swagger.oas.models.media.Schema schema17 = schema2.minProperties((java.lang.Integer) 0);
        schema2.setMaxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean20 = schema2.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean20 + "' != '" + false + "'", boolean20, false);
    }

    @Test
    public void test03582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03582");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.lang.Boolean boolean11 = strComparableSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.properties(strMap15);
        strComparableSchema14.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str19 = strComparableSchema14.getFormat();
        io.swagger.oas.models.media.XML xML20 = null;
        strComparableSchema14.setXml(xML20);
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema14.discriminator(discriminator22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema26.deprecated((java.lang.Boolean) false);
        strComparableSchema14.setDefault((java.lang.Object) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal41 = strComparableSchema30.getMultipleOf();
        java.lang.String str42 = strComparableSchema30.get$ref();
        strComparableSchema30.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema30.description("hi!");
        java.lang.Boolean boolean47 = strComparableSchema30.getNullable();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema30.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema49.getAdditionalProperties();
        boolean boolean51 = strComparableSchema14.equals((java.lang.Object) schema49);
        java.math.BigDecimal bigDecimal52 = strComparableSchema14.getMaximum();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        schema53.setNullable((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList56 = schema53.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strList56);
    }

    @Test
    public void test03583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03583");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.xml(xML12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal26 = strComparableSchema15.getMultipleOf();
        java.math.BigDecimal bigDecimal27 = strComparableSchema15.getMultipleOf();
        strComparableSchema15.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = strComparableSchema31.getExternalDocs();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema31.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema36.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = strComparableSchema36.getProperties();
        io.swagger.oas.models.media.Schema schema50 = schema34.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema36);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema36.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal64 = strComparableSchema53.getMultipleOf();
        java.lang.String str65 = strComparableSchema53.get$ref();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema53.maximum(bigDecimal66);
        io.swagger.oas.models.media.Discriminator discriminator68 = strComparableSchema53.getDiscriminator();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema53.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = schema70.minProperties((java.lang.Integer) 0);
        schema52.setNot(schema70);
        strComparableSchema15.addExtension("", (java.lang.Object) schema52);
        java.lang.Integer int75 = schema52.getMaxItems();
        io.swagger.oas.models.media.Schema schema77 = schema52.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema78 = schema13.addProperties("#/components/schemas/no description", schema77);
        io.swagger.oas.models.media.Schema schema80 = schema77.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema82 = schema80.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML83 = null;
        schema80.setXml(xML83);
        io.swagger.oas.models.media.Schema schema85 = schema80.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema80.externalDocs(externalDocumentation86);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test03584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03584");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        java.lang.Integer int35 = strComparableSchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema schema51 = schema37.example((java.lang.Object) strComparableSchema38);
        boolean boolean52 = strComparableSchema0.equals((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML54 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema55 = schema53.xml(xML54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(schema53);
    }

    @Test
    public void test03585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03585");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.writeOnly((java.lang.Boolean) false);
        schema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema16.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML21 = null;
        schema20.setXml(xML21);
        io.swagger.oas.models.media.Schema schema24 = schema20.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.externalDocs(externalDocumentation25);
        java.lang.Boolean boolean27 = schema20.getWriteOnly();
        schema13.setNot(schema20);
        schema13.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
    }

    @Test
    public void test03586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03586");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema15.setNullable((java.lang.Boolean) false);
        java.lang.String str28 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema15.name("");
        java.math.BigDecimal bigDecimal31 = null;
        strComparableSchema15.setMinimum(bigDecimal31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema15.maximum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema34.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema38 = schema34.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList39 = schema38.getEnum();
        schema14.setAdditionalProperties(schema38);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strComparableList39);
    }

    @Test
    public void test03587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03587");
        java.util.Optional<java.util.List<java.lang.String>> strListOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strListOptional0);
    }

    @Test
    public void test03588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03588");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = schema3.deprecated((java.lang.Boolean) true);
        schema21.setMinProperties((java.lang.Integer) (-1));
        schema21.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema21.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList28 = schema21.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = strComparableSchema29.getExternalDocs();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema29.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        strComparableSchema34.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema34.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = strComparableSchema34.getProperties();
        io.swagger.oas.models.media.Schema schema48 = schema32.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.List<java.lang.String> strList49 = strComparableSchema34.getRequired();
        java.math.BigDecimal bigDecimal50 = strComparableSchema34.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema52.setDescription("hi!");
        strComparableSchema52.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal63 = strComparableSchema52.getMultipleOf();
        java.lang.String str64 = strComparableSchema52.get$ref();
        java.lang.String[] strArray69 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        strComparableSchema52.setRequired((java.util.List<java.lang.String>) strList70);
        java.lang.Integer int73 = strComparableSchema52.getMaxLength();
        strComparableSchema52.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema52.$ref("#/components/schemas/");
        strComparableSchema52.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal80 = null;
        strComparableSchema52.setMinimum(bigDecimal80);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema52.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema52.maxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema85.multipleOf(bigDecimal86);
        io.swagger.oas.models.media.Schema schema89 = schema85.maxItems((java.lang.Integer) (-1));
        strComparableSchema34.addExtension("Optional.empty", (java.lang.Object) schema85);
        schema21.setDefault((java.lang.Object) "Optional.empty");
        java.math.BigDecimal bigDecimal92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema21.maximum(bigDecimal92);
        java.lang.Integer int94 = schema93.getMaxItems();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strComparableList28);
        org.junit.Assert.assertNull(externalDocumentation30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(int94);
    }

    @Test
    public void test03589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03589");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.addRequiredItem("*/*");
        java.lang.String str4 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema6.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema8.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03590");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.pattern("");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema2.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.properties(strMap17);
        java.lang.Boolean boolean19 = schema18.getUniqueItems();
        schema18.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        schema18.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema25.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema25.title("hi!");
        schema29.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema33.setDescription("hi!");
        java.math.BigDecimal bigDecimal41 = null;
        strComparableSchema33.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema33.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema33.multipleOf(bigDecimal45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        strComparableSchema33.setProperties(strMap47);
        schema29.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema schema51 = schema29.readOnly((java.lang.Boolean) false);
        schema29.setMaxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal54 = null;
        schema29.setMaximum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema29.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal58 = schema57.getMultipleOf();
        schema15.setAdditionalProperties(schema57);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal58);
    }

    @Test
    public void test03591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03591");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.xml(xML52);
        io.swagger.oas.models.media.Schema schema55 = schema51.name("");
        io.swagger.oas.models.media.Schema schema57 = schema51.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML58 = schema51.getXml();
        io.swagger.oas.models.media.Schema schema60 = schema51.maxProperties((java.lang.Integer) 100);
        schema51.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(xML58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test03592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03592");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.getAdditionalProperties();
        java.lang.String str19 = strComparableSchema0.getType();
        java.math.BigDecimal bigDecimal20 = strComparableSchema0.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test03593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03593");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal16 = strComparableSchema5.getMultipleOf();
        java.lang.String str17 = strComparableSchema5.get$ref();
        java.lang.String[] strArray22 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        strComparableSchema5.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.Integer int26 = strComparableSchema5.getMaxLength();
        java.lang.Integer int27 = strComparableSchema5.getMaxProperties();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal41 = strComparableSchema30.getMultipleOf();
        java.lang.String str42 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema schema43 = schema29.example((java.lang.Object) strComparableSchema30);
        strComparableSchema0.setNot(schema43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str47 = strComparableSchema0.getPattern();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema0.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = schema49.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        java.lang.String str58 = strComparableSchema52.get$ref();
        java.lang.String[] strArray63 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional66 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema52.required((java.util.List<java.lang.String>) strList64);
        java.math.BigDecimal bigDecimal68 = schema67.getMinimum();
        schema67.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema72 = schema67.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean73 = schema67.getUniqueItems();
        io.swagger.oas.models.media.Schema schema74 = schema51.example((java.lang.Object) boolean73);
        schema51.setDescription("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(bigDecimal68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03594");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = strComparableSchema25.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable27 = strComparableSchema25.getDefault();
        java.lang.Integer int28 = strComparableSchema25.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        strComparableSchema25.setExtensions(strMap31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema25.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema2.not(schema36);
        java.math.BigDecimal bigDecimal38 = schema37.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema39.setDescription("hi!");
        strComparableSchema39.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema39.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        strComparableSchema39.setExternalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema39.format("");
        schema54.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str57 = schema54.getName();
        io.swagger.oas.models.media.Schema schema59 = schema54.maxItems((java.lang.Integer) (-1));
        schema37.setNot(schema59);
        io.swagger.oas.models.media.Schema schema62 = schema59.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        schema59.setExternalDocs(externalDocumentation63);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNull(strComparable27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test03595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03595");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        java.lang.Boolean boolean4 = schema2.getDeprecated();
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.minimum(bigDecimal5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.maximum(bigDecimal7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.properties(strMap10);
        java.lang.Boolean boolean12 = schema11.getNullable();
        java.lang.String str13 = schema11.getType();
        schema11.setTitle("#/components/schemas/");
        schema11.setFormat("#/components/schemas/");
        schema11.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema11.maximum(bigDecimal20);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList31 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean34 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean35 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean36 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean37 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean38 = strComparableList31.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean39 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList31);
        schema8.setDefault((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema44 = schema21.pattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema46 = schema44.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test03596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03596");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.Boolean boolean4 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema6 = schema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema2.description("");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 10);
        java.lang.String str11 = schema10.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = strComparableSchema12.getExternalDocs();
        java.lang.Integer int14 = strComparableSchema12.getMaxLength();
        java.math.BigDecimal bigDecimal15 = null;
        strComparableSchema12.setMaximum(bigDecimal15);
        java.lang.String str17 = strComparableSchema12.getDescription();
        io.swagger.oas.models.media.Schema schema18 = schema10.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.lang.String str19 = schema18.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test03597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03597");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.description("*/*");
        schema12.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema15.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema31.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.multipleOf(bigDecimal50);
        io.swagger.oas.models.media.Schema schema52 = schema24.not(schema51);
        io.swagger.oas.models.media.Schema schema54 = schema51.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        schema51.setDiscriminator(discriminator55);
        io.swagger.oas.models.media.Schema schema57 = schema12.not(schema51);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = schema51.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(externalDocumentation58);
    }

    @Test
    public void test03598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03598");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.lang.Integer int25 = strComparableSchema0.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema26.title("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema0.not(schema35);
        io.swagger.oas.models.media.Schema schema40 = schema35.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03599");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema2.format("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.discriminator(discriminator12);
        schema13.setDescription(",");
        io.swagger.oas.models.media.Schema schema17 = schema13.readOnly((java.lang.Boolean) true);
        java.lang.Object obj18 = null;
        boolean boolean19 = schema17.equals(obj18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03600");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        java.math.BigDecimal bigDecimal46 = null;
        schema45.setMultipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema45.exclusiveMaximum((java.lang.Boolean) false);
        schema45.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema45.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03601");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = schema33.minLength((java.lang.Integer) 1);
        schema35.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test03602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03602");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.XML xML25 = null;
        strComparableSchema6.setXml(xML25);
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional27 = java.util.Optional.of(strComparableSchema6);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema6.getNot();
        java.lang.Integer int29 = schema28.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test03603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03603");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema13.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj16 = schema15.getExample();
        schema15.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test03604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03604");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = schema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.not(schema7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.properties(strMap10);
        java.lang.Boolean boolean12 = schema11.getUniqueItems();
        java.lang.Boolean boolean13 = schema11.getDeprecated();
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.properties(strMap17);
        java.lang.Boolean boolean19 = schema18.getUniqueItems();
        schema18.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj22 = schema18.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        schema18.setExternalDocs(externalDocumentation23);
        java.lang.String str25 = schema18.toString();
        io.swagger.oas.models.media.XML xML26 = null;
        schema18.setXml(xML26);
        schema15.setAdditionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema30 = schema18.maxItems((java.lang.Integer) 0);
        io.swagger.oas.annotations.servers.Server[] serverArray31 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional32 = io.swagger.jaxrs2.OperationParser.getServers(serverArray31);
        java.lang.String str33 = serverListOptional32.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray34 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional35 = io.swagger.jaxrs2.OperationParser.getServers(serverArray34);
        java.lang.String str36 = serverListOptional35.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray37 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional38 = io.swagger.jaxrs2.OperationParser.getServers(serverArray37);
        boolean boolean39 = serverListOptional38.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList40 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList41 = serverListOptional38.orElse(serverList40);
        io.swagger.oas.models.servers.Server[] serverArray42 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList43 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList43, serverArray42);
        java.util.List<io.swagger.oas.models.servers.Server> serverList45 = serverListOptional38.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList43);
        java.util.List<io.swagger.oas.models.servers.Server> serverList46 = serverListOptional35.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList43);
        java.util.List<io.swagger.oas.models.servers.Server> serverList47 = serverListOptional32.orElse(serverList46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = null;
        strComparableSchema50.setExtensions(strMap54);
        strComparableSchema50.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int58 = strComparableSchema50.getMaxItems();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema50.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        strComparableSchema61.setDescription("hi!");
        java.math.BigDecimal bigDecimal69 = null;
        strComparableSchema61.setMaximum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema61.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList73 = strComparableSchema61.getRequired();
        io.swagger.oas.models.media.Schema schema74 = schema60.required(strList73);
        boolean boolean75 = serverListOptional32.equals((java.lang.Object) strList73);
        schema30.setRequired(strList73);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema0.required(strList73);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str79 = strComparableSchema78.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema80.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema78.not((io.swagger.oas.models.media.Schema) strComparableSchema80);
        java.lang.Boolean boolean84 = strComparableSchema78.getReadOnly();
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema78.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema78.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema89 = schema77.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema78);
        io.swagger.oas.models.media.XML xML90 = schema89.getXml();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str25, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(serverArray31);
        org.junit.Assert.assertNotNull(serverListOptional32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Optional.empty" + "'", str33, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray34);
        org.junit.Assert.assertNotNull(serverListOptional35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Optional.empty" + "'", str36, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray37);
        org.junit.Assert.assertNotNull(serverListOptional38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(serverList41);
        org.junit.Assert.assertNotNull(serverArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(serverList45);
        org.junit.Assert.assertNotNull(serverList46);
        org.junit.Assert.assertNotNull(serverList47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(xML90);
    }

    @Test
    public void test03605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03605");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean9 = schema8.getWriteOnly();
        java.lang.Integer int10 = schema8.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test03606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03606");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.xml(xML20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema23.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.readOnly((java.lang.Boolean) false);
        schema25.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03607");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList10 = strComparableSchema2.getRequired();
        java.math.BigDecimal bigDecimal11 = null;
        strComparableSchema2.setMaximum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema2.multipleOf(bigDecimal13);
        schema14.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03608");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.lang.Integer int8 = strComparableSchema0.getMinItems();
        strComparableSchema0.set$ref(",");
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        strComparableSchema13.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal48 = strComparableSchema37.getMultipleOf();
        java.lang.String str49 = strComparableSchema37.get$ref();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema37.maximum(bigDecimal50);
        io.swagger.oas.models.media.Discriminator discriminator52 = strComparableSchema37.getDiscriminator();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.not((io.swagger.oas.models.media.Schema) strComparableSchema62);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        strComparableSchema66.setDescription("hi!");
        strComparableSchema66.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema60.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema66);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema56.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        java.math.BigDecimal bigDecimal79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema78.multipleOf(bigDecimal79);
        java.lang.Integer int81 = schema80.getMaxItems();
        strComparableSchema13.setAdditionalProperties(schema80);
        io.swagger.oas.models.media.Discriminator discriminator83 = strComparableSchema13.getDiscriminator();
        java.lang.Object obj84 = null;
        strComparableSchema13.setDefault(obj84);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema13.maxProperties((java.lang.Integer) 0);
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNull(discriminator83);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test03609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03609");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        strComparableSchema13.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema13.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        schema38.setExternalDocs(externalDocumentation39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.properties(strMap41);
        boolean boolean43 = serverListOptional2.equals((java.lang.Object) schema38);
        java.lang.String str44 = serverListOptional2.toString();
        java.lang.String str45 = serverListOptional2.toString();
        boolean boolean46 = serverListOptional2.isPresent();
        java.lang.String str47 = serverListOptional2.toString();
        java.lang.String str48 = serverListOptional2.toString();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Optional.empty" + "'", str44, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Optional.empty" + "'", str45, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Optional.empty" + "'", str47, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Optional.empty" + "'", str48, "Optional.empty");
    }

    @Test
    public void test03610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03610");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.String str17 = schema16.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator18 = schema16.getDiscriminator();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.multipleOf(bigDecimal19);
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema24.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema24.maxLength((java.lang.Integer) (-1));
        strComparableSchema24.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema46.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema46.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str57 = strComparableSchema56.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.not((io.swagger.oas.models.media.Schema) strComparableSchema58);
        strComparableSchema56.setDescription("hi!");
        strComparableSchema56.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal67 = strComparableSchema56.getMultipleOf();
        java.lang.String str68 = strComparableSchema56.get$ref();
        java.lang.String[] strArray73 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        strComparableSchema56.setRequired((java.util.List<java.lang.String>) strList74);
        schema55.setNot((io.swagger.oas.models.media.Schema) strComparableSchema56);
        java.lang.Integer int78 = strComparableSchema56.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = null;
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema56.properties(strMap79);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        strComparableSchema56.setExternalDocs(externalDocumentation81);
        java.lang.Object obj83 = strComparableSchema56.getExample();
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema56.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema87 = schema85.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema89 = schema87.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema90 = strComparableSchema24.not(schema87);
        io.swagger.oas.models.media.Schema schema92 = schema90.deprecated((java.lang.Boolean) false);
        schema20.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.Discriminator discriminator94 = null;
        io.swagger.oas.models.media.Schema schema95 = schema20.discriminator(discriminator94);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test03611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03611");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        java.lang.Object obj11 = schema2.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        schema2.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema2.xml(xML16);
        java.lang.String str18 = schema2.getType();
        io.swagger.oas.models.media.Schema schema20 = schema2.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema20.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03612");
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(genericDeclarationOptional0);
    }

    @Test
    public void test03613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03613");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema40 = schema38.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03614");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.exclusiveMaximum((java.lang.Boolean) true);
        schema14.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = null;
        schema14.setNot(schema19);
        schema14.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03615");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        schema3.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema3.setExclusiveMinimum((java.lang.Boolean) false);
        schema3.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str10 = schema3.getFormat();
        java.lang.Boolean boolean11 = schema3.getNullable();
        schema3.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test03616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03616");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setMinItems((java.lang.Integer) (-1));
        strComparableSchema0.setMaxItems((java.lang.Integer) (-1));
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema0.setType("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.externalDocs(externalDocumentation23);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03617");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema0.setMultipleOf(bigDecimal18);
        java.util.List<java.lang.String> strList20 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema21.multipleOf(bigDecimal32);
        schema33.setExample((java.lang.Object) "hi!");
        schema33.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = schema33.getReadOnly();
        java.lang.Boolean boolean39 = schema33.getNullable();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema33.getExtensions();
        strComparableSchema0.setExtensions(strMap40);
        java.lang.Class<?> wildcardClass42 = strMap40.getClass();
        java.util.Optional<java.lang.reflect.Type> typeOptional43 = java.util.Optional.of((java.lang.reflect.Type) wildcardClass42);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeOptional43);
    }

    @Test
    public void test03618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03618");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.XML xML6 = null;
        strComparableSchema0.setXml(xML6);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.discriminator(discriminator8);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int12 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        strComparableSchema13.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema13.$ref("#/components/schemas/");
        strComparableSchema13.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal41 = null;
        strComparableSchema13.setMinimum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema13.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean47 = schema46.getReadOnly();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema46.maximum(bigDecimal48);
        schema46.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema46.discriminator(discriminator52);
        java.util.List<java.lang.String> strList54 = schema53.getRequired();
        strComparableSchema0.setRequired(strList54);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(strList54);
    }

    @Test
    public void test03619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03619");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray22 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray22);
        schema16.setExample((java.lang.Object) tagSetOptional23);
        java.math.BigDecimal bigDecimal25 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema schema26 = schema13.not(schema16);
        java.lang.String str27 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema29 = schema13.title("#/components/schemas/no description");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(tagSetOptional23);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03620");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        java.lang.Object obj27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.example(obj27);
        java.lang.Boolean boolean29 = schema28.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML30 = schema28.getXml();
        io.swagger.oas.models.media.Schema schema32 = schema28.uniqueItems((java.lang.Boolean) false);
        schema28.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(xML30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test03621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03621");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        schema11.setDeprecated((java.lang.Boolean) false);
        schema11.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema11.format("no description");
        schema11.setMaxLength((java.lang.Integer) 100);
        java.lang.String str22 = schema11.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test03622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03622");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.description("hi!");
        java.lang.Boolean boolean17 = strComparableSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = strComparableSchema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean22 = strComparableSchema18.getReadOnly();
        strComparableSchema0.setExample((java.lang.Object) boolean22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        schema25.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema28.setNullable((java.lang.Boolean) false);
        java.lang.String str41 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema28.name("");
        java.math.BigDecimal bigDecimal44 = null;
        strComparableSchema28.setMinimum(bigDecimal44);
        java.lang.Boolean boolean46 = strComparableSchema28.getReadOnly();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema28.description("*/*");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema28.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList51 = strComparableSchema28.getRequired();
        strComparableSchema28.setReadOnly((java.lang.Boolean) false);
        schema25.setNot((io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema schema56 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.discriminator(discriminator57);
        io.swagger.oas.models.media.Schema schema60 = schema56.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test03623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03623");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        schema15.setReadOnly((java.lang.Boolean) true);
        java.lang.String str18 = schema15.getName();
        schema15.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema22 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.properties(strMap24);
        java.lang.Boolean boolean26 = schema25.getUniqueItems();
        schema25.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj29 = schema25.getExample();
        io.swagger.oas.models.media.Schema schema31 = schema25.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = schema25.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal34 = null;
        schema33.setMinimum(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema33.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema33.title("no description");
        io.swagger.oas.models.media.Schema schema41 = schema39.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator42 = schema41.getDiscriminator();
        schema22.setNot(schema41);
        io.swagger.oas.models.media.Schema schema45 = schema41.deprecated((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass46 = schema41.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test03624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03624");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.Boolean boolean4 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema6 = schema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema6.maxProperties((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList9 = schema6.getRequired();
        io.swagger.oas.models.media.Schema schema11 = schema6.readOnly((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList12 = schema6.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test03625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03625");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList20 = strComparableSchema0.getEnum();
        strComparableSchema0.setMinLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal23 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        strComparableSchema0.setDiscriminator(discriminator24);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema0.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setMaxLength((java.lang.Integer) 1);
        java.lang.String str32 = strComparableSchema0.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(strComparableList20);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test03626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03626");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        java.lang.String str15 = serverListOptional14.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray16 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray16);
        boolean boolean18 = serverListOptional17.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList19 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList20 = serverListOptional17.orElse(serverList19);
        io.swagger.oas.models.servers.Server[] serverArray21 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList22 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList22, serverArray21);
        java.util.List<io.swagger.oas.models.servers.Server> serverList24 = serverListOptional17.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        boolean boolean27 = serverListOptional1.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray28 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional29 = io.swagger.jaxrs2.OperationParser.getServers(serverArray28);
        java.lang.String str30 = serverListOptional29.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray31 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional32 = io.swagger.jaxrs2.OperationParser.getServers(serverArray31);
        boolean boolean33 = serverListOptional32.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList34 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList35 = serverListOptional32.orElse(serverList34);
        io.swagger.oas.models.servers.Server[] serverArray36 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList37 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList37, serverArray36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional32.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList37);
        java.util.List<io.swagger.oas.models.servers.Server> serverList40 = serverListOptional29.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList37);
        java.lang.String str41 = serverListOptional29.toString();
        boolean boolean42 = serverListOptional29.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.writeOnly((java.lang.Boolean) false);
        schema45.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = schema45.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.Boolean boolean56 = strComparableSchema50.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        strComparableSchema50.setProperties(strMap57);
        io.swagger.oas.models.media.Schema schema59 = schema49.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        java.lang.Boolean boolean60 = schema49.getReadOnly();
        boolean boolean61 = serverListOptional29.equals((java.lang.Object) schema49);
        io.swagger.oas.annotations.servers.Server[] serverArray62 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional63 = io.swagger.jaxrs2.OperationParser.getServers(serverArray62);
        boolean boolean64 = serverListOptional63.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList65 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList66 = serverListOptional63.orElse(serverList65);
        io.swagger.oas.models.servers.Server[] serverArray67 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList68 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList68, serverArray67);
        java.util.List<io.swagger.oas.models.servers.Server> serverList70 = serverListOptional63.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList68);
        java.util.List<io.swagger.oas.models.servers.Server> serverList71 = serverListOptional29.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList68);
        java.util.List<io.swagger.oas.models.servers.Server> serverList72 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList73 = serverListOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Optional.empty" + "'", str15, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray16);
        org.junit.Assert.assertNotNull(serverListOptional17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(serverList20);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(serverList24);
        org.junit.Assert.assertNotNull(serverList25);
        org.junit.Assert.assertNotNull(serverList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertNotNull(serverListOptional29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Optional.empty" + "'", str30, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray31);
        org.junit.Assert.assertNotNull(serverListOptional32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(serverList35);
        org.junit.Assert.assertNotNull(serverArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(serverList39);
        org.junit.Assert.assertNotNull(serverList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Optional.empty" + "'", str41, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(serverArray62);
        org.junit.Assert.assertNotNull(serverListOptional63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(serverList66);
        org.junit.Assert.assertNotNull(serverArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(serverList70);
        org.junit.Assert.assertNotNull(serverList71);
        org.junit.Assert.assertNotNull(serverList72);
    }

    @Test
    public void test03627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03627");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema10.nullable((java.lang.Boolean) true);
        java.lang.String str34 = strComparableSchema10.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema41.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema10.xml(xML61);
        java.lang.Integer int63 = schema62.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
    }

    @Test
    public void test03628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03628");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.xml(xML6);
        java.lang.String str8 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML11 = null;
        strComparableSchema0.setXml(xML11);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03629");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.description("*/*");
        java.lang.Boolean boolean13 = schema12.getNullable();
        java.lang.String str14 = schema12.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
    }

    @Test
    public void test03630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03630");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema40.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = schema40.nullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema44.getExtensions();
        java.math.BigDecimal bigDecimal46 = schema44.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(bigDecimal46);
    }

    @Test
    public void test03631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03631");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String str12 = schema11.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema11.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test03632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03632");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.XML xML45 = schema44.getXml();
        java.lang.String str46 = schema44.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal58 = strComparableSchema47.getMultipleOf();
        strComparableSchema47.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str61 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema47.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema47.getNot();
        strComparableSchema47.setName("Optional.empty");
        java.math.BigDecimal bigDecimal67 = strComparableSchema47.getMaximum();
        io.swagger.oas.models.media.Schema schema68 = schema44.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.lang.Boolean boolean69 = schema44.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(xML45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean69);
    }

    @Test
    public void test03633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03633");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema4.description("");
        java.lang.Integer int7 = schema4.getMaxItems();
        io.swagger.oas.models.media.Schema schema9 = schema4.writeOnly((java.lang.Boolean) false);
        schema9.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03634");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("Optional.empty");
        schema11.setMinLength((java.lang.Integer) 0);
        java.lang.String str14 = schema11.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test03635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03635");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema8.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        strComparableSchema8.setExternalDocs(externalDocumentation20);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema8.maximum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema24 = schema7.additionalProperties(schema23);
        io.swagger.oas.models.media.Schema schema26 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema26.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
    }

    @Test
    public void test03636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03636");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.not(schema13);
        schema12.setUniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        schema12.setProperties(strMap17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema21.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema21);
        strComparableSchema21.setMaxLength((java.lang.Integer) 0);
        strComparableSchema21.setMaxProperties((java.lang.Integer) 100);
        schema12.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = strComparableSchema30.getExternalDocs();
        java.lang.Integer int32 = strComparableSchema30.getMaxLength();
        java.lang.Integer int33 = strComparableSchema30.getMaxProperties();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = strComparableSchema36.getExternalDocs();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema36.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema41.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = strComparableSchema41.getProperties();
        io.swagger.oas.models.media.Schema schema55 = schema39.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.lang.Boolean boolean56 = schema55.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        schema55.setDiscriminator(discriminator57);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = schema55.getProperties();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema30.properties(strMap59);
        io.swagger.oas.models.media.Schema schema61 = schema12.properties(strMap59);
        io.swagger.oas.models.media.Schema schema63 = schema61.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test03637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03637");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        schema17.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.properties(strMap23);
        java.lang.Boolean boolean25 = schema24.getNullable();
        java.lang.String str26 = schema24.getType();
        schema24.setTitle("#/components/schemas/");
        schema24.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema24.addRequiredItem("*/*");
        java.lang.String str33 = schema24.getName();
        io.swagger.oas.models.media.Schema schema35 = schema24.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList36 = schema24.getRequired();
        io.swagger.oas.models.media.Schema schema37 = schema17.additionalProperties(schema24);
        java.lang.Boolean boolean38 = schema24.getUniqueItems();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = schema24.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(strMap39);
    }

    @Test
    public void test03638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03638");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = schema10.getExternalDocs();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = schema10.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test03639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03639");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        java.lang.Integer int61 = schema46.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str63 = strComparableSchema62.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema64.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema62.not((io.swagger.oas.models.media.Schema) strComparableSchema64);
        strComparableSchema62.setDescription("hi!");
        strComparableSchema62.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema62.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        strComparableSchema62.setExternalDocs(externalDocumentation74);
        io.swagger.oas.models.media.XML xML76 = strComparableSchema62.getXml();
        java.lang.String str77 = strComparableSchema62.getPattern();
        schema46.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema62);
        java.math.BigDecimal bigDecimal79 = schema46.getMaximum();
        io.swagger.oas.models.media.Schema schema81 = schema46.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema82 = schema81.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(schema73);
        org.junit.Assert.assertNull(xML76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(bigDecimal79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test03640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03640");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        strComparableSchema0.setProperties(strMap3);
        java.lang.Boolean boolean5 = strComparableSchema0.getExclusiveMaximum();
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) ",");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.format("Optional.empty");
        java.lang.String str10 = schema9.get$ref();
        schema9.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test03641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03641");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema14.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema22.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator35 = strComparableSchema22.getDiscriminator();
        strComparableSchema14.addExtension("Optional.empty", (java.lang.Object) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema0.minLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal40 = strComparableSchema0.getMaximum();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test03642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03642");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMaxLength();
        java.lang.Integer int3 = strComparableSchema0.getMaxProperties();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int3);
    }

    @Test
    public void test03643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03643");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema17.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal38 = strComparableSchema27.getMultipleOf();
        java.lang.String str39 = strComparableSchema27.get$ref();
        java.lang.String[] strArray44 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        strComparableSchema27.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.Integer int48 = strComparableSchema27.getMaxLength();
        strComparableSchema27.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema27.getNot();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema27.deprecated((java.lang.Boolean) false);
        schema53.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setAdditionalProperties(schema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = strComparableSchema58.getExternalDocs();
        java.lang.Integer int60 = strComparableSchema58.getMinProperties();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema58.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema64 = schema62.description("");
        java.lang.Integer int65 = schema62.getMaxItems();
        io.swagger.oas.models.media.Schema schema67 = schema62.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal68 = schema67.getMultipleOf();
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema67.multipleOf(bigDecimal69);
        io.swagger.oas.models.media.Schema schema71 = schema53.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema67);
        schema71.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal74 = null;
        schema71.setMinimum(bigDecimal74);
        schema71.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(externalDocumentation59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(bigDecimal68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test03644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03644");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        schema13.setFormat("Optional.empty");
        schema13.setType("hi!");
        java.lang.Object obj19 = schema13.getExample();
        schema13.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema13.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(obj19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03645");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        schema30.setExample((java.lang.Object) tagSetOptional37);
        java.lang.Object obj40 = null;
        schema30.addExtension("*/*", obj40);
        java.lang.String str42 = schema30.getDescription();
        java.lang.String str43 = schema30.getType();
        java.lang.String str44 = schema30.getName();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema2.addProperties("*/*", schema30);
        java.math.BigDecimal bigDecimal46 = schema45.getMultipleOf();
        java.math.BigDecimal bigDecimal47 = schema45.getMaximum();
        io.swagger.oas.models.media.Schema schema49 = schema45.name(",");
        io.swagger.oas.models.media.Schema schema51 = schema45.writeOnly((java.lang.Boolean) true);
        schema51.setMinLength((java.lang.Integer) 0);
        schema51.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test03646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03646");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setMinItems((java.lang.Integer) 1);
        java.lang.String str3 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.maxProperties((java.lang.Integer) 0);
        schema5.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str3, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema5);
    }

    @Test
    public void test03647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03647");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema3.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.externalDocs(externalDocumentation6);
        java.lang.String str8 = schema5.getType();
        java.math.BigDecimal bigDecimal9 = null;
        schema5.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema5.discriminator(discriminator11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = strComparableSchema13.getExternalDocs();
        java.lang.Integer int15 = strComparableSchema13.getMinProperties();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema13.maxProperties((java.lang.Integer) (-1));
        schema17.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema21 = schema17.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean22 = schema17.getWriteOnly();
        boolean boolean23 = schema5.equals((java.lang.Object) schema17);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(externalDocumentation14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test03648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03648");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = null;
        io.swagger.oas.models.media.Schema schema5 = schema2.addProperties("*/*", schema4);
        schema5.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema9 = schema5.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03649");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML41 = schema40.getXml();
        io.swagger.oas.models.media.Schema schema43 = schema40.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema43.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.pattern("");
        io.swagger.oas.models.media.Schema schema49 = schema47.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema49.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test03650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03650");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = schema3.addRequiredItem("hi!");
        java.lang.String str6 = schema3.getDescription();
        schema3.setMinItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema3.minimum(bigDecimal9);
        schema10.setMinLength((java.lang.Integer) (-1));
        schema10.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional.empty" + "'", str6, "Optional.empty");
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test03651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03651");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema schema21 = schema3.deprecated((java.lang.Boolean) true);
        schema21.setMinProperties((java.lang.Integer) (-1));
        schema21.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema21.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML28 = schema27.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = strComparableSchema30.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = strComparableSchema35.getProperties();
        io.swagger.oas.models.media.Schema schema49 = schema33.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.lang.Boolean boolean50 = strComparableSchema35.getDeprecated();
        java.lang.Boolean boolean51 = strComparableSchema35.getUniqueItems();
        io.swagger.oas.models.media.Schema schema52 = schema27.addProperties("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema35);
        schema52.setExclusiveMaximum((java.lang.Boolean) true);
        schema52.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(xML28);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test03652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03652");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema13.format("hi!");
        java.lang.Boolean boolean16 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema schema18 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03653");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        java.lang.String str15 = schema2.getType();
        java.lang.String str16 = schema2.getName();
        java.lang.Boolean boolean17 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = schema2.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema18.setName("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNull(schema18);
    }

    @Test
    public void test03654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03654");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema14.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema22.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator35 = strComparableSchema22.getDiscriminator();
        strComparableSchema14.addExtension("Optional.empty", (java.lang.Object) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        java.lang.String str40 = schema39.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
    }

    @Test
    public void test03655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03655");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = null;
        io.swagger.oas.models.media.Schema schema5 = schema2.addProperties("*/*", schema4);
        io.swagger.oas.models.media.Schema schema6 = schema2.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema6);
    }

    @Test
    public void test03656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03656");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML9 = schema8.getXml();
        io.swagger.oas.models.media.Schema schema11 = schema8.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = schema8.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(xML9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test03657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03657");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.Boolean boolean4 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema6 = schema2.uniqueItems((java.lang.Boolean) false);
        schema2.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.set$ref("Optional.empty");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.multipleOf(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.properties(strMap16);
        java.lang.Boolean boolean18 = schema17.getUniqueItems();
        schema17.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass21 = schema17.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional22 = java.util.Optional.ofNullable(wildcardClass21);
        java.util.Optional<java.lang.reflect.Type> typeOptional23 = java.util.Optional.ofNullable((java.lang.reflect.Type) wildcardClass21);
        schema14.setExample((java.lang.Object) typeOptional23);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClassOptional22);
        org.junit.Assert.assertNotNull(typeOptional23);
    }

    @Test
    public void test03658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03658");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        java.lang.Integer int29 = strComparableSchema0.getMaxItems();
        java.lang.String str30 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal46 = strComparableSchema35.getMultipleOf();
        java.lang.String str47 = strComparableSchema35.get$ref();
        java.lang.String[] strArray52 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        strComparableSchema35.setRequired((java.util.List<java.lang.String>) strList53);
        java.lang.Integer int56 = strComparableSchema35.getMaxLength();
        java.lang.Integer int57 = strComparableSchema35.getMaxProperties();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema35.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.not((io.swagger.oas.models.media.Schema) strComparableSchema62);
        strComparableSchema60.setDescription("hi!");
        strComparableSchema60.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal71 = strComparableSchema60.getMultipleOf();
        java.lang.String str72 = strComparableSchema60.get$ref();
        io.swagger.oas.models.media.Schema schema73 = schema59.example((java.lang.Object) strComparableSchema60);
        java.lang.Integer int74 = schema73.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str76 = strComparableSchema75.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema77.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema75.not((io.swagger.oas.models.media.Schema) strComparableSchema77);
        java.lang.String str81 = strComparableSchema75.get$ref();
        java.lang.String[] strArray86 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional89 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema90 = strComparableSchema75.required((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema91 = schema73.required((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema93 = schema91.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal94 = null;
        schema93.setMinimum(bigDecimal94);
        java.util.Map<java.lang.String, java.lang.Object> strMap96 = schema93.getExtensions();
        schema32.setNot(schema93);
        java.lang.String str98 = schema93.getFormat();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(bigDecimal71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test03659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03659");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema17 = schema15.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03660");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.getAdditionalProperties();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema28);
    }

    @Test
    public void test03661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03661");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        java.math.BigDecimal bigDecimal17 = null;
        schema16.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.xml(xML19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        java.math.BigDecimal bigDecimal30 = null;
        strComparableSchema22.setMaximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema22.addRequiredItem("hi!");
        java.lang.Integer int34 = schema33.getMinLength();
        java.math.BigDecimal bigDecimal35 = schema33.getMaximum();
        schema33.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str38 = schema33.getFormat();
        schema33.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema20.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema schema43 = schema33.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test03662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03662");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        schema2.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.writeOnly((java.lang.Boolean) false);
        schema21.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema18.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema27 = schema25.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int28 = schema27.getMinProperties();
        java.math.BigDecimal bigDecimal29 = null;
        schema27.setMinimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema2.not(schema27);
        io.swagger.oas.models.media.Schema schema32 = schema2.getNot();
        io.swagger.oas.models.media.Schema schema34 = schema2.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03663");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        schema46.setExtensions(strMap61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema46.maximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema64.name("#/components/schemas/");
        schema66.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema70 = schema66.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test03664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03664");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        boolean boolean15 = serverListOptional14.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional14.orElse(serverList16);
        io.swagger.oas.models.servers.Server[] serverArray18 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList19 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList19, serverArray18);
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.lang.String str23 = serverListOptional1.toString();
        java.lang.String str24 = serverListOptional1.toString();
        java.lang.String str25 = serverListOptional1.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        java.math.BigDecimal bigDecimal34 = null;
        strComparableSchema26.setMaximum(bigDecimal34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal47 = strComparableSchema36.getMultipleOf();
        java.lang.String str48 = strComparableSchema36.get$ref();
        java.lang.String[] strArray53 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        strComparableSchema36.setRequired((java.util.List<java.lang.String>) strList54);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema26.required((java.util.List<java.lang.String>) strList54);
        java.math.BigDecimal bigDecimal58 = schema57.getMaximum();
        boolean boolean59 = serverListOptional1.equals((java.lang.Object) bigDecimal58);
        boolean boolean60 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        strComparableSchema61.setDescription("hi!");
        java.math.BigDecimal bigDecimal69 = null;
        strComparableSchema61.setMaximum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema61.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema61.multipleOf(bigDecimal73);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap75 = null;
        strComparableSchema61.setProperties(strMap75);
        java.lang.Boolean boolean77 = strComparableSchema61.getDeprecated();
        strComparableSchema61.setNullable((java.lang.Boolean) false);
        boolean boolean80 = serverListOptional1.equals((java.lang.Object) strComparableSchema61);
        java.util.Optional<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalOptional81 = java.util.Optional.of(serverListOptional1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str83 = strComparableSchema82.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema84 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema84.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema82.not((io.swagger.oas.models.media.Schema) strComparableSchema84);
        strComparableSchema82.setDescription("hi!");
        strComparableSchema82.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema82.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap95 = strComparableSchema82.getProperties();
        strComparableSchema82.setMinProperties((java.lang.Integer) 100);
        boolean boolean98 = serverListOptional1.equals((java.lang.Object) 100);
        java.lang.String str99 = serverListOptional1.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serverList21);
        org.junit.Assert.assertNotNull(serverList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Optional.empty" + "'", str23, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Optional.empty" + "'", str24, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Optional.empty" + "'", str25, "Optional.empty");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(serverListOptionalOptional81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "Optional.empty" + "'", str99, "Optional.empty");
    }

    @Test
    public void test03665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03665");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        schema46.setExtensions(strMap61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema46.maximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema46.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str69 = strComparableSchema68.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema68.not((io.swagger.oas.models.media.Schema) strComparableSchema70);
        strComparableSchema68.setDescription("hi!");
        strComparableSchema68.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal79 = strComparableSchema68.getMultipleOf();
        java.lang.String str80 = strComparableSchema68.get$ref();
        strComparableSchema68.setDeprecated((java.lang.Boolean) false);
        java.lang.String str83 = strComparableSchema68.getType();
        io.swagger.oas.models.media.Schema schema84 = schema46.addProperties(",", (io.swagger.oas.models.media.Schema) strComparableSchema68);
        schema46.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema88 = schema46.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = schema46.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(bigDecimal79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(strMap89);
    }

    @Test
    public void test03666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03666");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.description("Optional.empty");
        schema7.setDefault((java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema8.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema8.multipleOf(bigDecimal15);
        java.lang.String str17 = schema16.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test03667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03667");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.multipleOf(bigDecimal66);
        java.lang.Integer int68 = schema67.getMaxItems();
        strComparableSchema0.setAdditionalProperties(schema67);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema0.minProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean72 = strComparableSchema0.getExclusiveMinimum();
        java.lang.Integer int73 = strComparableSchema0.getMaxItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNull(int73);
    }

    @Test
    public void test03668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03668");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        strComparableSchema0.setMaximum(bigDecimal12);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03669");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.multipleOf(bigDecimal11);
        schema12.setExample((java.lang.Object) "hi!");
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean17 = schema12.getReadOnly();
        java.lang.Boolean boolean18 = schema12.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema12.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        java.math.BigDecimal bigDecimal29 = null;
        strComparableSchema21.setMaximum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema21.addRequiredItem("hi!");
        java.lang.String str33 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema21.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema21.getAdditionalProperties();
        schema12.setAdditionalProperties(schema36);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
    }

    @Test
    public void test03670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03670");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList9 = strComparableSchema8.getRequired();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal23 = strComparableSchema12.getMultipleOf();
        java.lang.String str24 = strComparableSchema12.get$ref();
        java.lang.String[] strArray29 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        strComparableSchema12.setRequired((java.util.List<java.lang.String>) strList30);
        java.lang.Integer int33 = strComparableSchema12.getMaxLength();
        strComparableSchema12.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema37.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        strComparableSchema37.setExternalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema37.format("");
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema12.additionalProperties(schema52);
        java.math.BigDecimal bigDecimal54 = null;
        schema53.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema53.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema53.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setDefault((java.lang.Object) schema53);
        io.swagger.oas.models.media.XML xML61 = schema53.getXml();
        schema53.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(xML61);
    }

    @Test
    public void test03671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03671");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema33.readOnly((java.lang.Boolean) false);
        schema33.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema33.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test03672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03672");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        java.lang.Boolean boolean7 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema9 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema schema14 = schema2.maxLength((java.lang.Integer) (-1));
        schema14.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema14.addRequiredItem("");
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema14.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
    }

    @Test
    public void test03673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03673");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        java.lang.Boolean boolean46 = schema45.getExclusiveMaximum();
        java.lang.Integer int47 = schema45.getMinLength();
        java.lang.String str48 = schema45.getType();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test03674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03674");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.annotations.servers.Server server29 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] { server29 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        boolean boolean32 = serverListOptional31.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.lang.String str39 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema33.getNot();
        boolean boolean41 = serverListOptional31.equals((java.lang.Object) schema40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema40.properties(strMap42);
        io.swagger.oas.models.media.Schema schema45 = schema40.uniqueItems((java.lang.Boolean) false);
        java.lang.String str46 = schema45.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator47 = schema45.getDiscriminator();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.multipleOf(bigDecimal48);
        boolean boolean50 = schema26.equals((java.lang.Object) schema49);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        schema26.setDiscriminator(discriminator51);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test03675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03675");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema33.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.minimum(bigDecimal36);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test03676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03676");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.maximum(bigDecimal10);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        java.lang.Integer int14 = schema13.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test03677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03677");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema35.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.writeOnly((java.lang.Boolean) false);
        schema41.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal44 = schema41.getMaximum();
        io.swagger.oas.models.media.Schema schema45 = schema38.additionalProperties(schema41);
        schema41.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setDefault((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema0.setName("hi!");
        java.lang.String str51 = strComparableSchema0.getDescription();
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema0.maximum(bigDecimal54);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!" + "'", str51, "hi!");
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test03678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03678");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.lang.Object obj5 = null;
        schema2.setExample(obj5);
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.multipleOf(bigDecimal7);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test03679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03679");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal17 = strComparableSchema6.getMultipleOf();
        java.lang.String str18 = strComparableSchema6.get$ref();
        java.lang.String[] strArray23 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        strComparableSchema6.setRequired((java.util.List<java.lang.String>) strList24);
        java.lang.Integer int27 = strComparableSchema6.getMaxLength();
        strComparableSchema6.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema6.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema31.setExternalDocs(externalDocumentation32);
        strComparableSchema2.setDefault((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema35.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        strComparableSchema35.setExternalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema35.title("Optional.empty");
        java.lang.Integer int51 = strComparableSchema35.getMinProperties();
        io.swagger.oas.models.media.Schema schema52 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema35.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema35.format("*/*");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema35.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test03680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03680");
        java.util.Optional<java.lang.Comparable<java.lang.String>> strComparableOptional1 = java.util.Optional.ofNullable((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strComparableOptional1);
    }

    @Test
    public void test03681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03681");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str4 = strComparableSchema3.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema5.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema3.not((io.swagger.oas.models.media.Schema) strComparableSchema5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema9.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean28 = strComparableSchema5.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList37 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean38 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean39 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean40 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean41 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean42 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean43 = strComparableList37.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean44 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean45 = strComparableList37.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList37);
        strComparableSchema0.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema0.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.String str52 = schema51.getName();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test03682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03682");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String[] strArray3 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList4);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.annotations.servers.Server server16 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray17 = new io.swagger.oas.annotations.servers.Server[] { server16 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray17);
        boolean boolean19 = serverListOptional18.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.lang.String str26 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema20.getNot();
        boolean boolean28 = serverListOptional18.equals((java.lang.Object) schema27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema27.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = schema27.uniqueItems((java.lang.Boolean) false);
        schema32.setName("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator35 = schema32.getDiscriminator();
        schema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = schema32.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = schema15.not(schema32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        strComparableSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema schema44 = schema39.maxLength((java.lang.Integer) 100);
        schema39.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema39.discriminator(discriminator47);
        io.swagger.oas.models.media.Schema schema50 = schema39.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(serverArray17);
        org.junit.Assert.assertNotNull(serverListOptional18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + false + "'", boolean38, false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test03683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03683");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj27 = strComparableSchema2.getExample();
        java.lang.Boolean boolean28 = strComparableSchema2.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray65 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional66 = io.swagger.jaxrs2.OperationParser.getTags(strArray65);
        schema59.setExample((java.lang.Object) tagSetOptional66);
        java.lang.Object obj69 = null;
        schema59.addExtension("*/*", obj69);
        java.lang.String str71 = schema59.getDescription();
        java.lang.String str72 = schema59.getType();
        java.lang.String str73 = schema59.getName();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema31.addProperties("*/*", schema59);
        java.math.BigDecimal bigDecimal75 = schema74.getMultipleOf();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema2.additionalProperties(schema74);
        io.swagger.oas.models.media.Schema schema78 = schema76.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema80 = schema78.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        schema78.setExternalDocs(externalDocumentation81);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(tagSetOptional66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test03684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03684");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema6 = schema4.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema9.setDescription("hi!");
        strComparableSchema9.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal20 = strComparableSchema9.getMultipleOf();
        java.lang.String str21 = strComparableSchema9.get$ref();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema9.maximum(bigDecimal22);
        strComparableSchema9.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.properties(strMap27);
        java.lang.Boolean boolean29 = schema28.getUniqueItems();
        schema28.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal32 = null;
        schema28.setMultipleOf(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema28.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema35.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema35.title("hi!");
        schema39.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean43 = strComparableSchema9.equals((java.lang.Object) (byte) 10);
        java.lang.Boolean boolean44 = strComparableSchema9.getReadOnly();
        strComparableSchema9.setPattern("");
        strComparableSchema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema9.minimum(bigDecimal51);
        schema6.setExample((java.lang.Object) bigDecimal51);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + true + "'", boolean44, true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test03685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03685");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema16.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema16.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.String str56 = strComparableSchema50.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema50.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema49.required((java.util.List<java.lang.String>) strList62);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional67 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema0.required((java.util.List<java.lang.String>) strList62);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = null;
        strComparableSchema0.setProperties(strMap69);
        strComparableSchema0.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strCollectionOptional67);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test03686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03686");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        strComparableSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str20 = strComparableSchema0.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test03687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03687");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        schema17.setDeprecated((java.lang.Boolean) false);
        java.lang.Object obj20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.example(obj20);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test03688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03688");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        schema2.setExternalDocs(externalDocumentation7);
        java.lang.String str9 = schema2.toString();
        java.lang.Integer int10 = schema2.getMinProperties();
        io.swagger.oas.models.media.Schema schema12 = schema2.maxItems((java.lang.Integer) 0);
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test03689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03689");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.String str40 = strComparableSchema34.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional48 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema33.required((java.util.List<java.lang.String>) strList46);
        java.lang.String str51 = schema33.get$ref();
        java.lang.Boolean boolean52 = schema33.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema54 = schema33.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema33.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = schema33.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test03690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03690");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        java.lang.String str5 = serverListOptional4.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        boolean boolean8 = serverListOptional7.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList9 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList10 = serverListOptional7.orElse(serverList9);
        io.swagger.oas.models.servers.Server[] serverArray11 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList12 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList12, serverArray11);
        java.util.List<io.swagger.oas.models.servers.Server> serverList14 = serverListOptional7.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList12);
        java.util.List<io.swagger.oas.models.servers.Server> serverList15 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList12);
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = serverListOptional1.orElse(serverList15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema22 = schema20.addRequiredItem("hi!");
        java.lang.String str23 = schema20.getDescription();
        boolean boolean24 = serverListOptional1.equals((java.lang.Object) schema20);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema20.setExternalDocs(externalDocumentation25);
        schema20.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Optional.empty" + "'", str5, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(serverList10);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(serverList14);
        org.junit.Assert.assertNotNull(serverList15);
        org.junit.Assert.assertNotNull(serverList16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Optional.empty" + "'", str23, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test03691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03691");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        io.swagger.oas.models.media.XML xML8 = null;
        schema5.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema5.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema12.title("");
        io.swagger.oas.models.media.Schema schema22 = schema5.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        strComparableSchema23.addExtension("", (java.lang.Object) 0.0f);
        java.lang.Boolean boolean34 = strComparableSchema23.getUniqueItems();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema22.example((java.lang.Object) schema36);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        schema22.setDiscriminator(discriminator38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = strComparableSchema41.getExternalDocs();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema41.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema46.setDescription("hi!");
        strComparableSchema46.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema46.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = strComparableSchema46.getProperties();
        io.swagger.oas.models.media.Schema schema60 = schema44.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema46.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str64 = strComparableSchema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        strComparableSchema63.setDescription("hi!");
        strComparableSchema63.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal74 = strComparableSchema63.getMultipleOf();
        java.lang.String str75 = strComparableSchema63.get$ref();
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema63.maximum(bigDecimal76);
        io.swagger.oas.models.media.Discriminator discriminator78 = strComparableSchema63.getDiscriminator();
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema63.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema82 = schema80.minProperties((java.lang.Integer) 0);
        schema62.setNot(schema80);
        io.swagger.oas.models.media.Schema schema85 = schema62.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = schema85.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema89 = schema85.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema90 = schema22.addProperties("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema89);
        schema22.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema94 = schema22.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(externalDocumentation42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(bigDecimal74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(discriminator78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test03692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03692");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema6 = schema4.maxProperties((java.lang.Integer) 0);
        schema4.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int9 = schema4.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test03693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03693");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = strComparableSchema2.getMinimum();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional13 = java.util.Optional.of(strComparableSchema2);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema2.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        java.math.BigDecimal bigDecimal17 = null;
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema18 = schema16.maximum(bigDecimal17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test03694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03694");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        strComparableSchema0.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test03695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03695");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema schema18 = schema16.uniqueItems((java.lang.Boolean) false);
        schema18.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema18.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema18.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        java.lang.Boolean boolean31 = strComparableSchema25.getReadOnly();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema25.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema25.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema36 = schema18.not(schema35);
        io.swagger.oas.models.media.Schema schema38 = schema36.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test03696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03696");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema22.setNullable((java.lang.Boolean) false);
        java.lang.String str35 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema22.name("");
        io.swagger.oas.models.media.Schema schema38 = null;
        schema37.setNot(schema38);
        io.swagger.oas.models.media.Schema schema41 = schema37.name(",");
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.multipleOf(bigDecimal43);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema41.externalDocs(externalDocumentation45);
        strComparableSchema0.setNot(schema41);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema41.maximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema49.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test03697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03697");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        schema37.setExternalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        schema37.setDiscriminator(discriminator40);
        java.lang.Boolean boolean42 = schema37.getNullable();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema37.multipleOf(bigDecimal43);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test03698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03698");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        schema2.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.writeOnly((java.lang.Boolean) false);
        schema21.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema18.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema27 = schema25.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int28 = schema27.getMinProperties();
        java.math.BigDecimal bigDecimal29 = null;
        schema27.setMinimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema2.not(schema27);
        schema2.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [#/components/schemas/no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: hi!\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test03699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03699");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.pattern("");
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema2.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("*/*");
        io.swagger.oas.models.media.Schema schema19 = schema15.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean20 = schema15.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test03700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03700");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.discriminator(discriminator32);
        java.lang.Class<?> wildcardClass34 = schema33.getClass();
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional35 = java.util.Optional.of((java.lang.reflect.GenericDeclaration) wildcardClass34);
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional36 = java.util.Optional.ofNullable((java.lang.reflect.GenericDeclaration) wildcardClass34);
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional37 = java.util.Optional.of((java.lang.reflect.GenericDeclaration) wildcardClass34);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(genericDeclarationOptional35);
        org.junit.Assert.assertNotNull(genericDeclarationOptional36);
        org.junit.Assert.assertNotNull(genericDeclarationOptional37);
    }

    @Test
    public void test03701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03701");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema26.addRequiredItem("no description");
        schema26.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test03702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03702");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        strComparableSchema0.setName("Optional.empty");
        strComparableSchema0.setFormat("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList22 = strComparableSchema0.getEnum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strComparableList22);
    }

    @Test
    public void test03703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03703");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMaxLength();
        java.math.BigDecimal bigDecimal3 = null;
        strComparableSchema0.setMaximum(bigDecimal3);
        strComparableSchema0.setMinItems((java.lang.Integer) 100);
        strComparableSchema0.setMaxItems((java.lang.Integer) 0);
        strComparableSchema0.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
    }

    @Test
    public void test03704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03704");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        strComparableSchema25.setMaxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean41 = strComparableSchema25.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean41);
    }

    @Test
    public void test03705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03705");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        strComparableSchema0.setProperties(strMap3);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.maximum(bigDecimal5);
        java.lang.String str7 = schema6.getDescription();
        schema6.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test03706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03706");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMaxLength();
        java.lang.Integer int3 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = strComparableSchema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema6.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema11.setDescription("hi!");
        strComparableSchema11.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema11.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = strComparableSchema11.getProperties();
        io.swagger.oas.models.media.Schema schema25 = schema9.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema11);
        java.lang.Boolean boolean26 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        schema25.setDiscriminator(discriminator27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema25.getProperties();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.properties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.minLength((java.lang.Integer) 10);
        java.lang.String str33 = strComparableSchema0.getType();
        java.lang.Boolean boolean34 = strComparableSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "#/components/schemas/" + "'", str33, "#/components/schemas/");
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test03707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03707");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional4 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.annotations.servers.Server[] serverArray7 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray7);
        java.lang.String str9 = serverListOptional8.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray10 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray10);
        boolean boolean12 = serverListOptional11.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList13 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList14 = serverListOptional11.orElse(serverList13);
        io.swagger.oas.models.servers.Server[] serverArray15 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList16 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList16, serverArray15);
        java.util.List<io.swagger.oas.models.servers.Server> serverList18 = serverListOptional11.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList16);
        java.util.List<io.swagger.oas.models.servers.Server> serverList19 = serverListOptional8.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList16);
        io.swagger.oas.annotations.servers.Server[] serverArray20 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        boolean boolean22 = serverListOptional21.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList23 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList24 = serverListOptional21.orElse(serverList23);
        io.swagger.oas.models.servers.Server[] serverArray25 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList26 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList26, serverArray25);
        java.util.List<io.swagger.oas.models.servers.Server> serverList28 = serverListOptional21.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList26);
        java.util.List<io.swagger.oas.models.servers.Server> serverList29 = serverListOptional8.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList26);
        boolean boolean30 = serverListOptional8.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray31 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional32 = io.swagger.jaxrs2.OperationParser.getServers(serverArray31);
        boolean boolean33 = serverListOptional32.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList34 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList35 = serverListOptional32.orElse(serverList34);
        io.swagger.oas.models.servers.Server[] serverArray36 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList37 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList37, serverArray36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional32.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList37);
        io.swagger.oas.annotations.servers.Server[] serverArray40 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional41 = io.swagger.jaxrs2.OperationParser.getServers(serverArray40);
        java.lang.String str42 = serverListOptional41.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray43 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional44 = io.swagger.jaxrs2.OperationParser.getServers(serverArray43);
        java.lang.String str45 = serverListOptional44.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray46 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional47 = io.swagger.jaxrs2.OperationParser.getServers(serverArray46);
        boolean boolean48 = serverListOptional47.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList49 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList50 = serverListOptional47.orElse(serverList49);
        io.swagger.oas.models.servers.Server[] serverArray51 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList52 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList52, serverArray51);
        java.util.List<io.swagger.oas.models.servers.Server> serverList54 = serverListOptional47.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList52);
        java.util.List<io.swagger.oas.models.servers.Server> serverList55 = serverListOptional44.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList52);
        java.util.List<io.swagger.oas.models.servers.Server> serverList56 = serverListOptional41.orElse(serverList55);
        java.util.List<io.swagger.oas.models.servers.Server> serverList57 = serverListOptional32.orElse(serverList55);
        java.util.List<io.swagger.oas.models.servers.Server> serverList58 = serverListOptional8.orElse(serverList57);
        io.swagger.oas.annotations.servers.Server[] serverArray59 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional60 = io.swagger.jaxrs2.OperationParser.getServers(serverArray59);
        boolean boolean61 = serverListOptional60.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList62 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList63 = serverListOptional60.orElse(serverList62);
        io.swagger.oas.models.servers.Server[] serverArray64 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList65 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList65, serverArray64);
        java.util.List<io.swagger.oas.models.servers.Server> serverList67 = serverListOptional60.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList65);
        io.swagger.oas.annotations.servers.Server[] serverArray68 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional69 = io.swagger.jaxrs2.OperationParser.getServers(serverArray68);
        java.lang.String str70 = serverListOptional69.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray71 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional72 = io.swagger.jaxrs2.OperationParser.getServers(serverArray71);
        java.lang.String str73 = serverListOptional72.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray74 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional75 = io.swagger.jaxrs2.OperationParser.getServers(serverArray74);
        boolean boolean76 = serverListOptional75.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList77 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList78 = serverListOptional75.orElse(serverList77);
        io.swagger.oas.models.servers.Server[] serverArray79 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList80 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList80, serverArray79);
        java.util.List<io.swagger.oas.models.servers.Server> serverList82 = serverListOptional75.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList80);
        java.util.List<io.swagger.oas.models.servers.Server> serverList83 = serverListOptional72.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList80);
        java.util.List<io.swagger.oas.models.servers.Server> serverList84 = serverListOptional69.orElse(serverList83);
        java.util.List<io.swagger.oas.models.servers.Server> serverList85 = serverListOptional60.orElse(serverList83);
        java.util.List<io.swagger.oas.models.servers.Server> serverList86 = serverListOptional8.orElse(serverList85);
        java.util.List<io.swagger.oas.models.servers.Server> serverList87 = serverListOptional6.orElse(serverList86);
        boolean boolean88 = serverListOptional6.isPresent();
        boolean boolean89 = serverListOptional6.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverArrayOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverArray7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Optional.empty" + "'", str9, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray10);
        org.junit.Assert.assertNotNull(serverListOptional11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(serverList14);
        org.junit.Assert.assertNotNull(serverArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serverList18);
        org.junit.Assert.assertNotNull(serverList19);
        org.junit.Assert.assertNotNull(serverArray20);
        org.junit.Assert.assertNotNull(serverListOptional21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(serverList24);
        org.junit.Assert.assertNotNull(serverArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(serverList28);
        org.junit.Assert.assertNotNull(serverList29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(serverArray31);
        org.junit.Assert.assertNotNull(serverListOptional32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(serverList35);
        org.junit.Assert.assertNotNull(serverArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(serverList39);
        org.junit.Assert.assertNotNull(serverArray40);
        org.junit.Assert.assertNotNull(serverListOptional41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Optional.empty" + "'", str42, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray43);
        org.junit.Assert.assertNotNull(serverListOptional44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Optional.empty" + "'", str45, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray46);
        org.junit.Assert.assertNotNull(serverListOptional47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(serverList50);
        org.junit.Assert.assertNotNull(serverArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(serverList54);
        org.junit.Assert.assertNotNull(serverList55);
        org.junit.Assert.assertNotNull(serverList56);
        org.junit.Assert.assertNotNull(serverList57);
        org.junit.Assert.assertNotNull(serverList58);
        org.junit.Assert.assertNotNull(serverArray59);
        org.junit.Assert.assertNotNull(serverListOptional60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(serverList63);
        org.junit.Assert.assertNotNull(serverArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(serverList67);
        org.junit.Assert.assertNotNull(serverArray68);
        org.junit.Assert.assertNotNull(serverListOptional69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Optional.empty" + "'", str70, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray71);
        org.junit.Assert.assertNotNull(serverListOptional72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Optional.empty" + "'", str73, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray74);
        org.junit.Assert.assertNotNull(serverListOptional75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(serverList78);
        org.junit.Assert.assertNotNull(serverArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(serverList82);
        org.junit.Assert.assertNotNull(serverList83);
        org.junit.Assert.assertNotNull(serverList84);
        org.junit.Assert.assertNotNull(serverList85);
        org.junit.Assert.assertNotNull(serverList86);
        org.junit.Assert.assertNotNull(serverList87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test03708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03708");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator12 = schema9.getDiscriminator();
        io.swagger.oas.models.media.Schema schema14 = schema9.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03709");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.xml(xML15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        strComparableSchema17.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal28 = strComparableSchema17.getMultipleOf();
        java.lang.String str29 = strComparableSchema17.get$ref();
        java.lang.String[] strArray34 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        strComparableSchema17.setRequired((java.util.List<java.lang.String>) strList35);
        java.lang.Integer int38 = strComparableSchema17.getMaxLength();
        strComparableSchema17.setName("#/components/schemas/");
        strComparableSchema17.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema17.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema45 = schema16.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str47 = strComparableSchema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema48.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema46.not((io.swagger.oas.models.media.Schema) strComparableSchema48);
        strComparableSchema46.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema46.title("");
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema46.title("");
        java.math.BigDecimal bigDecimal58 = null;
        strComparableSchema46.setMaximum(bigDecimal58);
        schema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema46.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: \n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test03710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03710");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = schema3.addRequiredItem("hi!");
        java.lang.String str6 = schema3.getDescription();
        io.swagger.oas.models.media.Schema schema8 = schema3.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema8.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional.empty" + "'", str6, "Optional.empty");
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test03711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03711");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = strComparableSchema8.getExternalDocs();
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema8.setMaximum(bigDecimal24);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(externalDocumentation23);
    }

    @Test
    public void test03712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03712");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.multipleOf(bigDecimal12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strComparableSchema0.setProperties(strMap14);
        java.lang.String str16 = strComparableSchema0.getTitle();
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03713");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.format("*/*");
        java.lang.Object obj20 = strComparableSchema0.getExample();
        strComparableSchema0.setName("#/components/schemas/no description");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(obj20);
    }

    @Test
    public void test03714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03714");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator41 = strComparableSchema25.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        strComparableSchema42.setDescription("hi!");
        strComparableSchema42.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal53 = strComparableSchema42.getMultipleOf();
        java.lang.String str54 = strComparableSchema42.get$ref();
        java.lang.String[] strArray59 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        strComparableSchema42.setRequired((java.util.List<java.lang.String>) strList60);
        java.lang.Integer int63 = strComparableSchema42.getMaxLength();
        strComparableSchema42.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema42.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        schema67.setExternalDocs(externalDocumentation68);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema67.properties(strMap70);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = strComparableSchema73.getExternalDocs();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema73.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str79 = strComparableSchema78.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema80.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema78.not((io.swagger.oas.models.media.Schema) strComparableSchema80);
        strComparableSchema78.setDescription("hi!");
        strComparableSchema78.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema78.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap91 = strComparableSchema78.getProperties();
        io.swagger.oas.models.media.Schema schema92 = schema76.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema78);
        java.lang.Boolean boolean93 = strComparableSchema78.getDeprecated();
        schema67.addExtension("Optional.empty", (java.lang.Object) boolean93);
        io.swagger.oas.models.media.XML xML95 = null;
        schema67.setXml(xML95);
        io.swagger.oas.models.media.Schema schema97 = strComparableSchema25.not(schema67);
        java.util.Map<java.lang.String, java.lang.Object> strMap98 = schema67.getExtensions();
        java.lang.Boolean boolean99 = schema67.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(externalDocumentation74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(strMap91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(boolean93);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(strMap98);
        org.junit.Assert.assertNull(boolean99);
    }

    @Test
    public void test03715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03715");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        boolean boolean2 = serverListOptional1.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList4 = serverListOptional1.orElse(serverList3);
        io.swagger.oas.models.servers.Server[] serverArray5 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList6 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList6, serverArray5);
        java.util.List<io.swagger.oas.models.servers.Server> serverList8 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema9.setDescription("hi!");
        strComparableSchema9.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal20 = strComparableSchema9.getMultipleOf();
        java.math.BigDecimal bigDecimal21 = strComparableSchema9.getMultipleOf();
        java.lang.Boolean boolean22 = strComparableSchema9.getNullable();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema9.properties(strMap23);
        boolean boolean25 = serverListOptional1.equals((java.lang.Object) strComparableSchema9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema26.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema48.setDescription("hi!");
        strComparableSchema48.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema42.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.multipleOf(bigDecimal61);
        io.swagger.oas.models.media.Schema schema63 = schema35.not(schema62);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        schema62.setProperties(strMap64);
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = schema62.getExtensions();
        boolean boolean67 = serverListOptional1.equals((java.lang.Object) strMap66);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(serverList4);
        org.junit.Assert.assertNotNull(serverArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(serverList8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test03716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03716");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.not(schema13);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema12.getEnum();
        schema12.setMinItems((java.lang.Integer) 0);
        schema12.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str20 = schema12.getName();
        schema12.setDeprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        schema12.setProperties(strMap23);
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema12.discriminator(discriminator25);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str20, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test03717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03717");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        strComparableSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal41 = strComparableSchema30.getMultipleOf();
        java.lang.String str42 = strComparableSchema30.get$ref();
        java.lang.String[] strArray47 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        strComparableSchema30.setRequired((java.util.List<java.lang.String>) strList48);
        java.lang.Integer int51 = strComparableSchema30.getMaxLength();
        java.lang.Integer int52 = strComparableSchema30.getMaxProperties();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema30.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema30.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema56.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str66 = strComparableSchema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema67.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema65.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        strComparableSchema71.setDescription("hi!");
        strComparableSchema71.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema65.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema71);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        strComparableSchema61.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj86 = strComparableSchema61.getExample();
        io.swagger.oas.models.media.Schema schema87 = schema56.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = schema87.getExtensions();
        strComparableSchema0.setExtensions(strMap88);
        strComparableSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(obj86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(strMap88);
    }

    @Test
    public void test03718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03718");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema0.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.exclusiveMinimum((java.lang.Boolean) true);
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema9.getExtensions();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test03719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03719");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.lang.Integer int8 = strComparableSchema0.getMinItems();
        strComparableSchema0.set$ref(",");
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03720");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.lang.Integer int8 = strComparableSchema0.getMinItems();
        strComparableSchema0.set$ref(",");
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03721");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema schema5 = schema2.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.externalDocs(externalDocumentation6);
        schema7.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test03722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03722");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        java.lang.Object obj32 = schema31.getExample();
        schema31.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema31.writeOnly((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList37 = schema31.getRequired();
        schema31.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strList37);
    }

    @Test
    public void test03723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03723");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        strComparableSchema14.setDefault((java.lang.Object) strComparableSchema17);
        java.lang.Boolean boolean22 = strComparableSchema17.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.lang.String[] strArray41 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        strComparableSchema24.setRequired((java.util.List<java.lang.String>) strList42);
        java.lang.Integer int45 = strComparableSchema24.getMaxLength();
        strComparableSchema24.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema24.$ref("#/components/schemas/");
        strComparableSchema24.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal52 = null;
        strComparableSchema24.setMinimum(bigDecimal52);
        strComparableSchema24.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema24.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.XML xML59 = schema58.getXml();
        java.lang.Integer int60 = schema58.getMaxProperties();
        java.lang.Boolean boolean61 = schema58.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(xML59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(boolean61);
    }

    @Test
    public void test03724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03724");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = strComparableSchema0.getWriteOnly();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.discriminator(discriminator20);
        java.lang.Boolean boolean22 = strComparableSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema25.maxProperties((java.lang.Integer) 10);
        java.lang.Integer int30 = schema25.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str32 = strComparableSchema31.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema33);
        strComparableSchema31.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema31.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.multipleOf(bigDecimal66);
        io.swagger.oas.models.media.Schema schema68 = schema40.not(schema67);
        io.swagger.oas.models.media.Schema schema70 = schema67.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        java.lang.String str77 = strComparableSchema71.get$ref();
        java.lang.String[] strArray82 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional85 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema71.required((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema87 = schema67.required((java.util.List<java.lang.String>) strList83);
        java.util.Optional<java.util.Collection<java.lang.String>> strCollectionOptional88 = java.util.Optional.of((java.util.Collection<java.lang.String>) strList83);
        java.util.Optional<java.util.ArrayList<java.lang.String>> strListOptional89 = java.util.Optional.ofNullable(strList83);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional90 = java.util.Optional.of((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema91 = schema25.required((java.util.List<java.lang.String>) strList83);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList83);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(strCollectionOptional88);
        org.junit.Assert.assertNotNull(strListOptional89);
        org.junit.Assert.assertNotNull(strListOptional90);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test03725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03725");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        schema19.setProperties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema19.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        schema19.setExternalDocs(externalDocumentation24);
        schema19.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03726");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        java.math.BigDecimal bigDecimal26 = null;
        strComparableSchema18.setMaximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema18.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList30 = strComparableSchema18.getRequired();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required(strList30);
        java.lang.Integer int32 = schema31.getMaxProperties();
        schema31.setMinItems((java.lang.Integer) (-1));
        schema31.setMaxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal37 = schema31.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        schema31.setExternalDocs(externalDocumentation38);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(bigDecimal37);
    }

    @Test
    public void test03727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03727");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema37.deprecated((java.lang.Boolean) true);
        schema39.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test03728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03728");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        boolean boolean15 = serverListOptional14.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional14.orElse(serverList16);
        io.swagger.oas.models.servers.Server[] serverArray18 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList19 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList19, serverArray18);
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.lang.String str23 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray24 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray24);
        java.lang.String str26 = serverListOptional25.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray27 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional28 = io.swagger.jaxrs2.OperationParser.getServers(serverArray27);
        java.lang.String str29 = serverListOptional28.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        boolean boolean32 = serverListOptional31.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList33 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList34 = serverListOptional31.orElse(serverList33);
        io.swagger.oas.models.servers.Server[] serverArray35 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList36 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList36, serverArray35);
        java.util.List<io.swagger.oas.models.servers.Server> serverList38 = serverListOptional31.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional28.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList40 = serverListOptional25.orElse(serverList39);
        java.util.List<io.swagger.oas.models.servers.Server> serverList41 = serverListOptional1.orElse(serverList40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.properties(strMap43);
        java.lang.Boolean boolean45 = schema44.getUniqueItems();
        schema44.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj48 = schema44.getExample();
        io.swagger.oas.models.media.XML xML49 = schema44.getXml();
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema44.minimum(bigDecimal50);
        schema51.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = null;
        strComparableSchema56.setExtensions(strMap60);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        strComparableSchema56.setProperties(strMap62);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str65 = strComparableSchema64.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema66.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema64.not((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema64.setDescription("hi!");
        strComparableSchema64.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema64.setNullable((java.lang.Boolean) false);
        java.lang.String str77 = strComparableSchema64.get$ref();
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema64.name("");
        java.math.BigDecimal bigDecimal80 = null;
        strComparableSchema64.setMinimum(bigDecimal80);
        java.lang.Boolean boolean82 = strComparableSchema64.getReadOnly();
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema64.description("*/*");
        io.swagger.oas.models.media.Schema schema86 = strComparableSchema64.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList87 = strComparableSchema64.getRequired();
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema56.required(strList87);
        io.swagger.oas.models.media.Schema schema89 = schema51.example((java.lang.Object) strList87);
        boolean boolean90 = serverListOptional1.equals((java.lang.Object) schema51);
        boolean boolean91 = serverListOptional1.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList92 = serverListOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serverList21);
        org.junit.Assert.assertNotNull(serverList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Optional.empty" + "'", str23, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray24);
        org.junit.Assert.assertNotNull(serverListOptional25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Optional.empty" + "'", str26, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray27);
        org.junit.Assert.assertNotNull(serverListOptional28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Optional.empty" + "'", str29, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(serverList34);
        org.junit.Assert.assertNotNull(serverArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(serverList38);
        org.junit.Assert.assertNotNull(serverList39);
        org.junit.Assert.assertNotNull(serverList40);
        org.junit.Assert.assertNotNull(serverList41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(obj48);
        org.junit.Assert.assertNull(xML49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test03729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03729");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.discriminator(discriminator32);
        java.lang.Class<?> wildcardClass34 = schema33.getClass();
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional35 = java.util.Optional.of((java.lang.reflect.GenericDeclaration) wildcardClass34);
        java.util.Optional<java.lang.reflect.AnnotatedElement> annotatedElementOptional36 = java.util.Optional.ofNullable((java.lang.reflect.AnnotatedElement) wildcardClass34);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(genericDeclarationOptional35);
        org.junit.Assert.assertNotNull(annotatedElementOptional36);
    }

    @Test
    public void test03730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03730");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = schema9.getMaxProperties();
        schema9.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int13 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema schema15 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema17.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema22 = schema20.writeOnly((java.lang.Boolean) true);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test03731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03731");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        java.lang.Object obj27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.example(obj27);
        java.lang.Object obj29 = schema26.getExample();
        java.lang.Integer int30 = schema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema32 = schema26.addRequiredItem("no description");
        schema26.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal35 = schema26.getMaximum();
        java.lang.Boolean boolean36 = schema26.getReadOnly();
        schema26.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test03732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03732");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        schema9.setTitle(",");
        java.lang.Boolean boolean12 = schema9.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema15 = schema9.getNot();
        schema9.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = schema9.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test03733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03733");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.annotations.servers.Server server10 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray11 = new io.swagger.oas.annotations.servers.Server[] { server10 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray11);
        boolean boolean13 = serverListOptional12.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.lang.String str20 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema14.getNot();
        boolean boolean22 = serverListOptional12.equals((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema21.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema25 = schema2.not(schema24);
        io.swagger.oas.models.media.Schema schema27 = schema24.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema24.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema24.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema24.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema24.discriminator(discriminator34);
        io.swagger.oas.models.media.XML xML36 = schema35.getXml();
        io.swagger.oas.models.media.Schema schema38 = schema35.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertNotNull(serverListOptional12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(xML36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test03734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03734");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.lang.String str16 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema22.setExtensions(strMap26);
        strComparableSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = strComparableSchema30.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.uniqueItems((java.lang.Boolean) false);
        strComparableSchema22.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        schema18.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strComparableSchema22);
        java.lang.String str38 = schema18.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test03735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03735");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        java.lang.String[] strArray11 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional14 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.required((java.util.List<java.lang.String>) strList12);
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.type("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = schema19.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(externalDocumentation22);
    }

    @Test
    public void test03736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03736");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setMinItems((java.lang.Integer) (-1));
        java.lang.Integer int17 = strComparableSchema0.getMinProperties();
        java.lang.String str18 = strComparableSchema0.getName();
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test03737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03737");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        strComparableSchema13.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema13.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        schema38.setExternalDocs(externalDocumentation39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.properties(strMap41);
        boolean boolean43 = serverListOptional2.equals((java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray52 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional53 = io.swagger.jaxrs2.OperationParser.getTags(strArray52);
        schema46.setExample((java.lang.Object) tagSetOptional53);
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema46.xml(xML55);
        java.lang.String str57 = schema56.getTitle();
        io.swagger.oas.models.media.Schema schema59 = schema56.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean60 = serverListOptional2.equals((java.lang.Object) schema56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        strComparableSchema61.setDescription("hi!");
        strComparableSchema61.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal72 = strComparableSchema61.getMultipleOf();
        java.lang.String str73 = strComparableSchema61.get$ref();
        java.lang.String[] strArray78 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        strComparableSchema61.setRequired((java.util.List<java.lang.String>) strList79);
        java.lang.Integer int82 = strComparableSchema61.getMaxLength();
        strComparableSchema61.setName("#/components/schemas/");
        strComparableSchema61.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean87 = strComparableSchema61.getDeprecated();
        boolean boolean88 = serverListOptional2.equals((java.lang.Object) strComparableSchema61);
        boolean boolean89 = serverListOptional2.isPresent();
        boolean boolean90 = serverListOptional2.isPresent();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(tagSetOptional53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(bigDecimal72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNull(boolean87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test03738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03738");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.multipleOf(bigDecimal66);
        java.lang.Integer int68 = schema67.getMaxItems();
        strComparableSchema0.setAdditionalProperties(schema67);
        io.swagger.oas.models.media.Schema schema71 = schema67.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema73 = schema67.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int74 = schema73.getMaxItems();
        java.math.BigDecimal bigDecimal75 = schema73.getMinimum();
        io.swagger.oas.models.media.XML xML76 = schema73.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNull(xML76);
    }

    @Test
    public void test03739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03739");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.Boolean boolean4 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema6 = schema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema2.description("");
        schema2.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = schema2.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation11);
    }

    @Test
    public void test03740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03740");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        java.lang.Boolean boolean27 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema2.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema2.minimum(bigDecimal30);
        java.lang.Integer int32 = strComparableSchema2.getMinLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test03741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03741");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        strComparableSchema0.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema8.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        strComparableSchema8.setExternalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema8.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema8.maxProperties((java.lang.Integer) 1);
        java.lang.String str26 = strComparableSchema8.getType();
        strComparableSchema0.setNot((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema8.xml(xML28);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03742");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.XML xML6 = null;
        strComparableSchema0.setXml(xML6);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("#/components/schemas/");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.maximum(bigDecimal10);
        schema11.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03743");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema29.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        strComparableSchema29.setExternalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema29.format("");
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema4.additionalProperties(schema44);
        java.math.BigDecimal bigDecimal46 = null;
        schema45.setMultipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema45.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = schema45.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema51.setPattern("#/components/schemas/no description");
        java.lang.String str54 = schema51.getFormat();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test03744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03744");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.Boolean boolean4 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema6 = schema2.uniqueItems((java.lang.Boolean) false);
        schema2.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str9 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema12.setExtensions(strMap16);
        strComparableSchema12.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = strComparableSchema20.getExternalDocs();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.uniqueItems((java.lang.Boolean) false);
        strComparableSchema12.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.lang.String str27 = strComparableSchema12.getName();
        io.swagger.oas.models.media.Schema schema28 = schema2.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        schema28.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean31 = schema28.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test03745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03745");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.xml(xML12);
        java.lang.Integer int14 = schema9.getMinLength();
        java.lang.String str15 = schema9.getFormat();
        schema9.setReadOnly((java.lang.Boolean) true);
        schema9.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str20 = schema9.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test03746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03746");
        java.util.Optional<java.lang.String> strOptional1 = java.util.Optional.ofNullable("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test03747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03747");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.getNot();
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema0.setMinimum(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema27.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = strComparableSchema27.getProperties();
        java.lang.Boolean boolean41 = strComparableSchema27.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable42 = strComparableSchema27.getDefault();
        java.lang.String str43 = strComparableSchema27.getFormat();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema27.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = strComparableSchema57.getExternalDocs();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema57.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.uniqueItems((java.lang.Boolean) false);
        strComparableSchema49.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema57);
        schema45.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema0.example((java.lang.Object) schema45);
        io.swagger.oas.models.media.Schema schema67 = schema45.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema69 = schema45.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean70 = schema69.getExclusiveMinimum();
        schema69.setMinProperties((java.lang.Integer) 1);
        schema69.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(strComparable42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(externalDocumentation58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
    }

    @Test
    public void test03748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03748");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        schema2.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal26 = strComparableSchema15.getMultipleOf();
        java.lang.String str27 = strComparableSchema15.get$ref();
        java.lang.String[] strArray32 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        strComparableSchema15.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.lang.String str45 = strComparableSchema39.get$ref();
        strComparableSchema15.addExtension("#/components/schemas/", (java.lang.Object) str45);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema15.externalDocs(externalDocumentation47);
        io.swagger.oas.models.media.XML xML49 = null;
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema15.xml(xML49);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema15.title("*/*");
        schema2.setDefault((java.lang.Object) schema52);
        java.lang.String str54 = schema52.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test03749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03749");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.multipleOf(bigDecimal41);
        java.lang.String str43 = schema42.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test03750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03750");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.lang.Integer int8 = strComparableSchema0.getMinItems();
        strComparableSchema0.set$ref(",");
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.type("#/components/schemas/");
        java.lang.Class<?> wildcardClass13 = schema12.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test03751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03751");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema11.uniqueItems((java.lang.Boolean) false);
        schema16.setPattern("#/components/schemas/");
        schema16.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03752");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        io.swagger.oas.models.media.Schema schema14 = schema11.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema11.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        io.swagger.oas.models.media.Schema schema42 = schema41.getAdditionalProperties();
        schema16.setDefault((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema45 = schema41.minItems((java.lang.Integer) 10);
        schema45.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03753");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = null;
        io.swagger.oas.models.media.Schema schema5 = schema2.addProperties("*/*", schema4);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = schema2.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema27.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = strComparableSchema27.getProperties();
        java.lang.Boolean boolean41 = strComparableSchema27.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable42 = strComparableSchema27.getDefault();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema27.addRequiredItem("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = strComparableSchema27.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema27.type("");
        io.swagger.oas.models.media.XML xML48 = null;
        strComparableSchema27.setXml(xML48);
        strComparableSchema12.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema27);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(strComparable42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test03754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03754");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        io.swagger.oas.models.media.Schema schema16 = schema11.uniqueItems((java.lang.Boolean) false);
        schema16.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema20 = schema16.deprecated((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = schema16.getEnum();
        java.lang.String[] strArray26 = new java.lang.String[] { ",", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        io.swagger.oas.models.media.Schema schema29 = schema16.required((java.util.List<java.lang.String>) strList27);
        java.lang.String str30 = schema29.getType();
        schema29.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema29.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema34.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal37 = schema34.getMinimum();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strComparableList21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
    }

    @Test
    public void test03755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03755");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        boolean boolean15 = serverListOptional14.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional14.orElse(serverList16);
        io.swagger.oas.models.servers.Server[] serverArray18 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList19 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList19, serverArray18);
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.lang.String str23 = serverListOptional1.toString();
        java.lang.String str24 = serverListOptional1.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        java.lang.Boolean boolean31 = strComparableSchema25.getReadOnly();
        java.util.List<java.lang.String> strList32 = strComparableSchema25.getRequired();
        java.math.BigDecimal bigDecimal33 = null;
        strComparableSchema25.setMaximum(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema25.maximum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema36.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema36.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        java.lang.Boolean boolean47 = strComparableSchema41.getReadOnly();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema41.maxLength((java.lang.Integer) 10);
        strComparableSchema41.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema36.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        schema52.setDiscriminator(discriminator53);
        boolean boolean55 = serverListOptional1.equals((java.lang.Object) discriminator53);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serverList21);
        org.junit.Assert.assertNotNull(serverList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Optional.empty" + "'", str23, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Optional.empty" + "'", str24, "Optional.empty");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test03756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03756");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema schema15 = schema13.description("*/*");
        io.swagger.oas.models.media.Schema schema16 = schema15.getNot();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema15.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal21 = schema20.getMaximum();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema20.minimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema20.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03757");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        io.swagger.oas.models.media.XML xML8 = null;
        schema5.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema5.$ref("Optional.empty");
        io.swagger.oas.models.media.Schema schema13 = schema11.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema11.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        schema17.setType("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03758");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema22.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = strComparableSchema22.getProperties();
        io.swagger.oas.models.media.Schema schema36 = schema20.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.lang.Boolean boolean37 = strComparableSchema22.getDeprecated();
        io.swagger.oas.models.media.Schema schema38 = schema15.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.lang.Boolean boolean39 = strComparableSchema22.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
    }

    @Test
    public void test03759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03759");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        strComparableSchema25.setNullable((java.lang.Boolean) false);
        java.lang.Integer int43 = strComparableSchema25.getMinItems();
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema25.multipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema45.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test03760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03760");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        java.lang.Object obj32 = schema31.getExample();
        schema31.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema31.writeOnly((java.lang.Boolean) false);
        schema31.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03761");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("Optional.empty");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.multipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema13.minLength((java.lang.Integer) 0);
        schema15.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional.empty");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03762");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema0.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation14);
        java.lang.Object obj17 = null;
        strComparableSchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", obj17);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test03763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03763");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.Boolean boolean4 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema6 = schema2.uniqueItems((java.lang.Boolean) false);
        schema2.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str9 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema12.setExtensions(strMap16);
        strComparableSchema12.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = strComparableSchema20.getExternalDocs();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.uniqueItems((java.lang.Boolean) false);
        strComparableSchema12.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema20);
        java.lang.String str27 = strComparableSchema12.getName();
        io.swagger.oas.models.media.Schema schema28 = schema2.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList29 = schema2.getEnum();
        java.lang.Integer int30 = schema2.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strComparableList29);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test03764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03764");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema17.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema22.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = strComparableSchema22.getProperties();
        io.swagger.oas.models.media.Schema schema36 = schema20.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.lang.Boolean boolean37 = strComparableSchema22.getDeprecated();
        io.swagger.oas.models.media.Schema schema38 = schema15.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema22.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.writeOnly((java.lang.Boolean) false);
        schema44.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema44.title("#/components/schemas/");
        schema48.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.xml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema52.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean55 = schema52.getWriteOnly();
        schema40.addExtension("#/components/schemas/no description", (java.lang.Object) boolean55);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + false + "'", boolean55, false);
    }

    @Test
    public void test03765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03765");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema16.getNot();
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 1);
        schema19.setTitle("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str22 = schema19.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test03766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03766");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema24.pattern(",");
        schema42.setWriteOnly((java.lang.Boolean) false);
        schema42.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema42.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        java.lang.String[] strArray54 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        strComparableSchema51.setRequired((java.util.List<java.lang.String>) strList55);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = strComparableSchema51.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema62.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema62.maximum(bigDecimal65);
        io.swagger.oas.annotations.servers.Server server67 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray68 = new io.swagger.oas.annotations.servers.Server[] { server67 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional69 = io.swagger.jaxrs2.OperationParser.getServers(serverArray68);
        boolean boolean70 = serverListOptional69.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str72 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema73.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema71.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        java.lang.String str77 = strComparableSchema71.get$ref();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema71.getNot();
        boolean boolean79 = serverListOptional69.equals((java.lang.Object) schema78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema78.properties(strMap80);
        io.swagger.oas.models.media.Schema schema83 = schema78.uniqueItems((java.lang.Boolean) false);
        schema83.setName("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator86 = schema83.getDiscriminator();
        schema83.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean89 = schema83.getWriteOnly();
        io.swagger.oas.models.media.Schema schema90 = schema66.not(schema83);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema90.properties(strMap91);
        strComparableSchema51.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema90);
        schema90.setTitle("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        boolean boolean96 = schema50.equals((java.lang.Object) "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Class<?> wildcardClass97 = schema50.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(externalDocumentation58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(serverArray68);
        org.junit.Assert.assertNotNull(serverListOptional69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(discriminator86);
        org.junit.Assert.assertEquals("'" + boolean89 + "' != '" + false + "'", boolean89, false);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test03767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03767");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator13 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.properties(strMap15);
        java.lang.Boolean boolean17 = schema16.getUniqueItems();
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = null;
        schema16.setMultipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema16.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.example((java.lang.Object) schema23);
        schema24.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03768");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        schema11.set$ref("no description");
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Discriminator discriminator16 = schema15.getDiscriminator();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("");
        java.lang.Integer int19 = schema18.getMaxProperties();
        schema18.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test03769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03769");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.media.Content[] contentArray13 = null;
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional15 = io.swagger.jaxrs2.OperationParser.getContents(contentArray13, components14);
        boolean boolean16 = serverListOptional1.equals((java.lang.Object) contentArray13);
        boolean boolean17 = serverListOptional1.isPresent();
        java.lang.Object obj18 = null;
        boolean boolean19 = serverListOptional1.equals(obj18);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(contentOptional15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test03770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03770");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Integer int15 = strComparableSchema0.getMinLength();
        strComparableSchema0.setName("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema0.getExternalDocs();
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.minItems((java.lang.Integer) 100);
        java.lang.Boolean boolean23 = schema22.getExclusiveMinimum();
        java.lang.Integer int24 = schema22.getMinLength();
        schema22.setMaxItems((java.lang.Integer) 1);
        java.lang.Integer int27 = schema22.getMinProperties();
        io.swagger.oas.models.media.XML xML28 = null;
        schema22.setXml(xML28);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test03771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03771");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.name("hi!");
        strComparableSchema6.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema31.externalDocs(externalDocumentation54);
        java.lang.Object obj56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.example(obj56);
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.discriminator(discriminator58);
        io.swagger.oas.models.media.Schema schema61 = schema59.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str63 = strComparableSchema62.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema64.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema62.not((io.swagger.oas.models.media.Schema) strComparableSchema64);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = null;
        strComparableSchema64.setExtensions(strMap68);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        strComparableSchema64.setProperties(strMap70);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str73 = strComparableSchema72.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema74.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema72.not((io.swagger.oas.models.media.Schema) strComparableSchema74);
        strComparableSchema72.setDescription("hi!");
        strComparableSchema72.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema72.setNullable((java.lang.Boolean) false);
        java.lang.String str85 = strComparableSchema72.get$ref();
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema72.name("");
        java.math.BigDecimal bigDecimal88 = null;
        strComparableSchema72.setMinimum(bigDecimal88);
        java.lang.Boolean boolean90 = strComparableSchema72.getReadOnly();
        io.swagger.oas.models.media.Schema schema92 = strComparableSchema72.description("*/*");
        io.swagger.oas.models.media.Schema schema94 = strComparableSchema72.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList95 = strComparableSchema72.getRequired();
        io.swagger.oas.models.media.Schema schema96 = strComparableSchema64.required(strList95);
        io.swagger.oas.models.media.Schema schema97 = schema59.required(strList95);
        io.swagger.oas.models.media.Schema schema98 = strComparableSchema6.required(strList95);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(boolean90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test03772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03772");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        java.lang.String str18 = strComparableSchema0.getType();
        java.lang.Boolean boolean19 = strComparableSchema0.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03773");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        strComparableSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean26 = strComparableSchema0.getDeprecated();
        java.lang.Integer int27 = strComparableSchema0.getMinItems();
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test03774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03774");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.$ref(",");
        io.swagger.oas.models.media.Schema schema34 = schema32.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03775");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList14 = strComparableSchema0.getRequired();
        java.lang.Integer int15 = strComparableSchema0.getMinLength();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03776");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema17.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal38 = strComparableSchema27.getMultipleOf();
        java.lang.String str39 = strComparableSchema27.get$ref();
        java.lang.String[] strArray44 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        strComparableSchema27.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.Integer int48 = strComparableSchema27.getMaxLength();
        strComparableSchema27.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema27.getNot();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema27.deprecated((java.lang.Boolean) false);
        schema53.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setAdditionalProperties(schema53);
        schema53.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema53.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test03777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03777");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        java.lang.Boolean boolean4 = schema2.getDeprecated();
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.properties(strMap8);
        java.lang.Boolean boolean10 = schema9.getUniqueItems();
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj13 = schema9.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema9.setExternalDocs(externalDocumentation14);
        java.lang.String str16 = schema9.toString();
        io.swagger.oas.models.media.XML xML17 = null;
        schema9.setXml(xML17);
        schema6.setAdditionalProperties(schema9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        strComparableSchema20.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal31 = strComparableSchema20.getMultipleOf();
        java.lang.String str32 = strComparableSchema20.get$ref();
        java.lang.String[] strArray37 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        strComparableSchema20.setRequired((java.util.List<java.lang.String>) strList38);
        java.lang.Integer int41 = strComparableSchema20.getMaxLength();
        strComparableSchema20.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        strComparableSchema44.setDescription("hi!");
        strComparableSchema44.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal55 = strComparableSchema44.getMultipleOf();
        java.lang.String str56 = strComparableSchema44.get$ref();
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema44.maximum(bigDecimal57);
        io.swagger.oas.models.media.Discriminator discriminator59 = strComparableSchema44.getDiscriminator();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema20.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str74 = strComparableSchema73.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema75.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema73.not((io.swagger.oas.models.media.Schema) strComparableSchema75);
        strComparableSchema73.setDescription("hi!");
        strComparableSchema73.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema67.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema73);
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema67);
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema85.multipleOf(bigDecimal86);
        java.lang.Integer int88 = schema87.getMaxItems();
        strComparableSchema20.setAdditionalProperties(schema87);
        io.swagger.oas.models.media.Schema schema91 = schema87.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema93 = schema87.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema94 = schema6.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator95 = null;
        io.swagger.oas.models.media.Schema schema96 = schema6.discriminator(discriminator95);
        io.swagger.oas.models.media.Schema schema98 = schema96.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema99 = schema98.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(int88);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test03778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03778");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal12 = schema2.getMinimum();
        schema2.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.writeOnly((java.lang.Boolean) false);
        schema21.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema18.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema27 = schema25.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int28 = schema27.getMinProperties();
        java.math.BigDecimal bigDecimal29 = null;
        schema27.setMinimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema31 = schema2.not(schema27);
        java.lang.Boolean boolean32 = schema27.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema34 = schema27.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean38 = schema37.getNullable();
        schema27.setAdditionalProperties(schema37);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
    }

    @Test
    public void test03779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03779");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema schema10 = schema6.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = schema10.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test03780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03780");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML41 = schema40.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema49.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema45.externalDocs(externalDocumentation68);
        java.lang.Object obj70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.example(obj70);
        java.lang.Object obj72 = schema69.getExample();
        io.swagger.oas.models.media.Schema schema74 = schema69.deprecated((java.lang.Boolean) true);
        schema40.addExtension("#/components/schemas/", (java.lang.Object) schema74);
        java.lang.String str76 = schema40.getFormat();
        io.swagger.oas.models.media.Schema schema78 = schema40.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean79 = schema40.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema81 = schema40.minItems((java.lang.Integer) (-1));
        java.lang.Class<?> wildcardClass82 = schema81.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test03781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03781");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = strComparableSchema8.getExternalDocs();
        io.swagger.oas.models.media.XML xML24 = strComparableSchema8.getXml();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema8.writeOnly((java.lang.Boolean) true);
        strComparableSchema8.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal40 = strComparableSchema29.getMultipleOf();
        java.lang.String str41 = strComparableSchema29.get$ref();
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema29.maximum(bigDecimal42);
        io.swagger.oas.models.media.Discriminator discriminator44 = strComparableSchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema29.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal47 = null;
        strComparableSchema29.setMultipleOf(bigDecimal47);
        java.util.List<java.lang.String> strList49 = strComparableSchema29.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        strComparableSchema50.setDescription("hi!");
        strComparableSchema50.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema50.multipleOf(bigDecimal61);
        schema62.setExample((java.lang.Object) "hi!");
        schema62.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean67 = schema62.getReadOnly();
        java.lang.Boolean boolean68 = schema62.getNullable();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = schema62.getExtensions();
        strComparableSchema29.setExtensions(strMap69);
        strComparableSchema8.setExtensions(strMap69);
        java.lang.Boolean boolean72 = strComparableSchema8.getWriteOnly();
        java.lang.String str73 = strComparableSchema8.get$ref();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNull(xML24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(discriminator44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertEquals("'" + boolean72 + "' != '" + true + "'", boolean72, true);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test03782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03782");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.nullable((java.lang.Boolean) true);
        schema26.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        schema26.set$ref(",");
        io.swagger.oas.models.media.Schema schema32 = schema26.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema26.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.maximum(bigDecimal35);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03783");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema24.setExternalDocs(externalDocumentation25);
        java.lang.String str27 = schema24.getFormat();
        io.swagger.oas.models.media.Schema schema29 = schema24.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = schema24.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test03784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03784");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        java.lang.Integer int17 = schema16.getMaxLength();
        java.lang.Boolean boolean18 = schema16.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema21.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.uniqueItems((java.lang.Boolean) false);
        schema26.setDescription("");
        schema26.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        schema26.setExternalDocs(externalDocumentation31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema26.multipleOf(bigDecimal33);
        schema34.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema38.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList44 = strComparableSchema43.getRequired();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema43.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal58 = strComparableSchema47.getMultipleOf();
        java.lang.String str59 = strComparableSchema47.get$ref();
        java.lang.String[] strArray64 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        strComparableSchema47.setRequired((java.util.List<java.lang.String>) strList65);
        java.lang.Integer int68 = strComparableSchema47.getMaxLength();
        strComparableSchema47.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema38.setDefault((java.lang.Object) strComparableSchema47);
        io.swagger.oas.models.media.Discriminator discriminator73 = null;
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema47.discriminator(discriminator73);
        schema34.addExtension("no description", (java.lang.Object) schema74);
        java.util.List<java.lang.String> strList76 = schema74.getRequired();
        io.swagger.oas.models.media.XML xML77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema74.xml(xML77);
        java.lang.String str79 = schema78.get$ref();
        schema78.setNullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = schema78.getExtensions();
        schema16.setExtensions(strMap82);
        schema16.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(strMap82);
    }

    @Test
    public void test03785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03785");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema16.getNot();
        io.swagger.oas.models.media.Schema schema19 = schema17.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema17.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList22 = schema17.getRequired();
        schema17.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = schema17.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema17.$ref("Optional.empty");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test03786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03786");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.math.BigDecimal bigDecimal11 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema schema13 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test03787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03787");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String str2 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = strComparableSchema5.getExternalDocs();
        java.lang.Integer int7 = strComparableSchema5.getMinProperties();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema5.maxProperties((java.lang.Integer) (-1));
        strComparableSchema5.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema5.minLength((java.lang.Integer) 100);
        schema13.setMaxItems((java.lang.Integer) 10);
        schema4.setAdditionalProperties(schema13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        strComparableSchema29.setDescription("hi!");
        strComparableSchema29.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema29);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema19.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.multipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = schema43.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema46.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        strComparableSchema54.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema54.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator67 = strComparableSchema54.getDiscriminator();
        strComparableSchema46.addExtension("Optional.empty", (java.lang.Object) strComparableSchema54);
        java.lang.Boolean boolean69 = strComparableSchema54.getDeprecated();
        java.lang.Boolean boolean70 = strComparableSchema54.getExclusiveMinimum();
        io.swagger.oas.models.media.Discriminator discriminator71 = strComparableSchema54.getDiscriminator();
        boolean boolean72 = schema43.equals((java.lang.Object) strComparableSchema54);
        schema4.setDefault((java.lang.Object) schema43);
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema4.maximum(bigDecimal74);
        schema75.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(externalDocumentation6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(discriminator67);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNull(discriminator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test03788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03788");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal40 = schema37.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal40);
    }

    @Test
    public void test03789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03789");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.String str25 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.Integer int47 = strComparableSchema26.getMaxLength();
        java.lang.Integer int48 = strComparableSchema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema26.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema51.setDescription("hi!");
        strComparableSchema51.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal62 = strComparableSchema51.getMultipleOf();
        java.lang.String str63 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema schema64 = schema50.example((java.lang.Object) strComparableSchema51);
        java.lang.Integer int65 = schema64.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        java.lang.String str72 = strComparableSchema66.get$ref();
        java.lang.String[] strArray77 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional80 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema66.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema82 = schema64.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema0.required((java.util.List<java.lang.String>) strList78);
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema0.maximum(bigDecimal84);
        strComparableSchema0.setType("Optional.empty");
        io.swagger.oas.models.media.XML xML88 = null;
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema0.xml(xML88);
        io.swagger.oas.models.media.Schema schema91 = schema89.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str25, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test03790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03790");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.properties(strMap33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        strComparableSchema10.setExternalDocs(externalDocumentation35);
        java.lang.Object obj37 = strComparableSchema10.getExample();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema10.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema39.writeOnly((java.lang.Boolean) false);
        java.lang.String str42 = schema39.getType();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema39.multipleOf(bigDecimal43);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test03791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03791");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.not(schema13);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema12.getEnum();
        schema12.setMinItems((java.lang.Integer) 0);
        schema12.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema12.externalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        java.math.BigDecimal bigDecimal31 = null;
        strComparableSchema23.setMaximum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema23.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema23.multipleOf(bigDecimal35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        strComparableSchema23.setProperties(strMap37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema23.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal41 = strComparableSchema23.getMinimum();
        io.swagger.oas.models.media.Schema schema42 = schema21.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema23);
        io.swagger.oas.models.media.Schema schema44 = schema21.title("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str47 = schema21.getName();
        io.swagger.oas.models.media.Schema schema49 = schema21.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str47, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03792");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional3 = java.util.Optional.of(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        org.junit.Assert.assertNotNull(linkArray0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(linkArrayOptional3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test03793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03793");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema21.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator34 = strComparableSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.properties(strMap36);
        java.lang.Boolean boolean38 = schema37.getUniqueItems();
        schema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = null;
        schema37.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema37.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema21.example((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema schema46 = schema19.addProperties("*/*", (io.swagger.oas.models.media.Schema) strComparableSchema21);
        java.lang.Integer int47 = schema46.getMinItems();
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema46.maximum(bigDecimal48);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test03794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03794");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        java.lang.Integer int39 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.lang.String str46 = strComparableSchema40.get$ref();
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional54 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema40.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = schema38.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema38.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = schema38.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema60.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema62.setExclusiveMinimum((java.lang.Boolean) false);
        schema62.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test03795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03795");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = strComparableSchema15.getExternalDocs();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema15.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = null;
        strComparableSchema25.setExtensions(strMap29);
        strComparableSchema25.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = strComparableSchema33.getExternalDocs();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema33.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.uniqueItems((java.lang.Boolean) false);
        strComparableSchema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.properties(strMap41);
        java.lang.Boolean boolean43 = schema42.getUniqueItems();
        schema42.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal46 = null;
        schema42.setMultipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema42.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema49.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.xml(xML52);
        strComparableSchema25.setNot(schema49);
        strComparableSchema25.setMinProperties((java.lang.Integer) 100);
        strComparableSchema25.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema62.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema60.not((io.swagger.oas.models.media.Schema) strComparableSchema62);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str73 = strComparableSchema72.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema74.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema72.not((io.swagger.oas.models.media.Schema) strComparableSchema74);
        strComparableSchema72.setDescription("hi!");
        strComparableSchema72.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema66.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema72);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema62.not((io.swagger.oas.models.media.Schema) strComparableSchema66);
        strComparableSchema66.setPattern("hi!");
        java.math.BigDecimal bigDecimal87 = null;
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema66.multipleOf(bigDecimal87);
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema25.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema88);
        strComparableSchema15.setDefault((java.lang.Object) schema89);
        strComparableSchema0.setExample((java.lang.Object) schema89);
        io.swagger.oas.models.media.Discriminator discriminator92 = null;
        strComparableSchema0.setDiscriminator(discriminator92);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test03796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03796");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        java.util.List<java.lang.String> strList8 = strComparableSchema2.getRequired();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema12.setNullable((java.lang.Boolean) false);
        java.lang.String str25 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema12.name("");
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema12.setMinimum(bigDecimal28);
        java.lang.Boolean boolean30 = strComparableSchema12.getReadOnly();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema12.description("*/*");
        io.swagger.oas.models.media.Schema schema34 = schema32.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema2.addProperties("no description", schema32);
        schema32.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test03797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03797");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("Optional.empty");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema15.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema22.setExtensions(strMap26);
        strComparableSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema22.minimum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema31.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        schema33.setProperties(strMap34);
        io.swagger.oas.models.media.Schema schema37 = schema33.maxLength((java.lang.Integer) 100);
        schema33.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema33.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int42 = schema33.getMinProperties();
        io.swagger.oas.models.media.Schema schema43 = schema15.additionalProperties(schema33);
        io.swagger.oas.models.media.Schema schema45 = schema15.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03798");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML41 = schema40.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str44 = strComparableSchema43.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema45.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        strComparableSchema55.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema49.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema55);
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema45.externalDocs(externalDocumentation68);
        java.lang.Object obj70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.example(obj70);
        java.lang.Object obj72 = schema69.getExample();
        io.swagger.oas.models.media.Schema schema74 = schema69.deprecated((java.lang.Boolean) true);
        schema40.addExtension("#/components/schemas/", (java.lang.Object) schema74);
        java.lang.Integer int76 = schema40.getMaxItems();
        io.swagger.oas.models.media.Schema schema77 = schema40.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema79 = schema40.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema81 = schema40.exclusiveMaximum((java.lang.Boolean) false);
        schema81.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(xML41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test03799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03799");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema8.description("Optional.empty");
        schema7.setDefault((java.lang.Object) strComparableSchema8);
        java.util.List<java.lang.String> strList13 = schema7.getRequired();
        io.swagger.oas.models.media.Schema schema15 = schema7.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema7.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03800");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema37 = schema33.addRequiredItem("Optional.empty");
        java.lang.Boolean boolean38 = schema37.getReadOnly();
        java.lang.Boolean boolean39 = schema37.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.discriminator(discriminator40);
        java.lang.String str42 = schema41.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test03801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03801");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.lang.String str10 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass15 = schema12.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test03802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03802");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.xml(xML6);
        schema7.setMaxItems((java.lang.Integer) (-1));
        schema7.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal12 = schema7.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema13.setNullable((java.lang.Boolean) false);
        java.lang.String str26 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema13.name("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = strComparableSchema30.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        strComparableSchema35.setDescription("hi!");
        strComparableSchema35.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = strComparableSchema35.getProperties();
        io.swagger.oas.models.media.Schema schema49 = schema33.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema35);
        java.lang.Boolean boolean50 = strComparableSchema35.getDeprecated();
        io.swagger.oas.models.media.Schema schema51 = schema28.addProperties("Optional.empty", (io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema schema52 = schema7.not(schema28);
        io.swagger.oas.models.media.Schema schema54 = schema28.maxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean55 = schema28.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + false + "'", boolean55, false);
    }

    @Test
    public void test03803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03803");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maximum(bigDecimal18);
        io.swagger.oas.annotations.servers.Server[] serverArray20 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional22 = java.util.Optional.ofNullable(serverArray20);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        io.swagger.oas.annotations.servers.Server server25 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray26 = new io.swagger.oas.annotations.servers.Server[] { server25 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional27 = io.swagger.jaxrs2.OperationParser.getServers(serverArray26);
        boolean boolean28 = serverListOptional27.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        java.lang.String str35 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema29.getNot();
        boolean boolean37 = serverListOptional27.equals((java.lang.Object) schema36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema36.multipleOf(bigDecimal38);
        boolean boolean40 = serverListOptional24.equals((java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema schema41 = schema19.example((java.lang.Object) serverListOptional24);
        io.swagger.oas.models.media.Schema schema43 = schema41.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(serverArray20);
        org.junit.Assert.assertNotNull(serverListOptional21);
        org.junit.Assert.assertNotNull(serverArrayOptional22);
        org.junit.Assert.assertNotNull(serverListOptional23);
        org.junit.Assert.assertNotNull(serverListOptional24);
        org.junit.Assert.assertNotNull(serverArray26);
        org.junit.Assert.assertNotNull(serverListOptional27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test03804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03804");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.XML xML6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.xml(xML6);
        java.lang.String str8 = strComparableSchema0.getFormat();
        strComparableSchema0.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.discriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema16 = schema12.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema18 = schema16.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.externalDocs(externalDocumentation19);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03805");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.title("no description");
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.properties(strMap28);
        java.lang.Boolean boolean30 = schema29.getNullable();
        java.lang.String str31 = schema29.getType();
        schema29.setTitle("#/components/schemas/");
        schema29.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema29.addRequiredItem("*/*");
        strComparableSchema0.setExample((java.lang.Object) schema29);
        java.math.BigDecimal bigDecimal39 = strComparableSchema0.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal39);
    }

    @Test
    public void test03806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03806");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal16 = strComparableSchema5.getMultipleOf();
        java.lang.String str17 = strComparableSchema5.get$ref();
        java.lang.String[] strArray22 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        strComparableSchema5.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.Integer int26 = strComparableSchema5.getMaxLength();
        java.lang.Integer int27 = strComparableSchema5.getMaxProperties();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal41 = strComparableSchema30.getMultipleOf();
        java.lang.String str42 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema schema43 = schema29.example((java.lang.Object) strComparableSchema30);
        strComparableSchema0.setNot(schema43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema0.deprecated((java.lang.Boolean) true);
        strComparableSchema0.setPattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema52.setDescription("hi!");
        strComparableSchema52.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = strComparableSchema52.getProperties();
        java.lang.Boolean boolean66 = strComparableSchema52.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable67 = strComparableSchema52.getDefault();
        java.lang.Object obj68 = strComparableSchema52.getExample();
        strComparableSchema0.addExtension("hi!", (java.lang.Object) strComparableSchema52);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema0.format("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(strComparable67);
        org.junit.Assert.assertNull(obj68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test03807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03807");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        java.lang.Integer int4 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test03808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03808");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.discriminator(discriminator14);
        schema15.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema15.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.externalDocs(externalDocumentation22);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03809");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema2.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema2.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema2.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema2.minProperties((java.lang.Integer) (-1));
        java.lang.String str17 = schema16.getName();
        schema16.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test03810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03810");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        boolean boolean4 = serverListOptional2.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional2.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test03811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03811");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.xml(xML12);
        java.lang.Integer int14 = schema9.getMinLength();
        java.lang.String str15 = schema9.getFormat();
        schema9.setDeprecated((java.lang.Boolean) false);
        java.lang.String str18 = schema9.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test03812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03812");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        strComparableSchema0.addExtension("#/components/schemas/", (java.lang.Object) str30);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maximum(bigDecimal32);
        io.swagger.oas.models.media.XML xML34 = strComparableSchema0.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
    }

    @Test
    public void test03813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03813");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        strComparableSchema24.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal35 = strComparableSchema24.getMultipleOf();
        java.lang.String str36 = strComparableSchema24.get$ref();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema24.maximum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = strComparableSchema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema0.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema47.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema43.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.multipleOf(bigDecimal66);
        java.lang.Integer int68 = schema67.getMaxItems();
        strComparableSchema0.setAdditionalProperties(schema67);
        io.swagger.oas.models.media.Discriminator discriminator70 = strComparableSchema0.getDiscriminator();
        java.lang.Object obj71 = null;
        strComparableSchema0.setDefault(obj71);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema0.maxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal75 = null;
        strComparableSchema0.setMultipleOf(bigDecimal75);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema0.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean79 = strComparableSchema0.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean79);
    }

    @Test
    public void test03814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03814");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        java.lang.Boolean boolean4 = schema2.getDeprecated();
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.properties(strMap8);
        java.lang.Boolean boolean10 = schema9.getUniqueItems();
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj13 = schema9.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema9.setExternalDocs(externalDocumentation14);
        java.lang.String str16 = schema9.toString();
        io.swagger.oas.models.media.XML xML17 = null;
        schema9.setXml(xML17);
        schema6.setAdditionalProperties(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema9.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema21.setNullable((java.lang.Boolean) false);
        java.lang.String str34 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema21.name("");
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = null;
        strComparableSchema21.setExtensions(strMap37);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema21.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.externalDocs(externalDocumentation41);
        boolean boolean43 = schema9.equals((java.lang.Object) schema40);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test03815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03815");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.List<java.lang.String> strList20 = strComparableSchema5.getRequired();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema5.exclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema5.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03816");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema10.nullable((java.lang.Boolean) true);
        java.lang.String str34 = strComparableSchema10.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        strComparableSchema47.setDescription("hi!");
        strComparableSchema47.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema41.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        strComparableSchema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema10.xml(xML61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str64 = strComparableSchema63.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema63.not((io.swagger.oas.models.media.Schema) strComparableSchema65);
        java.lang.String str69 = strComparableSchema63.get$ref();
        java.lang.String[] strArray74 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional77 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList75);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema63.required((java.util.List<java.lang.String>) strList75);
        java.util.Optional<java.lang.Cloneable> cloneableOptional79 = java.util.Optional.of((java.lang.Cloneable) strList75);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList75);
        strComparableSchema10.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema10.externalDocs(externalDocumentation83);
        schema84.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(cloneableOptional79);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test03817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03817");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal16 = strComparableSchema5.getMultipleOf();
        java.lang.String str17 = strComparableSchema5.get$ref();
        java.lang.String[] strArray22 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        strComparableSchema5.setRequired((java.util.List<java.lang.String>) strList23);
        java.lang.Integer int26 = strComparableSchema5.getMaxLength();
        java.lang.Integer int27 = strComparableSchema5.getMaxProperties();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        strComparableSchema30.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal41 = strComparableSchema30.getMultipleOf();
        java.lang.String str42 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema schema43 = schema29.example((java.lang.Object) strComparableSchema30);
        strComparableSchema0.setNot(schema43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema0.multipleOf(bigDecimal45);
        java.lang.String str47 = schema46.get$ref();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test03818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03818");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.lang.Cloneable> cloneableOptional2 = java.util.Optional.of((java.lang.Cloneable) serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema6.maxItems((java.lang.Integer) 10);
        schema9.setMinItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean12 = schema9.getExclusiveMinimum();
        boolean boolean13 = serverListOptional5.equals((java.lang.Object) boolean12);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(cloneableOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test03819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03819");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        strComparableSchema15.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema15.setNullable((java.lang.Boolean) false);
        java.lang.String str28 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema15.name("");
        java.math.BigDecimal bigDecimal31 = null;
        strComparableSchema15.setMinimum(bigDecimal31);
        java.lang.String str33 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema14.additionalProperties(schema35);
        java.lang.Boolean boolean37 = schema36.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test03820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03820");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        strComparableSchema0.setPattern(",");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03821");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.writeOnly((java.lang.Boolean) false);
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema3.additionalProperties(schema6);
        java.lang.String str11 = schema6.getPattern();
        io.swagger.oas.models.media.Schema schema13 = schema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setFormat("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema16.description("");
        io.swagger.oas.models.media.Schema schema27 = schema25.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int28 = schema27.getMaxProperties();
        io.swagger.oas.models.media.Schema schema29 = schema6.example((java.lang.Object) int28);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03822");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        java.math.BigDecimal bigDecimal24 = null;
        strComparableSchema16.setMaximum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema16.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema16.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        java.lang.String str56 = strComparableSchema50.get$ref();
        java.lang.String[] strArray61 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional64 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema50.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema66 = schema49.required((java.util.List<java.lang.String>) strList62);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional67 = java.util.Optional.of((java.util.AbstractCollection<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema0.required((java.util.List<java.lang.String>) strList62);
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        strComparableSchema0.setName("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean73 = strComparableSchema0.getExclusiveMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strCollectionOptional67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean73);
    }

    @Test
    public void test03823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03823");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.maximum(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.externalDocs(externalDocumentation9);
        java.lang.Integer int11 = schema8.getMaxItems();
        schema8.setMaxLength((java.lang.Integer) (-1));
        java.lang.Integer int14 = schema8.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test03824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03824");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema24.setExternalDocs(externalDocumentation25);
        schema24.setPattern("Optional.empty");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = schema24.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        schema33.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema33.addRequiredItem("*/*");
        schema41.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema45 = schema41.exclusiveMaximum((java.lang.Boolean) false);
        schema24.addExtension(",", (java.lang.Object) schema41);
        java.lang.Integer int47 = schema24.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int47);
    }

    @Test
    public void test03825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03825");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.String str6 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.minItems((java.lang.Integer) 10);
        strComparableSchema0.setFormat("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test03826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03826");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.media.Content[] contentArray13 = null;
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional15 = io.swagger.jaxrs2.OperationParser.getContents(contentArray13, components14);
        boolean boolean16 = serverListOptional1.equals((java.lang.Object) contentArray13);
        boolean boolean17 = serverListOptional1.isPresent();
        boolean boolean18 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        java.lang.String str21 = strComparableSchema19.getFormat();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema19.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = strComparableSchema24.getExternalDocs();
        java.lang.Integer int26 = strComparableSchema24.getMinProperties();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.maxProperties((java.lang.Integer) (-1));
        strComparableSchema24.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema24.minLength((java.lang.Integer) 100);
        schema32.setMaxItems((java.lang.Integer) 10);
        schema23.setAdditionalProperties(schema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str49 = strComparableSchema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema50.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema48.not((io.swagger.oas.models.media.Schema) strComparableSchema50);
        strComparableSchema48.setDescription("hi!");
        strComparableSchema48.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema42.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema48);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.multipleOf(bigDecimal61);
        io.swagger.oas.models.media.Schema schema64 = schema62.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema65.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema65.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema65.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str74 = strComparableSchema73.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema75.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema73.not((io.swagger.oas.models.media.Schema) strComparableSchema75);
        strComparableSchema73.setDescription("hi!");
        strComparableSchema73.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema73.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator86 = strComparableSchema73.getDiscriminator();
        strComparableSchema65.addExtension("Optional.empty", (java.lang.Object) strComparableSchema73);
        java.lang.Boolean boolean88 = strComparableSchema73.getDeprecated();
        java.lang.Boolean boolean89 = strComparableSchema73.getExclusiveMinimum();
        io.swagger.oas.models.media.Discriminator discriminator90 = strComparableSchema73.getDiscriminator();
        boolean boolean91 = schema62.equals((java.lang.Object) strComparableSchema73);
        schema23.setDefault((java.lang.Object) schema62);
        boolean boolean93 = serverListOptional1.equals((java.lang.Object) schema62);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(contentOptional15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(discriminator86);
        org.junit.Assert.assertNull(boolean88);
        org.junit.Assert.assertNull(boolean89);
        org.junit.Assert.assertNull(discriminator90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test03827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03827");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        schema2.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.readOnly((java.lang.Boolean) true);
        schema17.setType("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03828");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.XML xML14 = strComparableSchema0.getXml();
        java.lang.String str15 = strComparableSchema0.getDescription();
        java.lang.Boolean boolean16 = strComparableSchema0.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNull(xML14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test03829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03829");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        strComparableSchema0.setMaxItems((java.lang.Integer) 1);
        java.lang.Integer int19 = strComparableSchema0.getMaxProperties();
        java.lang.String str20 = strComparableSchema0.getPattern();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) true);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test03830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03830");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.properties(strMap11);
        java.lang.Boolean boolean13 = schema12.getNullable();
        java.lang.String str14 = schema12.getType();
        schema12.setTitle("#/components/schemas/");
        schema12.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema12.addRequiredItem("*/*");
        schema20.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema20.description("Optional.empty");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema20.maximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema27 = schema9.not(schema20);
        schema9.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03831");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray36 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray36);
        schema30.setExample((java.lang.Object) tagSetOptional37);
        java.lang.Object obj40 = null;
        schema30.addExtension("*/*", obj40);
        java.lang.String str42 = schema30.getDescription();
        java.lang.String str43 = schema30.getType();
        java.lang.String str44 = schema30.getName();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema2.addProperties("*/*", schema30);
        java.math.BigDecimal bigDecimal46 = schema45.getMultipleOf();
        schema45.setWriteOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = schema45.getProperties();
        io.swagger.oas.models.media.Schema schema51 = schema45.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test03832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03832");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String str2 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.$ref("hi!");
        io.swagger.oas.models.media.Schema schema6 = schema4.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema4.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = schema4.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema10.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test03833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03833");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema3.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.externalDocs(externalDocumentation6);
        java.lang.String str8 = schema5.getType();
        java.math.BigDecimal bigDecimal9 = null;
        schema5.setMaximum(bigDecimal9);
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema5.discriminator(discriminator11);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.xml(xML13);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03834");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.multipleOf(bigDecimal15);
        java.math.BigDecimal bigDecimal17 = schema16.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test03835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03835");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        strComparableSchema27.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema27.setNullable((java.lang.Boolean) false);
        java.lang.String str40 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema27.name("");
        io.swagger.oas.models.media.Schema schema44 = schema42.minProperties((java.lang.Integer) 10);
        boolean boolean45 = schema26.equals((java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema47 = schema26.writeOnly((java.lang.Boolean) true);
        schema47.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema51 = schema47.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema47.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema47.externalDocs(externalDocumentation54);
        io.swagger.oas.models.media.XML xML56 = schema55.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(xML56);
    }

    @Test
    public void test03836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03836");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.math.BigDecimal bigDecimal14 = schema13.getMaximum();
        java.lang.Integer int15 = schema13.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test03837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03837");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        java.lang.Integer int15 = schema14.getMaxLength();
        schema14.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.writeOnly((java.lang.Boolean) false);
        schema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema22.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML27 = null;
        schema26.setXml(xML27);
        java.lang.Integer int29 = schema26.getMinItems();
        io.swagger.oas.models.media.Schema schema30 = schema14.not(schema26);
        io.swagger.oas.models.media.Schema schema32 = schema30.addRequiredItem(",");
        io.swagger.oas.models.media.Schema schema34 = schema30.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema30.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03838");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList48 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean51 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean52 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean53 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean54 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean55 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList48);
        java.lang.Boolean boolean57 = schema40.getNullable();
        io.swagger.oas.models.media.Schema schema59 = schema40.pattern("no description");
        java.lang.Integer int60 = schema40.getMaxProperties();
        io.swagger.oas.models.media.Schema schema62 = schema40.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.addEnumItemObject((java.lang.Comparable<java.lang.String>) "*/*");
        io.swagger.oas.models.media.Schema schema66 = schema40.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema67.setDescription("hi!");
        strComparableSchema67.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal78 = strComparableSchema67.getMultipleOf();
        java.lang.String str79 = strComparableSchema67.get$ref();
        strComparableSchema67.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema67.multipleOf(bigDecimal82);
        java.lang.String str84 = schema83.get$ref();
        schema83.setMinItems((java.lang.Integer) 1);
        schema40.setDefault((java.lang.Object) schema83);
        java.math.BigDecimal bigDecimal88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema40.multipleOf(bigDecimal88);
        io.swagger.oas.models.media.Schema schema90 = schema89.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(bigDecimal78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(schema90);
    }

    @Test
    public void test03839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03839");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.lang.String str40 = strComparableSchema34.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional48 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema34.required((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema schema50 = schema33.required((java.util.List<java.lang.String>) strList46);
        java.lang.String str51 = schema33.getTitle();
        java.math.BigDecimal bigDecimal52 = schema33.getMinimum();
        io.swagger.oas.models.media.Schema schema54 = schema33.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.multipleOf(bigDecimal55);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test03840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03840");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema0.minItems((java.lang.Integer) 10);
        java.lang.String str33 = schema32.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        java.lang.String[] strArray37 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        strComparableSchema34.setRequired((java.util.List<java.lang.String>) strList38);
        io.swagger.oas.models.media.Schema schema41 = schema32.required((java.util.List<java.lang.String>) strList38);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test03841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03841");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int18 = schema17.getMinProperties();
        schema17.setMaxLength((java.lang.Integer) 1);
        java.lang.String[] strArray33 = new java.lang.String[] { "no description", "Optional.empty", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "Optional.empty", "Optional.empty", "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "*/*", "Optional.empty", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        io.swagger.oas.models.media.Schema schema36 = schema17.required((java.util.List<java.lang.String>) strList34);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema17.discriminator(discriminator37);
        io.swagger.oas.models.media.Schema schema40 = schema17.format("Optional.empty");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03842");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = schema3.addRequiredItem("hi!");
        java.lang.String str6 = schema3.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.properties(strMap8);
        java.lang.Integer int10 = schema9.getMaxLength();
        schema9.setWriteOnly((java.lang.Boolean) false);
        schema9.setFormat("*/*");
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.minimum(bigDecimal15);
        schema3.setNot(schema9);
        io.swagger.oas.models.media.Schema schema19 = schema3.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.properties(strMap21);
        java.lang.Boolean boolean23 = schema22.getNullable();
        java.lang.String str24 = schema22.getType();
        schema22.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema22.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema22.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema3.setAdditionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema33 = schema22.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional.empty" + "'", str6, "Optional.empty");
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03843");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema2.externalDocs(externalDocumentation25);
        java.lang.Object obj27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.example(obj27);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.discriminator(discriminator29);
        java.math.BigDecimal bigDecimal31 = null;
        schema30.setMaximum(bigDecimal31);
        java.lang.Boolean boolean33 = schema30.getUniqueItems();
        io.swagger.oas.models.media.Schema schema35 = schema30.$ref("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema30.discriminator(discriminator36);
        schema30.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test03844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03844");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str5 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.XML xML6 = null;
        strComparableSchema0.setXml(xML6);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.discriminator(discriminator8);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str12 = strComparableSchema0.getTitle();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema16.minLength((java.lang.Integer) 0);
        schema18.setMaxLength((java.lang.Integer) 1);
        schema18.setType("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03845");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.lang.Integer int23 = schema22.getMaxItems();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema25.addRequiredItem("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03846");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema8 = schema2.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema2.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        java.lang.Integer int35 = strComparableSchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema schema51 = schema37.example((java.lang.Object) strComparableSchema38);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema38.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        schema53.setExternalDocs(externalDocumentation54);
        io.swagger.oas.models.media.Schema schema57 = schema53.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML58 = schema57.getXml();
        schema12.setDefault((java.lang.Object) xML58);
        java.math.BigDecimal bigDecimal60 = schema12.getMinimum();
        java.lang.String str61 = schema12.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(xML58);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNull(str61);
    }

    @Test
    public void test03847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03847");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        strComparableSchema0.setMaxItems((java.lang.Integer) 1);
        java.lang.Integer int19 = strComparableSchema0.getMaxProperties();
        java.lang.String str20 = strComparableSchema0.getPattern();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03848");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        java.util.List<java.lang.String> strList8 = strComparableSchema2.getRequired();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema12.setNullable((java.lang.Boolean) false);
        java.lang.String str25 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema12.name("");
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema12.setMinimum(bigDecimal28);
        java.lang.Boolean boolean30 = strComparableSchema12.getReadOnly();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema12.description("*/*");
        io.swagger.oas.models.media.Schema schema34 = schema32.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema2.addProperties("no description", schema32);
        java.lang.Boolean boolean36 = strComparableSchema2.getNullable();
        java.lang.Object obj37 = strComparableSchema2.getExample();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test03849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03849");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        java.lang.String[] strArray42 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional45 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema2.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        io.swagger.oas.models.media.Schema schema50 = schema48.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema52.setDescription("hi!");
        strComparableSchema52.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema52.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = strComparableSchema52.getProperties();
        java.lang.Boolean boolean66 = strComparableSchema52.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable67 = strComparableSchema52.getDefault();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema52.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema70 = schema48.addProperties("no description", schema69);
        java.lang.Boolean boolean71 = schema48.getDeprecated();
        java.lang.String str72 = schema48.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(strComparable67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test03850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03850");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        strComparableSchema15.setDescription("hi!");
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema15.setMaximum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        java.lang.String[] strArray42 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema15.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str48 = strComparableSchema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema49.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = null;
        strComparableSchema49.setExtensions(strMap53);
        strComparableSchema49.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema49.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema46.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema49);
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        schema46.setExtensions(strMap61);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema46.maximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema46.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str69 = strComparableSchema68.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema68.not((io.swagger.oas.models.media.Schema) strComparableSchema70);
        strComparableSchema68.setDescription("hi!");
        strComparableSchema68.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal79 = strComparableSchema68.getMultipleOf();
        java.lang.String str80 = strComparableSchema68.get$ref();
        strComparableSchema68.setDeprecated((java.lang.Boolean) false);
        java.lang.String str83 = strComparableSchema68.getType();
        io.swagger.oas.models.media.Schema schema84 = schema46.addProperties(",", (io.swagger.oas.models.media.Schema) strComparableSchema68);
        java.math.BigDecimal bigDecimal85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema84.multipleOf(bigDecimal85);
        io.swagger.oas.models.media.Schema schema88 = schema86.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Integer int89 = schema88.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(bigDecimal79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int89);
    }

    @Test
    public void test03851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03851");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean22 = strComparableSchema0.getNullable();
        java.math.BigDecimal bigDecimal23 = strComparableSchema0.getMultipleOf();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
        org.junit.Assert.assertNull(bigDecimal23);
    }

    @Test
    public void test03852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03852");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        java.lang.String str16 = strComparableSchema0.getFormat();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = null;
        strComparableSchema22.setExtensions(strMap26);
        strComparableSchema22.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = strComparableSchema30.getExternalDocs();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema30.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.uniqueItems((java.lang.Boolean) false);
        strComparableSchema22.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema30);
        schema18.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strComparableSchema22);
        java.math.BigDecimal bigDecimal38 = strComparableSchema22.getMinimum();
        strComparableSchema22.setMinProperties((java.lang.Integer) 1);
        strComparableSchema22.setName("#/components/schemas/no description");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal38);
    }

    @Test
    public void test03853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03853");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.xml(xML9);
        java.lang.String str11 = schema10.getName();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = schema10.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test03854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03854");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema33.readOnly((java.lang.Boolean) false);
        java.lang.Integer int38 = schema37.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = null;
        strComparableSchema41.setExtensions(strMap45);
        strComparableSchema41.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int49 = strComparableSchema41.getMaxItems();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema41.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str53 = strComparableSchema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema54.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema52.not((io.swagger.oas.models.media.Schema) strComparableSchema54);
        strComparableSchema52.setDescription("hi!");
        java.math.BigDecimal bigDecimal60 = null;
        strComparableSchema52.setMaximum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema52.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList64 = strComparableSchema52.getRequired();
        io.swagger.oas.models.media.Schema schema65 = schema51.required(strList64);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional66 = java.util.Optional.of(strList64);
        io.swagger.oas.models.media.Schema schema67 = schema37.required(strList64);
        java.lang.Boolean boolean68 = schema37.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strListOptional66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
    }

    @Test
    public void test03855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03855");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.lang.Integer int8 = strComparableSchema0.getMinItems();
        strComparableSchema0.set$ref(",");
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.type("#/components/schemas/");
        strComparableSchema0.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str15 = strComparableSchema0.getType();
        java.lang.Integer int16 = strComparableSchema0.getMaxProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "#/components/schemas/" + "'", str15, "#/components/schemas/");
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test03856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03856");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        boolean boolean4 = strComparableSchema0.equals((java.lang.Object) (short) 10);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList7 = strComparableSchema0.getEnum();
        java.lang.String str8 = strComparableSchema0.getType();
        strComparableSchema0.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(strComparableList7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test03857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03857");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema21.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator34 = strComparableSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.properties(strMap36);
        java.lang.Boolean boolean38 = schema37.getUniqueItems();
        schema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = null;
        schema37.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema37.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema21.example((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema schema46 = schema19.addProperties("*/*", (io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Schema schema48 = schema19.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str49 = schema19.getName();
        java.lang.Boolean boolean50 = schema19.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(boolean50);
    }

    @Test
    public void test03858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03858");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        schema15.setReadOnly((java.lang.Boolean) true);
        java.lang.String str18 = schema15.getName();
        schema15.setMinProperties((java.lang.Integer) 0);
        java.lang.Object obj21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema15.example(obj21);
        io.swagger.oas.models.media.Schema schema24 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema24.deprecated((java.lang.Boolean) true);
        schema24.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test03859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03859");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.annotations.servers.Server[] serverArray11 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray11);
        java.lang.String str13 = serverListOptional12.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray14 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray14);
        boolean boolean16 = serverListOptional15.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList18 = serverListOptional15.orElse(serverList17);
        io.swagger.oas.models.servers.Server[] serverArray19 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList20 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList20, serverArray19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional15.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList20);
        java.util.List<io.swagger.oas.models.servers.Server> serverList23 = serverListOptional12.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList20);
        io.swagger.oas.annotations.servers.Server[] serverArray24 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray24);
        boolean boolean26 = serverListOptional25.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList27 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList28 = serverListOptional25.orElse(serverList27);
        io.swagger.oas.models.servers.Server[] serverArray29 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList30 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList30, serverArray29);
        java.util.List<io.swagger.oas.models.servers.Server> serverList32 = serverListOptional25.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList30);
        java.util.List<io.swagger.oas.models.servers.Server> serverList33 = serverListOptional12.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList30);
        java.lang.String str34 = serverListOptional12.toString();
        io.swagger.oas.models.servers.Server[] serverArray35 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList36 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList36, serverArray35);
        java.util.List<io.swagger.oas.models.servers.Server> serverList38 = serverListOptional12.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList36);
        io.swagger.oas.annotations.servers.Server server39 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray40 = new io.swagger.oas.annotations.servers.Server[] { server39 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional41 = io.swagger.jaxrs2.OperationParser.getServers(serverArray40);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional42 = io.swagger.jaxrs2.OperationParser.getServers(serverArray40);
        io.swagger.oas.annotations.servers.Server[] serverArray43 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional44 = io.swagger.jaxrs2.OperationParser.getServers(serverArray43);
        boolean boolean45 = serverListOptional44.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList46 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList47 = serverListOptional44.orElse(serverList46);
        io.swagger.oas.models.servers.Server[] serverArray48 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList49 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList49, serverArray48);
        java.util.List<io.swagger.oas.models.servers.Server> serverList51 = serverListOptional44.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList49);
        io.swagger.oas.annotations.servers.Server[] serverArray52 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional53 = io.swagger.jaxrs2.OperationParser.getServers(serverArray52);
        java.lang.String str54 = serverListOptional53.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray55 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional56 = io.swagger.jaxrs2.OperationParser.getServers(serverArray55);
        java.lang.String str57 = serverListOptional56.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray58 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional59 = io.swagger.jaxrs2.OperationParser.getServers(serverArray58);
        boolean boolean60 = serverListOptional59.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList61 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList62 = serverListOptional59.orElse(serverList61);
        io.swagger.oas.models.servers.Server[] serverArray63 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList64 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList64, serverArray63);
        java.util.List<io.swagger.oas.models.servers.Server> serverList66 = serverListOptional59.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList64);
        java.util.List<io.swagger.oas.models.servers.Server> serverList67 = serverListOptional56.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList64);
        java.util.List<io.swagger.oas.models.servers.Server> serverList68 = serverListOptional53.orElse(serverList67);
        java.util.List<io.swagger.oas.models.servers.Server> serverList69 = serverListOptional44.orElse(serverList67);
        java.util.List<io.swagger.oas.models.servers.Server> serverList70 = serverListOptional42.orElse(serverList67);
        java.util.List<io.swagger.oas.models.servers.Server> serverList71 = serverListOptional12.orElse(serverList67);
        io.swagger.oas.annotations.servers.Server[] serverArray72 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional73 = io.swagger.jaxrs2.OperationParser.getServers(serverArray72);
        java.lang.String str74 = serverListOptional73.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray75 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional76 = io.swagger.jaxrs2.OperationParser.getServers(serverArray75);
        boolean boolean77 = serverListOptional76.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList78 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList79 = serverListOptional76.orElse(serverList78);
        io.swagger.oas.models.servers.Server[] serverArray80 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList81 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList81, serverArray80);
        java.util.List<io.swagger.oas.models.servers.Server> serverList83 = serverListOptional76.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList81);
        java.util.List<io.swagger.oas.models.servers.Server> serverList84 = serverListOptional73.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList81);
        java.lang.String str85 = serverListOptional73.toString();
        boolean boolean86 = serverListOptional73.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray87 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional88 = io.swagger.jaxrs2.OperationParser.getServers(serverArray87);
        boolean boolean89 = serverListOptional88.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList90 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList91 = serverListOptional88.orElse(serverList90);
        io.swagger.oas.models.servers.Server[] serverArray92 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList93 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList93, serverArray92);
        java.util.List<io.swagger.oas.models.servers.Server> serverList95 = serverListOptional88.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList93);
        java.util.List<io.swagger.oas.models.servers.Server> serverList96 = serverListOptional73.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList93);
        java.util.List<io.swagger.oas.models.servers.Server> serverList97 = serverListOptional12.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList93);
        java.util.List<io.swagger.oas.models.servers.Server> serverList98 = serverListOptional10.orElse(serverList97);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertNotNull(serverListOptional9);
        org.junit.Assert.assertNotNull(serverListOptional10);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertNotNull(serverListOptional12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Optional.empty" + "'", str13, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertNotNull(serverListOptional15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(serverList18);
        org.junit.Assert.assertNotNull(serverArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(serverList22);
        org.junit.Assert.assertNotNull(serverList23);
        org.junit.Assert.assertNotNull(serverArray24);
        org.junit.Assert.assertNotNull(serverListOptional25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(serverList28);
        org.junit.Assert.assertNotNull(serverArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(serverList32);
        org.junit.Assert.assertNotNull(serverList33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Optional.empty" + "'", str34, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(serverList38);
        org.junit.Assert.assertNotNull(serverArray40);
        org.junit.Assert.assertNotNull(serverListOptional41);
        org.junit.Assert.assertNotNull(serverListOptional42);
        org.junit.Assert.assertNotNull(serverArray43);
        org.junit.Assert.assertNotNull(serverListOptional44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(serverList47);
        org.junit.Assert.assertNotNull(serverArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(serverList51);
        org.junit.Assert.assertNotNull(serverArray52);
        org.junit.Assert.assertNotNull(serverListOptional53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Optional.empty" + "'", str54, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray55);
        org.junit.Assert.assertNotNull(serverListOptional56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Optional.empty" + "'", str57, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray58);
        org.junit.Assert.assertNotNull(serverListOptional59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(serverList62);
        org.junit.Assert.assertNotNull(serverArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(serverList66);
        org.junit.Assert.assertNotNull(serverList67);
        org.junit.Assert.assertNotNull(serverList68);
        org.junit.Assert.assertNotNull(serverList69);
        org.junit.Assert.assertNotNull(serverList70);
        org.junit.Assert.assertNotNull(serverList71);
        org.junit.Assert.assertNotNull(serverArray72);
        org.junit.Assert.assertNotNull(serverListOptional73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Optional.empty" + "'", str74, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray75);
        org.junit.Assert.assertNotNull(serverListOptional76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(serverList79);
        org.junit.Assert.assertNotNull(serverArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(serverList83);
        org.junit.Assert.assertNotNull(serverList84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Optional.empty" + "'", str85, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(serverArray87);
        org.junit.Assert.assertNotNull(serverListOptional88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(serverList91);
        org.junit.Assert.assertNotNull(serverArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(serverList95);
        org.junit.Assert.assertNotNull(serverList96);
        org.junit.Assert.assertNotNull(serverList97);
        org.junit.Assert.assertNotNull(serverList98);
    }

    @Test
    public void test03860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03860");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.Boolean boolean4 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema6 = schema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema8 = schema2.description("");
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.xml(xML9);
        java.util.List<java.lang.String> strList11 = schema2.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test03861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03861");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        strComparableSchema14.setDefault((java.lang.Object) strComparableSchema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str35 = strComparableSchema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema36.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema34.not((io.swagger.oas.models.media.Schema) strComparableSchema36);
        strComparableSchema34.setDescription("hi!");
        strComparableSchema34.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema28.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema24.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray58 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional59 = io.swagger.jaxrs2.OperationParser.getTags(strArray58);
        schema52.setExample((java.lang.Object) tagSetOptional59);
        java.lang.Object obj62 = null;
        schema52.addExtension("*/*", obj62);
        java.lang.String str64 = schema52.getDescription();
        java.lang.String str65 = schema52.getType();
        java.lang.String str66 = schema52.getName();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema24.addProperties("*/*", schema52);
        java.math.BigDecimal bigDecimal68 = schema67.getMultipleOf();
        java.math.BigDecimal bigDecimal69 = schema67.getMaximum();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema17.example((java.lang.Object) bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema17.format(",");
        io.swagger.oas.models.media.Schema schema74 = schema72.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(tagSetOptional59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(bigDecimal68);
        org.junit.Assert.assertNull(bigDecimal69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03862");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        io.swagger.oas.models.media.XML xML16 = strComparableSchema0.getXml();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        java.lang.String str18 = schema17.get$ref();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(xML16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test03863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03863");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.type("no description");
        java.math.BigDecimal bigDecimal12 = schema11.getMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema11.properties(strMap13);
        java.lang.Object obj15 = null;
        boolean boolean16 = schema11.equals(obj15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema11.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema schema20 = schema18.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03864");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        io.swagger.oas.models.media.Discriminator discriminator21 = schema19.getDiscriminator();
        schema19.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema19.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema19.name("#/components/schemas/");
        java.lang.Boolean boolean28 = schema19.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema19.format("#/components/schemas/no description");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test03865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03865");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        strComparableSchema10.setExtensions(strMap14);
        strComparableSchema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = strComparableSchema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.uniqueItems((java.lang.Boolean) false);
        strComparableSchema10.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.properties(strMap26);
        java.lang.Boolean boolean28 = schema27.getUniqueItems();
        schema27.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = null;
        schema27.setMultipleOf(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema27.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema34.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.xml(xML37);
        strComparableSchema10.setNot(schema34);
        strComparableSchema10.setMinProperties((java.lang.Integer) 100);
        strComparableSchema10.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str58 = strComparableSchema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema59.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema59);
        strComparableSchema57.setDescription("hi!");
        strComparableSchema57.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema51.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema57);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema47.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema51.setPattern("hi!");
        java.math.BigDecimal bigDecimal72 = null;
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema51.multipleOf(bigDecimal72);
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema10.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema73);
        strComparableSchema0.setDefault((java.lang.Object) schema74);
        schema74.setType("hi!");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03866");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean34 = schema33.getDeprecated();
        io.swagger.oas.models.media.XML xML35 = schema33.getXml();
        schema33.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, Optional.empty, no description]\n    type: #/components/schemas/no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(xML35);
    }

    @Test
    public void test03867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03867");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 0);
        java.lang.Integer int28 = strComparableSchema0.getMinProperties();
        java.lang.String str29 = strComparableSchema0.getFormat();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.multipleOf(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema31.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str34 = schema31.getPattern();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test03868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03868");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.xml(xML11);
        schema2.setTitle("hi!");
        io.swagger.oas.models.media.Schema schema16 = schema2.description("");
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema2.xml(xML17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str20 = strComparableSchema19.get$ref();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema19.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = schema22.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema22.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator27 = schema22.getDiscriminator();
        java.lang.String str28 = schema22.getDescription();
        io.swagger.oas.models.media.Schema schema30 = schema22.maxLength((java.lang.Integer) 0);
        schema18.setDefault((java.lang.Object) schema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema22.externalDocs(externalDocumentation32);
        java.lang.String str34 = schema33.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Optional.empty" + "'", str28, "Optional.empty");
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test03869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03869");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        java.math.BigDecimal bigDecimal16 = schema15.getMultipleOf();
        java.lang.Boolean boolean17 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = schema15.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML20 = schema19.getXml();
        io.swagger.oas.models.media.Schema schema22 = schema19.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(xML20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03870");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema2.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str15 = strComparableSchema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema16.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema14.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        strComparableSchema14.setDescription("hi!");
        strComparableSchema14.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal25 = strComparableSchema14.getMultipleOf();
        java.lang.String str26 = strComparableSchema14.get$ref();
        java.lang.String[] strArray31 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        strComparableSchema14.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int35 = strComparableSchema14.getMaxLength();
        java.lang.Integer int36 = strComparableSchema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema14.minProperties((java.lang.Integer) 100);
        schema38.setMinLength((java.lang.Integer) 100);
        strComparableSchema2.setNot(schema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str43 = strComparableSchema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema44.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema42.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = null;
        strComparableSchema44.setExtensions(strMap48);
        strComparableSchema44.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int52 = strComparableSchema44.getMaxItems();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema44.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        strComparableSchema55.setDescription("hi!");
        java.math.BigDecimal bigDecimal63 = null;
        strComparableSchema55.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema55.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList67 = strComparableSchema55.getRequired();
        io.swagger.oas.models.media.Schema schema68 = schema54.required(strList67);
        schema38.setRequired(strList67);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test03871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03871");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        io.swagger.oas.models.media.Schema schema14 = schema11.maxProperties((java.lang.Integer) 0);
        schema14.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = schema14.getProperties();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test03872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03872");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        strComparableSchema0.setDescription("");
        strComparableSchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.type("Optional.empty");
        java.lang.Integer int11 = strComparableSchema0.getMaxItems();
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
    }

    @Test
    public void test03873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03873");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.math.BigDecimal bigDecimal15 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.xml(xML16);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.externalDocs(externalDocumentation18);
        java.math.BigDecimal bigDecimal20 = null;
        schema19.setMultipleOf(bigDecimal20);
        java.math.BigDecimal bigDecimal22 = schema19.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal22);
    }

    @Test
    public void test03874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03874");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.format("*/*");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.minimum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema19.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema19.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema19.maximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema28 = schema27.getAdditionalProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
    }

    @Test
    public void test03875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03875");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.Boolean boolean25 = strComparableSchema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str28 = strComparableSchema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema29.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema27.not((io.swagger.oas.models.media.Schema) strComparableSchema29);
        strComparableSchema27.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema27.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema2.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean40 = schema39.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + false + "'", boolean40, false);
    }

    @Test
    public void test03876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03876");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        boolean boolean15 = serverListOptional14.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional14.orElse(serverList16);
        io.swagger.oas.models.servers.Server[] serverArray18 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList19 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList19, serverArray18);
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.lang.String str23 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray24 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray24);
        java.lang.String str26 = serverListOptional25.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray27 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional28 = io.swagger.jaxrs2.OperationParser.getServers(serverArray27);
        java.lang.String str29 = serverListOptional28.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        boolean boolean32 = serverListOptional31.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList33 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList34 = serverListOptional31.orElse(serverList33);
        io.swagger.oas.models.servers.Server[] serverArray35 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList36 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList36, serverArray35);
        java.util.List<io.swagger.oas.models.servers.Server> serverList38 = serverListOptional31.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional28.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList40 = serverListOptional25.orElse(serverList39);
        java.util.List<io.swagger.oas.models.servers.Server> serverList41 = serverListOptional1.orElse(serverList40);
        boolean boolean42 = serverListOptional1.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList43 = serverListOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serverList21);
        org.junit.Assert.assertNotNull(serverList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Optional.empty" + "'", str23, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray24);
        org.junit.Assert.assertNotNull(serverListOptional25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Optional.empty" + "'", str26, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray27);
        org.junit.Assert.assertNotNull(serverListOptional28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Optional.empty" + "'", str29, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(serverList34);
        org.junit.Assert.assertNotNull(serverArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(serverList38);
        org.junit.Assert.assertNotNull(serverList39);
        org.junit.Assert.assertNotNull(serverList40);
        org.junit.Assert.assertNotNull(serverList41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test03877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03877");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.description("hi!");
        java.lang.Boolean boolean17 = strComparableSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = strComparableSchema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean22 = strComparableSchema18.getReadOnly();
        strComparableSchema0.setExample((java.lang.Object) boolean22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        schema25.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema28.setNullable((java.lang.Boolean) false);
        java.lang.String str41 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema28.name("");
        java.math.BigDecimal bigDecimal44 = null;
        strComparableSchema28.setMinimum(bigDecimal44);
        java.lang.Boolean boolean46 = strComparableSchema28.getReadOnly();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema28.description("*/*");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema28.addRequiredItem("*/*");
        java.util.List<java.lang.String> strList51 = strComparableSchema28.getRequired();
        strComparableSchema28.setReadOnly((java.lang.Boolean) false);
        schema25.setNot((io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema schema56 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.discriminator(discriminator57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str60 = strComparableSchema59.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema61.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema59.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        strComparableSchema59.setDescription("hi!");
        strComparableSchema59.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal70 = strComparableSchema59.getMultipleOf();
        java.lang.String str71 = strComparableSchema59.get$ref();
        java.lang.String[] strArray76 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        strComparableSchema59.setRequired((java.util.List<java.lang.String>) strList77);
        java.lang.Integer int80 = strComparableSchema59.getMaxLength();
        strComparableSchema59.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema59.$ref("#/components/schemas/");
        strComparableSchema59.setMaxProperties((java.lang.Integer) 0);
        java.lang.Integer int87 = strComparableSchema59.getMinProperties();
        java.lang.String str88 = strComparableSchema59.getFormat();
        java.math.BigDecimal bigDecimal89 = null;
        io.swagger.oas.models.media.Schema schema90 = strComparableSchema59.multipleOf(bigDecimal89);
        io.swagger.oas.models.media.Schema schema92 = schema90.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema56.setDefault((java.lang.Object) schema92);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test03878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03878");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray8 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray8);
        schema2.setExample((java.lang.Object) tagSetOptional9);
        java.lang.Object obj12 = null;
        schema2.addExtension("*/*", obj12);
        java.lang.String str14 = schema2.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema2.minProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean17 = schema16.getExclusiveMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        schema16.setProperties(strMap18);
        io.swagger.oas.models.media.Schema schema21 = schema16.type("");
        java.math.BigDecimal bigDecimal22 = schema21.getMultipleOf();
        io.swagger.oas.models.media.Schema schema24 = schema21.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03879");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Integer int14 = strComparableSchema0.getMinItems();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = strComparableSchema0.getEnum();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Integer int18 = schema17.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test03880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03880");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema33.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test03881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03881");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal4 = null;
        strComparableSchema0.setMinimum(bigDecimal4);
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        java.lang.String str8 = schema7.get$ref();
        schema7.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema7.deprecated((java.lang.Boolean) false);
        java.lang.Integer int13 = schema12.getMaxProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int16 = schema12.getMaxItems();
        java.lang.Boolean boolean17 = schema12.getUniqueItems();
        java.lang.String str18 = schema12.getPattern();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test03882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03882");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema26.deprecated((java.lang.Boolean) true);
        java.lang.String str29 = schema28.getDescription();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test03883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03883");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean9 = schema6.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.discriminator(discriminator10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        schema6.setExternalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema6.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema6.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema6.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
    }

    @Test
    public void test03884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03884");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strComparableSchema0.getExtensions();
        java.lang.Object obj3 = strComparableSchema0.getExample();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean6 = strComparableSchema0.getDeprecated();
        java.math.BigDecimal bigDecimal7 = strComparableSchema0.getMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(obj3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(bigDecimal7);
    }

    @Test
    public void test03885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03885");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema schema11 = schema9.description("no description");
        java.math.BigDecimal bigDecimal12 = schema11.getMultipleOf();
        java.lang.Integer int13 = schema11.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(int13);
    }

    @Test
    public void test03886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03886");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = strComparableSchema24.getExternalDocs();
        java.lang.Integer int26 = strComparableSchema24.getMinProperties();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.maxProperties((java.lang.Integer) (-1));
        strComparableSchema24.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema2.setMinItems((java.lang.Integer) 10);
        java.lang.Boolean boolean34 = strComparableSchema2.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(externalDocumentation25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test03887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03887");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("Optional.empty");
        io.swagger.oas.models.media.Schema schema13 = schema11.description("Optional.empty");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList14 = schema13.getEnum();
        io.swagger.oas.models.media.Schema schema16 = schema13.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strComparableList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03888");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        strComparableSchema6.setDescription("hi!");
        strComparableSchema6.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str22 = strComparableSchema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema21.not((io.swagger.oas.models.media.Schema) strComparableSchema23);
        strComparableSchema21.setDescription("hi!");
        strComparableSchema21.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema21.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator34 = strComparableSchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.properties(strMap36);
        java.lang.Boolean boolean38 = schema37.getUniqueItems();
        schema37.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = null;
        schema37.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema37.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema21.example((java.lang.Object) schema44);
        io.swagger.oas.models.media.Schema schema46 = schema19.addProperties("*/*", (io.swagger.oas.models.media.Schema) strComparableSchema21);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema21.discriminator(discriminator47);
        io.swagger.oas.models.media.Schema schema50 = schema48.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test03889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03889");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema16.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema22.uniqueItems((java.lang.Boolean) true);
        schema22.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test03890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03890");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.lang.String str14 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema16.writeOnly((java.lang.Boolean) false);
        java.lang.String str19 = schema18.getDescription();
        io.swagger.oas.models.media.Schema schema21 = schema18.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = schema18.getExternalDocs();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*/*" + "'", str14, "*/*");
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(externalDocumentation22);
    }

    @Test
    public void test03891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03891");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        java.lang.Integer int15 = schema14.getMaxLength();
        schema14.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = null;
        schema14.setMultipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema24.setExtensions(strMap28);
        strComparableSchema24.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema24.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema33.exclusiveMaximum((java.lang.Boolean) true);
        schema35.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema35.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        java.util.List<java.lang.String> strList40 = schema35.getRequired();
        schema14.setNot(schema35);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strList40);
    }

    @Test
    public void test03892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03892");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.uniqueItems((java.lang.Boolean) false);
        strComparableSchema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.xml(xML29);
        strComparableSchema2.setNot(schema26);
        strComparableSchema2.setMinProperties((java.lang.Integer) 100);
        java.lang.String str34 = strComparableSchema2.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        strComparableSchema2.setProperties(strMap35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema2.addRequiredItem("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema38.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test03893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03893");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        strComparableSchema0.setProperties(strMap7);
        java.lang.Boolean boolean9 = strComparableSchema0.getUniqueItems();
        strComparableSchema0.setMinLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean12 = strComparableSchema0.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test03894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03894");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        strComparableSchema14.setDefault((java.lang.Object) strComparableSchema17);
        java.util.List<java.lang.String> strList22 = strComparableSchema14.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        java.lang.String str29 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema23.getNot();
        java.lang.Boolean boolean31 = strComparableSchema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema14.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema23);
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.discriminator(discriminator33);
        io.swagger.oas.models.media.Schema schema36 = schema32.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int37 = schema36.getMaxItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test03895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03895");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        boolean boolean2 = serverListOptional1.isPresent();
        java.lang.String str3 = serverListOptional1.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Optional.empty" + "'", str3, "Optional.empty");
    }

    @Test
    public void test03896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03896");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.List<io.swagger.oas.models.servers.Server> serverList2 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = serverListOptional1.orElse(serverList2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList4 = serverListOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNull(serverList3);
    }

    @Test
    public void test03897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03897");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.description("");
        io.swagger.oas.models.media.Schema schema11 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int12 = schema9.getMaxItems();
        java.lang.Boolean boolean13 = schema9.getExclusiveMinimum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test03898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03898");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.xml(xML14);
        io.swagger.oas.models.media.Schema schema17 = schema15.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test03899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03899");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional2 = java.util.Optional.ofNullable(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.lang.Cloneable> cloneableOptional4 = java.util.Optional.ofNullable((java.lang.Cloneable) serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.annotations.servers.Server[] serverArray7 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray7);
        java.lang.String str9 = serverListOptional8.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray10 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray10);
        boolean boolean12 = serverListOptional11.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList13 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList14 = serverListOptional11.orElse(serverList13);
        io.swagger.oas.models.servers.Server[] serverArray15 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList16 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList16, serverArray15);
        java.util.List<io.swagger.oas.models.servers.Server> serverList18 = serverListOptional11.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList16);
        java.util.List<io.swagger.oas.models.servers.Server> serverList19 = serverListOptional8.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList16);
        io.swagger.oas.annotations.servers.Server[] serverArray20 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        java.lang.String str22 = serverListOptional21.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray23 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray23);
        boolean boolean25 = serverListOptional24.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList27 = serverListOptional24.orElse(serverList26);
        io.swagger.oas.models.servers.Server[] serverArray28 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList29 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList29, serverArray28);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional24.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        java.util.List<io.swagger.oas.models.servers.Server> serverList32 = serverListOptional21.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        java.util.List<io.swagger.oas.models.servers.Server> serverList33 = serverListOptional8.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        java.util.List<io.swagger.oas.models.servers.Server> serverList34 = serverListOptional6.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        boolean boolean35 = serverListOptional6.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList36 = serverListOptional6.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArrayOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(cloneableOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNotNull(serverArray7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Optional.empty" + "'", str9, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray10);
        org.junit.Assert.assertNotNull(serverListOptional11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(serverList14);
        org.junit.Assert.assertNotNull(serverArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serverList18);
        org.junit.Assert.assertNotNull(serverList19);
        org.junit.Assert.assertNotNull(serverArray20);
        org.junit.Assert.assertNotNull(serverListOptional21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Optional.empty" + "'", str22, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray23);
        org.junit.Assert.assertNotNull(serverListOptional24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(serverList27);
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNotNull(serverList32);
        org.junit.Assert.assertNotNull(serverList33);
        org.junit.Assert.assertNotNull(serverList34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test03900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03900");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal12 = strComparableSchema0.getMultipleOf();
        java.lang.Boolean boolean13 = strComparableSchema0.getNullable();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.properties(strMap14);
        java.util.List<java.lang.String> strList16 = strComparableSchema0.getRequired();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.minimum(bigDecimal17);
        java.lang.String str19 = schema18.getPattern();
        java.lang.Integer int20 = schema18.getMaxProperties();
        schema18.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test03901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03901");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        schema23.setReadOnly((java.lang.Boolean) true);
        java.lang.String str26 = schema23.getType();
        schema23.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema23.getExtensions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test03902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03902");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        boolean boolean15 = serverListOptional14.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional14.orElse(serverList16);
        io.swagger.oas.models.servers.Server[] serverArray18 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList19 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList19, serverArray18);
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str24 = strComparableSchema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.not((io.swagger.oas.models.media.Schema) strComparableSchema25);
        strComparableSchema23.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema23.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str34 = strComparableSchema33.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema33.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str40 = strComparableSchema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema41.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema39.not((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema39.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema45);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.multipleOf(bigDecimal58);
        io.swagger.oas.models.media.Schema schema60 = schema32.not(schema59);
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.minimum(bigDecimal61);
        boolean boolean63 = serverListOptional1.equals((java.lang.Object) bigDecimal61);
        boolean boolean64 = serverListOptional1.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList65 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList66 = serverListOptional1.orElse(serverList65);
        boolean boolean67 = serverListOptional1.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serverList21);
        org.junit.Assert.assertNotNull(serverList22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(serverList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test03903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03903");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        strComparableSchema22.setDescription("hi!");
        strComparableSchema22.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema16.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema16);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema9.not(schema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        java.lang.String[] strArray55 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        strComparableSchema38.setRequired((java.util.List<java.lang.String>) strList56);
        java.lang.Integer int59 = strComparableSchema38.getMaxLength();
        java.lang.Integer int60 = strComparableSchema38.getMaxProperties();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema38.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema38.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema66 = schema64.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str74 = strComparableSchema73.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema75.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema73.not((io.swagger.oas.models.media.Schema) strComparableSchema75);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str80 = strComparableSchema79.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema81.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema79.not((io.swagger.oas.models.media.Schema) strComparableSchema81);
        strComparableSchema79.setDescription("hi!");
        strComparableSchema79.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema73.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema79);
        io.swagger.oas.models.media.Schema schema91 = strComparableSchema69.not((io.swagger.oas.models.media.Schema) strComparableSchema73);
        strComparableSchema69.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj94 = strComparableSchema69.getExample();
        io.swagger.oas.models.media.Schema schema95 = schema64.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema69);
        java.util.Map<java.lang.String, java.lang.Object> strMap96 = schema95.getExtensions();
        boolean boolean97 = schema9.equals((java.lang.Object) schema95);
        java.lang.String str98 = schema95.get$ref();
        java.lang.String str99 = schema95.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(obj94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNull(str98);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test03904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03904");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal12 = strComparableSchema0.getMultipleOf();
        java.lang.Boolean boolean13 = strComparableSchema0.getNullable();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.properties(strMap14);
        java.util.List<java.lang.String> strList16 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.getNot();
        java.lang.Boolean boolean18 = strComparableSchema0.getWriteOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test03905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03905");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray23 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray23);
        schema17.setExample((java.lang.Object) tagSetOptional24);
        java.lang.Object obj27 = null;
        schema17.addExtension("*/*", obj27);
        java.lang.String str29 = schema17.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        java.lang.Boolean boolean38 = schema33.getUniqueItems();
        schema17.addExtension("Optional.empty", (java.lang.Object) boolean38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema17.getExtensions();
        schema10.setExtensions(strMap40);
        io.swagger.oas.models.media.Schema schema43 = schema10.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema43.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean46 = schema45.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(tagSetOptional24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
    }

    @Test
    public void test03906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03906");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema4.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList7 = schema4.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema8.setMaximum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str19 = strComparableSchema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema20.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema18.not((io.swagger.oas.models.media.Schema) strComparableSchema20);
        strComparableSchema18.setDescription("hi!");
        strComparableSchema18.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal29 = strComparableSchema18.getMultipleOf();
        java.lang.String str30 = strComparableSchema18.get$ref();
        java.lang.String[] strArray35 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        strComparableSchema18.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema8.required((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema8.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = schema41.getExtensions();
        io.swagger.oas.models.media.Schema schema45 = schema41.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = strComparableSchema46.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable48 = strComparableSchema46.getDefault();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        strComparableSchema61.setDescription("hi!");
        strComparableSchema61.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema55.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        java.lang.Boolean boolean74 = strComparableSchema51.getExclusiveMinimum();
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList83 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean84 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean85 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean86 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        boolean boolean87 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean88 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "");
        boolean boolean89 = strComparableList83.add((java.lang.Comparable<java.lang.String>) ",");
        boolean boolean90 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "*/*");
        boolean boolean91 = strComparableList83.add((java.lang.Comparable<java.lang.String>) "*/*");
        strComparableSchema51.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList83);
        strComparableSchema46.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList83);
        schema41.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList83);
        schema4.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList83);
        schema4.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strComparableList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(externalDocumentation47);
        org.junit.Assert.assertNull(strComparable48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test03907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03907");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.minimum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema17.description("Optional.empty");
        schema17.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = null;
        schema17.setAdditionalProperties(schema24);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test03908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03908");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        strComparableSchema8.setTitle("#/components/schemas/");
        java.lang.Boolean boolean25 = strComparableSchema8.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test03909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03909");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema3.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.externalDocs(externalDocumentation6);
        io.swagger.oas.models.media.Schema<java.lang.CharSequence> charSequenceSchema8 = new io.swagger.oas.models.media.Schema<java.lang.CharSequence>();
        io.swagger.oas.models.media.Schema schema9 = schema5.additionalProperties((io.swagger.oas.models.media.Schema) charSequenceSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema11.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema11.title("");
        java.lang.Boolean boolean21 = strComparableSchema11.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator22 = strComparableSchema11.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator23 = strComparableSchema11.getDiscriminator();
        java.lang.String str24 = strComparableSchema11.getPattern();
        schema5.addExtension("#/components/schemas/", (java.lang.Object) strComparableSchema11);
        schema5.set$ref("*/*");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema28.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str45 = strComparableSchema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema46.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema44.not((io.swagger.oas.models.media.Schema) strComparableSchema46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str51 = strComparableSchema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema52.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema50.not((io.swagger.oas.models.media.Schema) strComparableSchema52);
        strComparableSchema50.setDescription("hi!");
        strComparableSchema50.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema44.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema50);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema44);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.multipleOf(bigDecimal63);
        io.swagger.oas.models.media.Schema schema65 = schema37.not(schema64);
        io.swagger.oas.models.media.Schema schema67 = schema64.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str69 = strComparableSchema68.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema70.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema68.not((io.swagger.oas.models.media.Schema) strComparableSchema70);
        java.lang.String str74 = strComparableSchema68.get$ref();
        java.lang.String[] strArray79 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional82 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema68.required((java.util.List<java.lang.String>) strList80);
        io.swagger.oas.models.media.Schema schema84 = schema64.required((java.util.List<java.lang.String>) strList80);
        java.util.Optional<java.util.Collection<java.lang.String>> strCollectionOptional85 = java.util.Optional.of((java.util.Collection<java.lang.String>) strList80);
        java.util.Optional<java.util.ArrayList<java.lang.String>> strListOptional86 = java.util.Optional.ofNullable(strList80);
        io.swagger.oas.models.media.Schema schema87 = schema5.required((java.util.List<java.lang.String>) strList80);
        schema5.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strCollectionOptional85);
        org.junit.Assert.assertNotNull(strListOptional86);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test03910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03910");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        schema13.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema17.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema17.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema17.multipleOf(bigDecimal29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        strComparableSchema17.setProperties(strMap31);
        schema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Comparable<java.lang.String> strComparable34 = strComparableSchema17.getDefault();
        strComparableSchema17.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int37 = strComparableSchema17.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strComparable34);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test03911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03911");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.description("*/*");
        schema12.setMaxItems((java.lang.Integer) 10);
        schema12.setMaxLength((java.lang.Integer) (-1));
        schema12.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test03912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03912");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.Integer int32 = strComparableSchema10.getMaxItems();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema10.properties(strMap33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        strComparableSchema10.setExternalDocs(externalDocumentation35);
        java.lang.Object obj37 = strComparableSchema10.getExample();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema10.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema39.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.xml(xML42);
        io.swagger.oas.models.media.Schema schema45 = schema43.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test03913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03913");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.writeOnly((java.lang.Boolean) false);
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema3.additionalProperties(schema6);
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema10.setMultipleOf(bigDecimal13);
        java.lang.String str15 = schema10.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test03914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03914");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.name("hi!");
        strComparableSchema6.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.properties(strMap32);
        java.lang.Boolean boolean34 = schema33.getNullable();
        java.lang.String str35 = schema33.getType();
        schema33.setTitle("#/components/schemas/");
        schema33.setFormat("#/components/schemas/");
        java.util.List<java.lang.String> strList40 = schema33.getRequired();
        boolean boolean41 = strComparableSchema6.equals((java.lang.Object) schema33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema6.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        schema43.setDiscriminator(discriminator44);
        schema43.setMinLength((java.lang.Integer) 0);
        schema43.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: Optional[[class Tag {\n        name: Optional.empty\n        description: Optional.empty\n        externalDocs: null\n    }, class Tag {\n        name: hi!\n        description: hi!\n        externalDocs: null\n    }, class Tag {\n        name: #/components/schemas/\n        description: #/components/schemas/\n        externalDocs: null\n    }]]\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test03915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03915");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Integer int3 = schema2.getMaxLength();
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.minProperties((java.lang.Integer) 1);
        schema9.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test03916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03916");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        io.swagger.oas.models.media.XML xML8 = null;
        schema5.setXml(xML8);
        io.swagger.oas.models.media.Schema schema11 = schema5.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema12.title("");
        io.swagger.oas.models.media.Schema schema22 = schema5.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema24 = schema5.maxItems((java.lang.Integer) 100);
        schema5.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test03917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03917");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        strComparableSchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean20 = strComparableSchema0.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test03918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03918");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        strComparableSchema0.setMultipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema0.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.readOnly((java.lang.Boolean) false);
        strComparableSchema0.setMinLength((java.lang.Integer) 10);
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML30 = null;
        strComparableSchema0.setXml(xML30);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test03919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03919");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        strComparableSchema4.setDescription("hi!");
        strComparableSchema4.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal15 = strComparableSchema4.getMultipleOf();
        java.lang.String str16 = strComparableSchema4.get$ref();
        java.lang.String[] strArray21 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        strComparableSchema4.setRequired((java.util.List<java.lang.String>) strList22);
        java.lang.Integer int25 = strComparableSchema4.getMaxLength();
        strComparableSchema4.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema31.readOnly((java.lang.Boolean) true);
        schema33.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03920");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema0.xml(xML37);
        java.lang.Comparable<java.lang.String> strComparable39 = null;
        strComparableSchema0.addEnumItemObject(strComparable39);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema0.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test03921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03921");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = strComparableSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str16 = strComparableSchema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.not((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.lang.Boolean boolean21 = strComparableSchema15.getReadOnly();
        strComparableSchema15.setType("");
        strComparableSchema15.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema15.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str29 = strComparableSchema28.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema30.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema30);
        strComparableSchema28.setDescription("hi!");
        strComparableSchema28.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal39 = strComparableSchema28.getMultipleOf();
        java.lang.String str40 = strComparableSchema28.get$ref();
        java.lang.String[] strArray45 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        strComparableSchema28.setRequired((java.util.List<java.lang.String>) strList46);
        java.lang.Integer int49 = strComparableSchema28.getMaxLength();
        java.lang.Integer int50 = strComparableSchema28.getMaxProperties();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema28.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str54 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema55.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema53.not((io.swagger.oas.models.media.Schema) strComparableSchema55);
        strComparableSchema53.setDescription("hi!");
        strComparableSchema53.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal64 = strComparableSchema53.getMultipleOf();
        java.lang.String str65 = strComparableSchema53.get$ref();
        io.swagger.oas.models.media.Schema schema66 = schema52.example((java.lang.Object) strComparableSchema53);
        boolean boolean67 = strComparableSchema15.equals((java.lang.Object) schema52);
        java.math.BigDecimal bigDecimal68 = null;
        schema52.setMinimum(bigDecimal68);
        schema52.setMinProperties((java.lang.Integer) 0);
        schema14.setDefault((java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema schema74 = schema14.readOnly((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass75 = schema14.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test03922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03922");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.description("hi!");
        java.lang.Boolean boolean17 = strComparableSchema0.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = strComparableSchema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema18.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean22 = strComparableSchema18.getReadOnly();
        strComparableSchema0.setExample((java.lang.Object) boolean22);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        schema25.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.minimum(bigDecimal28);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test03923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03923");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.String str30 = strComparableSchema24.get$ref();
        strComparableSchema0.addExtension("#/components/schemas/", (java.lang.Object) str30);
        java.lang.Integer int32 = strComparableSchema0.getMinLength();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema0.description("");
        java.lang.String str35 = schema34.get$ref();
        java.lang.String str36 = schema34.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test03924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03924");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean10 = strComparableSchema0.getDeprecated();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.addRequiredItem("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test03925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03925");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        java.lang.Boolean boolean10 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator11 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator12 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.description("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema16.get$ref();
        java.lang.String str20 = schema16.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test03926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03926");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema25 = schema24.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema27 = schema24.minLength((java.lang.Integer) 0);
        schema27.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.properties(strMap30);
        schema31.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema35.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema40 = schema38.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema42 = schema38.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator43 = schema38.getDiscriminator();
        schema38.setUniqueItems((java.lang.Boolean) false);
        schema38.setExclusiveMinimum((java.lang.Boolean) false);
        schema31.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(discriminator43);
    }

    @Test
    public void test03927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03927");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.lang.Integer int8 = strComparableSchema0.getMinItems();
        strComparableSchema0.set$ref(",");
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.description("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test03928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03928");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.type("");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = strComparableSchema0.getNullable();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03929");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema2.format("#/components/schemas/");
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMinimum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList16 = schema11.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strComparableList16);
    }

    @Test
    public void test03930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03930");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = strComparableSchema0.getProperties();
        java.lang.Boolean boolean14 = strComparableSchema0.getReadOnly();
        java.lang.Comparable<java.lang.String> strComparable15 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.minLength((java.lang.Integer) 1);
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.minProperties((java.lang.Integer) 100);
        java.lang.Object obj24 = null;
        schema23.setExample(obj24);
        java.lang.Boolean boolean26 = schema23.getUniqueItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(strComparable15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test03931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03931");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.String str25 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.Integer int47 = strComparableSchema26.getMaxLength();
        java.lang.Integer int48 = strComparableSchema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema26.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        strComparableSchema51.setDescription("hi!");
        strComparableSchema51.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal62 = strComparableSchema51.getMultipleOf();
        java.lang.String str63 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema schema64 = schema50.example((java.lang.Object) strComparableSchema51);
        java.lang.Integer int65 = schema64.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str67 = strComparableSchema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema68.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.not((io.swagger.oas.models.media.Schema) strComparableSchema68);
        java.lang.String str72 = strComparableSchema66.get$ref();
        java.lang.String[] strArray77 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional80 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema66.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema82 = schema64.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema0.required((java.util.List<java.lang.String>) strList78);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional84 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList78);
        java.util.Optional<java.util.ArrayList<java.lang.String>> strListOptional85 = java.util.Optional.of(strList78);
        java.lang.Class<?> wildcardClass86 = strList78.getClass();
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str25, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(bigDecimal62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strCollectionOptional84);
        org.junit.Assert.assertNotNull(strListOptional85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test03932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03932");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.lang.Integer int8 = strComparableSchema0.getMinItems();
        strComparableSchema0.set$ref(",");
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal13 = null;
        strComparableSchema0.setMultipleOf(bigDecimal13);
        strComparableSchema0.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.maxItems((java.lang.Integer) (-1));
        schema20.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test03933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03933");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = strComparableSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setName(",");
        io.swagger.oas.models.media.Schema schema18 = schema14.addRequiredItem("");
        io.swagger.oas.models.media.XML xML19 = null;
        schema14.setXml(xML19);
        java.lang.String str21 = schema14.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "," + "'", str21, ",");
    }

    @Test
    public void test03934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03934");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = schema2.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema6 = schema2.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        strComparableSchema7.setDescription("hi!");
        strComparableSchema7.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal18 = strComparableSchema7.getMultipleOf();
        java.lang.String str19 = strComparableSchema7.get$ref();
        strComparableSchema7.setName("no description");
        strComparableSchema7.set$ref("Optional.empty");
        io.swagger.oas.models.media.Schema schema24 = schema6.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema7);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema6.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
    }

    @Test
    public void test03935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03935");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList19 = strComparableSchema0.getEnum();
        java.lang.Integer int20 = strComparableSchema0.getMinLength();
        strComparableSchema0.setMinProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal23 = null;
        strComparableSchema0.setMaximum(bigDecimal23);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strComparableList19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test03936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03936");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList6 = strComparableSchema5.getRequired();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema5.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str10 = strComparableSchema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema11.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema9.not((io.swagger.oas.models.media.Schema) strComparableSchema11);
        strComparableSchema9.setDescription("hi!");
        strComparableSchema9.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal20 = strComparableSchema9.getMultipleOf();
        java.lang.String str21 = strComparableSchema9.get$ref();
        java.lang.String[] strArray26 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        strComparableSchema9.setRequired((java.util.List<java.lang.String>) strList27);
        java.lang.Integer int30 = strComparableSchema9.getMaxLength();
        strComparableSchema9.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        strComparableSchema0.setDefault((java.lang.Object) strComparableSchema9);
        java.lang.String str35 = strComparableSchema0.getName();
        java.lang.String str36 = strComparableSchema0.getTitle();
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test03937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03937");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        schema13.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str18 = strComparableSchema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema19.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema17.not((io.swagger.oas.models.media.Schema) strComparableSchema19);
        strComparableSchema17.setDescription("hi!");
        java.math.BigDecimal bigDecimal25 = null;
        strComparableSchema17.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema17.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema17.multipleOf(bigDecimal29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        strComparableSchema17.setProperties(strMap31);
        schema13.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema17);
        io.swagger.oas.models.media.Schema schema35 = schema13.readOnly((java.lang.Boolean) false);
        schema35.setPattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.properties(strMap39);
        java.lang.Boolean boolean41 = schema40.getUniqueItems();
        schema40.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal44 = null;
        schema40.setMultipleOf(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema40.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = schema47.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = schema47.title("hi!");
        java.lang.String str52 = schema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = strComparableSchema53.getExternalDocs();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema53.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str59 = strComparableSchema58.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema60.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema58.not((io.swagger.oas.models.media.Schema) strComparableSchema60);
        strComparableSchema58.setDescription("hi!");
        strComparableSchema58.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema58.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = strComparableSchema58.getProperties();
        io.swagger.oas.models.media.Schema schema72 = schema56.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema58);
        java.lang.Boolean boolean73 = schema72.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator74 = null;
        schema72.setDiscriminator(discriminator74);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = schema72.getProperties();
        io.swagger.oas.models.media.Schema schema77 = schema51.properties(strMap76);
        schema35.setProperties(strMap76);
        schema35.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator81 = schema35.getDiscriminator();
        java.lang.Integer int82 = schema35.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(externalDocumentation54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(discriminator81);
        org.junit.Assert.assertNull(int82);
    }

    @Test
    public void test03938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03938");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.maxItems((java.lang.Integer) 100);
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        strComparableSchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int30 = strComparableSchema0.getMinItems();
        java.math.BigDecimal bigDecimal31 = strComparableSchema0.getMaximum();
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        strComparableSchema0.setDiscriminator(discriminator32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = strComparableSchema0.getProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNull(strMap34);
    }

    @Test
    public void test03939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03939");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        strComparableSchema0.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.properties(strMap28);
        java.lang.Integer int30 = schema29.getMinProperties();
        schema29.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema29.minimum(bigDecimal33);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test03940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03940");
        java.util.Optional<java.util.RandomAccess> randomAccessOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(randomAccessOptional0);
    }

    @Test
    public void test03941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03941");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        java.lang.Integer int12 = schema9.getMaxProperties();
        java.lang.Boolean boolean13 = schema9.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test03942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03942");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        strComparableSchema34.setExtensions(strMap38);
        strComparableSchema34.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema34.minimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema31.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema34);
        schema44.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal47 = null;
        schema44.setMaximum(bigDecimal47);
        java.lang.Class<?> wildcardClass49 = schema44.getClass();
        java.util.Optional<java.lang.reflect.AnnotatedElement> annotatedElementOptional50 = java.util.Optional.ofNullable((java.lang.reflect.AnnotatedElement) wildcardClass49);
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional51 = java.util.Optional.ofNullable(wildcardClass49);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(annotatedElementOptional50);
        org.junit.Assert.assertNotNull(wildcardClassOptional51);
    }

    @Test
    public void test03943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03943");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        java.lang.Boolean boolean11 = schema10.getUniqueItems();
        schema10.setName("#/components/schemas/");
        schema10.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int16 = schema10.getMaxLength();
        io.swagger.oas.models.media.Schema schema18 = schema10.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03944");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        schema9.setNot((io.swagger.oas.models.media.Schema) strComparableSchema10);
        schema9.setName("Optional.empty");
        io.swagger.oas.models.media.Schema schema35 = schema9.format("Optional.empty");
        schema35.setTitle("");
        java.lang.Boolean boolean38 = schema35.getReadOnly();
        io.swagger.oas.models.media.Schema schema40 = schema35.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema35.exclusiveMinimum((java.lang.Boolean) false);
        schema35.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test03945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03945");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        boolean boolean15 = serverListOptional14.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional14.orElse(serverList16);
        io.swagger.oas.models.servers.Server[] serverArray18 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList19 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList19, serverArray18);
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList22 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList19);
        io.swagger.oas.annotations.servers.Server[] serverArray23 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray23);
        boolean boolean25 = serverListOptional24.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList27 = serverListOptional24.orElse(serverList26);
        io.swagger.oas.models.servers.Server[] serverArray28 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList29 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList29, serverArray28);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional24.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        java.util.List<io.swagger.oas.models.servers.Server> serverList32 = serverListOptional1.orElse(serverList31);
        boolean boolean33 = serverListOptional1.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray34 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional35 = io.swagger.jaxrs2.OperationParser.getServers(serverArray34);
        java.lang.String str36 = serverListOptional35.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray37 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional38 = io.swagger.jaxrs2.OperationParser.getServers(serverArray37);
        boolean boolean39 = serverListOptional38.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList40 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList41 = serverListOptional38.orElse(serverList40);
        io.swagger.oas.models.servers.Server[] serverArray42 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList43 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList43, serverArray42);
        java.util.List<io.swagger.oas.models.servers.Server> serverList45 = serverListOptional38.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList43);
        java.util.List<io.swagger.oas.models.servers.Server> serverList46 = serverListOptional35.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList43);
        io.swagger.oas.annotations.servers.Server[] serverArray47 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional48 = io.swagger.jaxrs2.OperationParser.getServers(serverArray47);
        java.lang.String str49 = serverListOptional48.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray50 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional51 = io.swagger.jaxrs2.OperationParser.getServers(serverArray50);
        boolean boolean52 = serverListOptional51.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList53 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList54 = serverListOptional51.orElse(serverList53);
        io.swagger.oas.models.servers.Server[] serverArray55 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList56 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList56, serverArray55);
        java.util.List<io.swagger.oas.models.servers.Server> serverList58 = serverListOptional51.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList56);
        java.util.List<io.swagger.oas.models.servers.Server> serverList59 = serverListOptional48.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList56);
        java.util.List<io.swagger.oas.models.servers.Server> serverList60 = serverListOptional35.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList56);
        java.util.List<io.swagger.oas.models.servers.Server> serverList61 = serverListOptional1.orElse(serverList60);
        io.swagger.oas.annotations.servers.Server[] serverArray62 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional63 = io.swagger.jaxrs2.OperationParser.getServers(serverArray62);
        java.lang.String str64 = serverListOptional63.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray65 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional66 = io.swagger.jaxrs2.OperationParser.getServers(serverArray65);
        java.lang.String str67 = serverListOptional66.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray68 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional69 = io.swagger.jaxrs2.OperationParser.getServers(serverArray68);
        boolean boolean70 = serverListOptional69.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList71 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList72 = serverListOptional69.orElse(serverList71);
        io.swagger.oas.models.servers.Server[] serverArray73 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList74 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList74, serverArray73);
        java.util.List<io.swagger.oas.models.servers.Server> serverList76 = serverListOptional69.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList74);
        java.util.List<io.swagger.oas.models.servers.Server> serverList77 = serverListOptional66.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList74);
        java.util.List<io.swagger.oas.models.servers.Server> serverList78 = serverListOptional63.orElse(serverList77);
        java.util.List<io.swagger.oas.models.servers.Server> serverList79 = serverListOptional1.orElse(serverList78);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(serverList17);
        org.junit.Assert.assertNotNull(serverArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(serverList21);
        org.junit.Assert.assertNotNull(serverList22);
        org.junit.Assert.assertNotNull(serverArray23);
        org.junit.Assert.assertNotNull(serverListOptional24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(serverList27);
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNotNull(serverList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(serverArray34);
        org.junit.Assert.assertNotNull(serverListOptional35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Optional.empty" + "'", str36, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray37);
        org.junit.Assert.assertNotNull(serverListOptional38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(serverList41);
        org.junit.Assert.assertNotNull(serverArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(serverList45);
        org.junit.Assert.assertNotNull(serverList46);
        org.junit.Assert.assertNotNull(serverArray47);
        org.junit.Assert.assertNotNull(serverListOptional48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Optional.empty" + "'", str49, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray50);
        org.junit.Assert.assertNotNull(serverListOptional51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(serverList54);
        org.junit.Assert.assertNotNull(serverArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(serverList58);
        org.junit.Assert.assertNotNull(serverList59);
        org.junit.Assert.assertNotNull(serverList60);
        org.junit.Assert.assertNotNull(serverList61);
        org.junit.Assert.assertNotNull(serverArray62);
        org.junit.Assert.assertNotNull(serverListOptional63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Optional.empty" + "'", str64, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray65);
        org.junit.Assert.assertNotNull(serverListOptional66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Optional.empty" + "'", str67, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray68);
        org.junit.Assert.assertNotNull(serverListOptional69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(serverList72);
        org.junit.Assert.assertNotNull(serverArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(serverList76);
        org.junit.Assert.assertNotNull(serverList77);
        org.junit.Assert.assertNotNull(serverList78);
        org.junit.Assert.assertNotNull(serverList79);
    }

    @Test
    public void test03946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03946");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal6 = null;
        schema2.setMultipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.title("hi!");
        java.lang.String str14 = schema13.get$ref();
        schema13.setFormat("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema13.discriminator(discriminator17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.minimum(bigDecimal19);
        java.lang.Integer int21 = schema18.getMaxLength();
        schema18.setType("#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test03947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03947");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema17.multipleOf(bigDecimal23);
        io.swagger.oas.models.media.XML xML25 = null;
        schema24.setXml(xML25);
        schema24.setWriteOnly((java.lang.Boolean) true);
        java.lang.Integer int29 = schema24.getMinItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int29);
    }

    @Test
    public void test03948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03948");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str9 = strComparableSchema8.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema10.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema8.not((io.swagger.oas.models.media.Schema) strComparableSchema10);
        strComparableSchema8.setDescription("hi!");
        strComparableSchema8.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = strComparableSchema8.getDiscriminator();
        strComparableSchema0.addExtension("Optional.empty", (java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.uniqueItems((java.lang.Boolean) true);
        java.lang.String str25 = strComparableSchema0.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        strComparableSchema26.setDescription("hi!");
        strComparableSchema26.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal37 = strComparableSchema26.getMultipleOf();
        java.lang.String str38 = strComparableSchema26.get$ref();
        java.lang.String[] strArray43 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        strComparableSchema26.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.Integer int47 = strComparableSchema26.getMaxLength();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema26.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema26.getNot();
        io.swagger.oas.models.media.Schema schema52 = schema50.uniqueItems((java.lang.Boolean) true);
        strComparableSchema0.setAdditionalProperties(schema52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str56 = strComparableSchema55.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema57.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema55.not((io.swagger.oas.models.media.Schema) strComparableSchema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str62 = strComparableSchema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema63.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema61.not((io.swagger.oas.models.media.Schema) strComparableSchema63);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str68 = strComparableSchema67.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema69.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema67.not((io.swagger.oas.models.media.Schema) strComparableSchema69);
        strComparableSchema67.setDescription("hi!");
        strComparableSchema67.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema61.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema67);
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema57.not((io.swagger.oas.models.media.Schema) strComparableSchema61);
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema61.nullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = schema81.getExtensions();
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema81);
        io.swagger.oas.models.media.Schema schema85 = schema83.addRequiredItem("no description");
        schema85.setTitle("#/components/schemas/no description");
        java.lang.Integer int88 = schema85.getMaxItems();
        io.swagger.oas.models.media.Schema schema90 = schema85.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema92 = schema85.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str25, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(int88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test03949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03949");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.XML xML7 = null;
        schema6.setXml(xML7);
        io.swagger.oas.models.media.Schema schema10 = schema6.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema6.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema13.xml(xML19);
        java.lang.String str21 = strComparableSchema13.getFormat();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.maximum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema27 = schema23.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setDefault((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03950");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema4.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema4.setNullable((java.lang.Boolean) true);
        strComparableSchema4.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = null;
        strComparableSchema13.setExtensions(strMap17);
        strComparableSchema13.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int21 = strComparableSchema13.getMaxItems();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema13.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        strComparableSchema24.setDescription("hi!");
        java.math.BigDecimal bigDecimal32 = null;
        strComparableSchema24.setMaximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema24.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList36 = strComparableSchema24.getRequired();
        io.swagger.oas.models.media.Schema schema37 = schema23.required(strList36);
        strComparableSchema4.setRequired(strList36);
        java.util.Optional<java.util.List<java.lang.String>> strListOptional39 = java.util.Optional.of(strList36);
        strComparableSchema0.setRequired(strList36);
        java.lang.Comparable<java.lang.String> strComparable41 = strComparableSchema0.getDefault();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema0.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strListOptional39);
        org.junit.Assert.assertNull(strComparable41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test03951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03951");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = strComparableSchema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema10.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.uniqueItems((java.lang.Boolean) false);
        strComparableSchema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema10);
        java.lang.String str17 = strComparableSchema2.getName();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema2.maximum(bigDecimal18);
        java.lang.Boolean boolean20 = schema19.getNullable();
        io.swagger.oas.models.media.Schema schema22 = schema19.exclusiveMaximum((java.lang.Boolean) true);
        schema19.set$ref("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(externalDocumentation11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test03952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03952");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        java.lang.Integer int39 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.lang.String str46 = strComparableSchema40.get$ref();
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional54 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema40.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = schema38.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema58 = schema56.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal59 = null;
        schema58.setMaximum(bigDecimal59);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = schema58.getExtensions();
        java.lang.Integer int62 = schema58.getMaxLength();
        io.swagger.oas.models.media.Schema schema64 = schema58.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test03953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03953");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.lang.Boolean boolean6 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setType("");
        strComparableSchema0.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema0.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        strComparableSchema13.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal24 = strComparableSchema13.getMultipleOf();
        java.lang.String str25 = strComparableSchema13.get$ref();
        java.lang.String[] strArray30 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        strComparableSchema13.setRequired((java.util.List<java.lang.String>) strList31);
        java.lang.Integer int34 = strComparableSchema13.getMaxLength();
        java.lang.Integer int35 = strComparableSchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.lang.String str50 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema schema51 = schema37.example((java.lang.Object) strComparableSchema38);
        boolean boolean52 = strComparableSchema0.equals((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema54.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema54.discriminator(discriminator57);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test03954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03954");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema37 = schema33.addRequiredItem("Optional.empty");
        schema33.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema33.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema33.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = schema43.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema43.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int48 = schema47.getMaxLength();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
    }

    @Test
    public void test03955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03955");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator37 = strComparableSchema0.getDiscriminator();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema0.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema40 = schema39.getNot();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test03956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03956");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        schema5.setDescription("");
        schema5.setType("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        schema5.setExternalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema5.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = strComparableSchema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema16 = schema5.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = strComparableSchema17.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable19 = strComparableSchema17.getDefault();
        java.lang.Integer int20 = strComparableSchema17.getMinProperties();
        strComparableSchema14.setDefault((java.lang.Object) strComparableSchema17);
        java.lang.String str22 = strComparableSchema17.toString();
        java.lang.Comparable<java.lang.String> strComparable23 = strComparableSchema17.getDefault();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(strComparable19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str22, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(strComparable23);
    }

    @Test
    public void test03957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03957");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        strComparableSchema0.setExtensions(strMap16);
        strComparableSchema0.setMaxLength((java.lang.Integer) 1);
        strComparableSchema0.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean22 = strComparableSchema0.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test03958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03958");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal36 = strComparableSchema25.getMultipleOf();
        java.lang.String str37 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema24.example((java.lang.Object) strComparableSchema25);
        java.lang.Integer int39 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema40.not((io.swagger.oas.models.media.Schema) strComparableSchema42);
        java.lang.String str46 = strComparableSchema40.get$ref();
        java.lang.String[] strArray51 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional54 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema40.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema56 = schema38.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema38.xml(xML57);
        io.swagger.oas.models.media.Schema schema60 = schema38.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML61 = schema38.getXml();
        schema38.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(xML61);
    }

    @Test
    public void test03959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03959");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = schema17.getMinimum();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema17.maximum(bigDecimal21);
        java.lang.Boolean boolean23 = schema17.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator24 = schema17.getDiscriminator();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(discriminator24);
    }

    @Test
    public void test03960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03960");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = schema13.getMaximum();
        java.math.BigDecimal bigDecimal15 = schema13.getMinimum();
        schema13.setPattern("#/components/schemas/");
        schema13.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = strComparableSchema20.getExternalDocs();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.minItems((java.lang.Integer) (-1));
        schema23.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema13.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setMaxLength((java.lang.Integer) 10);
        java.lang.Integer int29 = schema13.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str31 = strComparableSchema30.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema32.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema30.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        strComparableSchema30.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema30.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema30.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema41.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal44 = schema43.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = strComparableSchema45.getExternalDocs();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema45.minItems((java.lang.Integer) (-1));
        schema48.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema48.setExclusiveMinimum((java.lang.Boolean) false);
        schema43.setNot(schema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str55 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema56.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema54.not((io.swagger.oas.models.media.Schema) strComparableSchema56);
        strComparableSchema54.setDescription("hi!");
        strComparableSchema54.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal65 = strComparableSchema54.getMultipleOf();
        strComparableSchema54.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str68 = strComparableSchema54.get$ref();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema54.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema54.getNot();
        io.swagger.oas.models.media.Schema schema72 = schema48.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = null;
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema54.externalDocs(externalDocumentation73);
        schema13.setNot((io.swagger.oas.models.media.Schema) strComparableSchema54);
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema54.$ref("*/*");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(externalDocumentation46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test03961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03961");
        java.util.Optional<java.lang.Comparable<java.lang.String>> strComparableOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(strComparableOptional0);
    }

    @Test
    public void test03962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03962");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema4.description("");
        java.lang.Integer int7 = schema4.getMaxItems();
        java.lang.Object obj8 = schema4.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.writeOnly((java.lang.Boolean) false);
        java.lang.String[] strArray18 = new java.lang.String[] { "Optional.empty", "hi!", "hi!", "Optional.empty", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray18);
        schema12.setExample((java.lang.Object) tagSetOptional19);
        java.lang.Object obj22 = null;
        schema12.addExtension("*/*", obj22);
        java.lang.String str24 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema26 = schema12.minProperties((java.lang.Integer) 1);
        schema4.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema12);
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!", "Optional.empty", "no description", "," };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional34 = io.swagger.jaxrs2.OperationParser.getTags(strArray33);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional35 = io.swagger.jaxrs2.OperationParser.getTags(strArray33);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional36 = io.swagger.jaxrs2.OperationParser.getTags(strArray33);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional37 = io.swagger.jaxrs2.OperationParser.getTags(strArray33);
        schema4.setExample((java.lang.Object) tagSetOptional37);
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(tagSetOptional19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(tagSetOptional34);
        org.junit.Assert.assertNotNull(tagSetOptional35);
        org.junit.Assert.assertNotNull(tagSetOptional36);
        org.junit.Assert.assertNotNull(tagSetOptional37);
    }

    @Test
    public void test03963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03963");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        java.lang.Boolean boolean35 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setPattern("");
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean42 = strComparableSchema0.getDeprecated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + true + "'", boolean35, true);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
    }

    @Test
    public void test03964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03964");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str13 = strComparableSchema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema12.not((io.swagger.oas.models.media.Schema) strComparableSchema14);
        strComparableSchema12.setDescription("hi!");
        strComparableSchema12.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema6.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema12);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema2.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema6.name("hi!");
        java.lang.Object obj27 = strComparableSchema6.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = strComparableSchema6.getProperties();
        java.lang.Boolean boolean29 = strComparableSchema6.getNullable();
        strComparableSchema6.setNullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal32 = null;
        strComparableSchema6.setMultipleOf(bigDecimal32);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test03965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03965");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema2.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        schema13.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = schema13.maxLength((java.lang.Integer) 100);
        schema13.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean22 = schema13.getReadOnly();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test03966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03966");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema0.getAdditionalProperties();
        java.lang.String str19 = strComparableSchema0.getType();
        java.lang.Object obj20 = strComparableSchema0.getExample();
        java.util.List<java.lang.String> strList21 = strComparableSchema0.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(strList21);
    }

    @Test
    public void test03967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03967");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        strComparableSchema0.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = schema13.getMaximum();
        java.math.BigDecimal bigDecimal15 = schema13.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.properties(strMap17);
        strComparableSchema16.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str21 = strComparableSchema16.getFormat();
        io.swagger.oas.models.media.XML xML22 = null;
        strComparableSchema16.setXml(xML22);
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema16.discriminator(discriminator24);
        io.swagger.oas.models.media.Schema schema26 = schema13.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema16);
        io.swagger.oas.models.media.Schema schema28 = schema26.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test03968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03968");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema5 = schema3.addRequiredItem("hi!");
        java.lang.String str6 = schema3.getDescription();
        schema3.setMinItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema3.minimum(bigDecimal9);
        java.lang.String str11 = schema10.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Optional.empty" + "'", str6, "Optional.empty");
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test03969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03969");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.lang.Boolean boolean13 = strComparableSchema7.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        strComparableSchema7.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema16 = schema6.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema7);
        java.lang.Boolean boolean17 = schema6.getReadOnly();
        io.swagger.oas.models.media.Schema schema19 = schema6.maxProperties((java.lang.Integer) 1);
        schema19.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03970");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema36 = schema33.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema38 = schema36.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema38.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.xml(xML41);
        java.lang.String str43 = schema42.getFormat();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str43, "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
    }

    @Test
    public void test03971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03971");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = strComparableSchema0.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation20);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test03972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03972");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj6 = schema2.getExample();
        io.swagger.oas.models.media.XML xML7 = schema2.getXml();
        io.swagger.oas.models.media.Schema schema9 = schema2.$ref("*/*");
        io.swagger.oas.models.media.Schema schema11 = schema2.format("");
        java.math.BigDecimal bigDecimal12 = null;
        schema2.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.XML xML14 = schema2.getXml();
        java.math.BigDecimal bigDecimal15 = null;
        schema2.setMinimum(bigDecimal15);
        java.lang.String str17 = schema2.toString();
        java.lang.Boolean boolean18 = schema2.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(obj6);
        org.junit.Assert.assertNull(xML7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(xML14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str17, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test03973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03973");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.maximum(bigDecimal13);
        strComparableSchema0.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.properties(strMap18);
        java.lang.Boolean boolean20 = schema19.getUniqueItems();
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal23 = null;
        schema19.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema19.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.title("hi!");
        schema30.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) (byte) 10);
        boolean boolean34 = strComparableSchema0.equals((java.lang.Object) (byte) 10);
        io.swagger.oas.models.media.XML xML35 = null;
        strComparableSchema0.setXml(xML35);
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema38.maxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMultipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxLength((java.lang.Integer) 0);
        schema38.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test03974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03974");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.lang.String str12 = strComparableSchema0.get$ref();
        java.lang.String[] strArray17 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList18);
        java.lang.Integer int21 = strComparableSchema0.getMaxLength();
        java.lang.Integer int22 = strComparableSchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema0.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema26.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str30 = strComparableSchema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema31.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema29.not((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str36 = strComparableSchema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema37.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema35.not((io.swagger.oas.models.media.Schema) strComparableSchema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str42 = strComparableSchema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema43.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema41.not((io.swagger.oas.models.media.Schema) strComparableSchema43);
        strComparableSchema41.setDescription("hi!");
        strComparableSchema41.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema41);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema31.not((io.swagger.oas.models.media.Schema) strComparableSchema35);
        strComparableSchema31.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj56 = strComparableSchema31.getExample();
        io.swagger.oas.models.media.Schema schema57 = schema26.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema59 = schema57.format("Optional.empty");
        schema57.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema57.setDescription("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema65 = schema57.addRequiredItem("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test03975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03975");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        java.math.BigDecimal bigDecimal12 = strComparableSchema0.getMultipleOf();
        java.lang.Boolean boolean13 = strComparableSchema0.getNullable();
        java.lang.Comparable<java.lang.String> strComparable14 = strComparableSchema0.getDefault();
        java.util.List<java.lang.String> strList15 = strComparableSchema0.getRequired();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(strComparable14);
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test03976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03976");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("hi!");
        schema17.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema2.addProperties(",", schema17);
        java.lang.Integer int23 = schema22.getMaxItems();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema27.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema27.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema31.format("no description");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test03977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03977");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean3 = serverListOptional2.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str5 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema4.not((io.swagger.oas.models.media.Schema) strComparableSchema6);
        java.lang.String str10 = strComparableSchema4.get$ref();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema4.getNot();
        boolean boolean12 = serverListOptional2.equals((java.lang.Object) schema11);
        io.swagger.oas.models.media.Schema schema14 = schema11.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema11.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.title("no description");
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03978");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setWriteOnly((java.lang.Boolean) false);
        strComparableSchema0.setNullable((java.lang.Boolean) true);
        strComparableSchema0.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str8 = strComparableSchema7.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema9.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema7.not((io.swagger.oas.models.media.Schema) strComparableSchema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = null;
        strComparableSchema9.setExtensions(strMap13);
        strComparableSchema9.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int17 = strComparableSchema9.getMaxItems();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema9.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str21 = strComparableSchema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema22.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema20.not((io.swagger.oas.models.media.Schema) strComparableSchema22);
        strComparableSchema20.setDescription("hi!");
        java.math.BigDecimal bigDecimal28 = null;
        strComparableSchema20.setMaximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema20.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList32 = strComparableSchema20.getRequired();
        io.swagger.oas.models.media.Schema schema33 = schema19.required(strList32);
        strComparableSchema0.setRequired(strList32);
        strComparableSchema0.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str38 = strComparableSchema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema39.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema37.not((io.swagger.oas.models.media.Schema) strComparableSchema39);
        strComparableSchema37.setDescription("hi!");
        strComparableSchema37.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal48 = strComparableSchema37.getMultipleOf();
        java.lang.String str49 = strComparableSchema37.get$ref();
        strComparableSchema37.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema37.description("hi!");
        java.lang.Boolean boolean54 = strComparableSchema37.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = strComparableSchema55.getExternalDocs();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema55.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean59 = strComparableSchema55.getReadOnly();
        strComparableSchema37.setExample((java.lang.Object) boolean59);
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema37.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal63 = null;
        strComparableSchema37.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Discriminator discriminator65 = null;
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema37.discriminator(discriminator65);
        boolean boolean67 = strComparableSchema0.equals((java.lang.Object) discriminator65);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        schema69.setUniqueItems((java.lang.Boolean) false);
        java.lang.Object obj72 = schema69.getExample();
        io.swagger.oas.models.media.Schema schema74 = schema69.exclusiveMaximum((java.lang.Boolean) true);
        schema74.setPattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [*/*]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNull(externalDocumentation56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(obj72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03979");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        java.lang.Boolean boolean4 = schema2.getDeprecated();
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.minimum(bigDecimal5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.properties(strMap8);
        java.lang.Boolean boolean10 = schema9.getUniqueItems();
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj13 = schema9.getExample();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema9.setExternalDocs(externalDocumentation14);
        java.lang.String str16 = schema9.toString();
        io.swagger.oas.models.media.XML xML17 = null;
        schema9.setXml(xML17);
        schema6.setAdditionalProperties(schema9);
        io.swagger.oas.models.media.Schema schema21 = schema6.uniqueItems((java.lang.Boolean) true);
        java.lang.String str22 = schema21.getFormat();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema21.maximum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema21.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test03980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03980");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.maximum(bigDecimal14);
        java.lang.String str16 = schema15.getName();
        io.swagger.oas.models.media.Schema schema18 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test03981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03981");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        java.lang.Object obj32 = schema31.getExample();
        schema31.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema31.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema36.pattern("");
        java.lang.Integer int39 = schema36.getMaxItems();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test03982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03982");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        java.lang.Boolean boolean10 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator11 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator12 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.description("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema0.setMaximum(bigDecimal17);
        java.lang.Boolean boolean19 = strComparableSchema0.getReadOnly();
        strComparableSchema0.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int22 = strComparableSchema0.getMinProperties();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test03983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03983");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str2 = serverListOptional1.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray3 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray3);
        boolean boolean5 = serverListOptional4.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList6 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = serverListOptional4.orElse(serverList6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional4.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        java.lang.String str13 = serverListOptional1.toString();
        boolean boolean14 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.writeOnly((java.lang.Boolean) false);
        schema17.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema17.title("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str23 = strComparableSchema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema24.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema22.not((io.swagger.oas.models.media.Schema) strComparableSchema24);
        java.lang.Boolean boolean28 = strComparableSchema22.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        strComparableSchema22.setProperties(strMap29);
        io.swagger.oas.models.media.Schema schema31 = schema21.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema22);
        java.lang.Boolean boolean32 = schema21.getReadOnly();
        boolean boolean33 = serverListOptional1.equals((java.lang.Object) schema21);
        io.swagger.oas.annotations.servers.Server[] serverArray34 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional35 = io.swagger.jaxrs2.OperationParser.getServers(serverArray34);
        boolean boolean36 = serverListOptional35.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList37 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList38 = serverListOptional35.orElse(serverList37);
        io.swagger.oas.models.servers.Server[] serverArray39 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList40 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList40, serverArray39);
        java.util.List<io.swagger.oas.models.servers.Server> serverList42 = serverListOptional35.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList40);
        java.util.List<io.swagger.oas.models.servers.Server> serverList43 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList40);
        boolean boolean44 = serverListOptional1.isPresent();
        java.lang.String str45 = serverListOptional1.toString();
        java.lang.String str46 = serverListOptional1.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Optional.empty" + "'", str2, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(serverList7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Optional.empty" + "'", str13, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(serverArray34);
        org.junit.Assert.assertNotNull(serverListOptional35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(serverList38);
        org.junit.Assert.assertNotNull(serverArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(serverList42);
        org.junit.Assert.assertNotNull(serverList43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Optional.empty" + "'", str45, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Optional.empty" + "'", str46, "Optional.empty");
    }

    @Test
    public void test03984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03984");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema2.setExtensions(strMap6);
        strComparableSchema2.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int10 = strComparableSchema2.getMaxItems();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema2.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str14 = strComparableSchema13.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema15.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema13.not((io.swagger.oas.models.media.Schema) strComparableSchema15);
        strComparableSchema13.setDescription("hi!");
        java.math.BigDecimal bigDecimal21 = null;
        strComparableSchema13.setMaximum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema13.addRequiredItem("hi!");
        java.util.List<java.lang.String> strList25 = strComparableSchema13.getRequired();
        io.swagger.oas.models.media.Schema schema26 = schema12.required(strList25);
        io.swagger.oas.models.media.Schema schema28 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.properties(strMap30);
        java.lang.Boolean boolean32 = schema31.getUniqueItems();
        schema31.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal35 = null;
        schema31.setMultipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema31.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema38.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema38.title("hi!");
        java.lang.String str43 = schema42.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = strComparableSchema44.getExternalDocs();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema44.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str50 = strComparableSchema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema51.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema49.not((io.swagger.oas.models.media.Schema) strComparableSchema51);
        strComparableSchema49.setDescription("hi!");
        strComparableSchema49.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema49.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = strComparableSchema49.getProperties();
        io.swagger.oas.models.media.Schema schema63 = schema47.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema49);
        java.lang.Boolean boolean64 = schema63.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator65 = null;
        schema63.setDiscriminator(discriminator65);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = schema63.getProperties();
        io.swagger.oas.models.media.Schema schema68 = schema42.properties(strMap67);
        schema28.setProperties(strMap67);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(externalDocumentation45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test03985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03985");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        java.lang.String[] strArray3 = new java.lang.String[] { "," };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList4);
        strComparableSchema0.setPattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str12 = strComparableSchema11.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema13.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema11.not((io.swagger.oas.models.media.Schema) strComparableSchema13);
        strComparableSchema11.setDescription("hi!");
        strComparableSchema11.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal22 = strComparableSchema11.getMultipleOf();
        java.lang.String str23 = strComparableSchema11.get$ref();
        java.lang.String[] strArray28 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        strComparableSchema11.setRequired((java.util.List<java.lang.String>) strList29);
        java.lang.Integer int32 = strComparableSchema11.getMaxLength();
        java.lang.Integer int33 = strComparableSchema11.getMaxProperties();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema11.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str37 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema38.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema36.not((io.swagger.oas.models.media.Schema) strComparableSchema38);
        strComparableSchema36.setDescription("hi!");
        strComparableSchema36.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal47 = strComparableSchema36.getMultipleOf();
        java.lang.String str48 = strComparableSchema36.get$ref();
        io.swagger.oas.models.media.Schema schema49 = schema35.example((java.lang.Object) strComparableSchema36);
        java.lang.Integer int50 = schema49.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str52 = strComparableSchema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema53.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema51.not((io.swagger.oas.models.media.Schema) strComparableSchema53);
        java.lang.String str57 = strComparableSchema51.get$ref();
        java.lang.String[] strArray62 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional65 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList63);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema51.required((java.util.List<java.lang.String>) strList63);
        io.swagger.oas.models.media.Schema schema67 = schema49.required((java.util.List<java.lang.String>) strList63);
        io.swagger.oas.models.media.XML xML68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema49.xml(xML68);
        io.swagger.oas.models.media.Schema schema71 = schema49.writeOnly((java.lang.Boolean) false);
        schema10.setAdditionalProperties(schema49);
        io.swagger.oas.models.media.Schema schema74 = schema10.maxProperties((java.lang.Integer) 10);
        schema10.setTitle("class Schema {\n    title: hi!\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: ,\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test03986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03986");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal11 = strComparableSchema0.getMultipleOf();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.maxItems((java.lang.Integer) 0);
        java.lang.Integer int17 = strComparableSchema0.getMinItems();
        strComparableSchema0.setReadOnly((java.lang.Boolean) false);
        java.lang.String str20 = strComparableSchema0.getTitle();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test03987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03987");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        java.math.BigDecimal bigDecimal16 = schema15.getMultipleOf();
        java.lang.Boolean boolean17 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema19 = schema15.maxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMaximum();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test03988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03988");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema9.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str17 = strComparableSchema16.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema18.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema16.not((io.swagger.oas.models.media.Schema) strComparableSchema18);
        strComparableSchema16.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema16.title("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str27 = strComparableSchema26.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema28.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.not((io.swagger.oas.models.media.Schema) strComparableSchema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema34.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema32.not((io.swagger.oas.models.media.Schema) strComparableSchema34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema32.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema38);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema28.not((io.swagger.oas.models.media.Schema) strComparableSchema32);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.multipleOf(bigDecimal51);
        io.swagger.oas.models.media.Schema schema53 = schema25.not(schema52);
        io.swagger.oas.models.media.Schema schema55 = schema52.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str57 = strComparableSchema56.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema58.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema56.not((io.swagger.oas.models.media.Schema) strComparableSchema58);
        java.lang.String str62 = strComparableSchema56.get$ref();
        java.lang.String[] strArray67 = new java.lang.String[] { "Optional.empty", "", "*/*", "no description" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        java.util.Optional<java.util.AbstractCollection<java.lang.String>> strCollectionOptional70 = java.util.Optional.ofNullable((java.util.AbstractCollection<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema56.required((java.util.List<java.lang.String>) strList68);
        io.swagger.oas.models.media.Schema schema72 = schema52.required((java.util.List<java.lang.String>) strList68);
        java.util.Optional<java.util.Collection<java.lang.String>> strCollectionOptional73 = java.util.Optional.of((java.util.Collection<java.lang.String>) strList68);
        java.util.Optional<java.util.AbstractList<java.lang.String>> strListOptional74 = java.util.Optional.ofNullable((java.util.AbstractList<java.lang.String>) strList68);
        schema9.setRequired((java.util.List<java.lang.String>) strList68);
        schema9.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strCollectionOptional70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strCollectionOptional73);
        org.junit.Assert.assertNotNull(strListOptional74);
    }

    @Test
    public void test03989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03989");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getUniqueItems();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema8.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema6.not((io.swagger.oas.models.media.Schema) strComparableSchema8);
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = null;
        strComparableSchema8.setExtensions(strMap12);
        strComparableSchema8.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.minimum(bigDecimal16);
        java.math.BigDecimal bigDecimal18 = strComparableSchema8.getMinimum();
        io.swagger.oas.models.media.Schema schema19 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema21 = schema2.format("no description");
        java.math.BigDecimal bigDecimal22 = schema21.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = schema21.getExternalDocs();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.maximum(bigDecimal24);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test03990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03990");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema0.addRequiredItem("*/*");
        java.lang.Boolean boolean23 = strComparableSchema0.getWriteOnly();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema0.multipleOf(bigDecimal24);
        java.lang.String str26 = strComparableSchema0.getDescription();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "*/*" + "'", str26, "*/*");
    }

    @Test
    public void test03991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03991");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str6 = strComparableSchema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema7.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema5.not((io.swagger.oas.models.media.Schema) strComparableSchema7);
        strComparableSchema5.setDescription("hi!");
        strComparableSchema5.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema5.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = strComparableSchema5.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema3.addProperties("hi!", (io.swagger.oas.models.media.Schema) strComparableSchema5);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema19.getExtensions();
        java.math.BigDecimal bigDecimal21 = null;
        schema19.setMinimum(bigDecimal21);
        schema19.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str26 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema27.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema25.not((io.swagger.oas.models.media.Schema) strComparableSchema27);
        strComparableSchema25.setDescription("hi!");
        strComparableSchema25.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema25.setNullable((java.lang.Boolean) false);
        java.lang.String str38 = strComparableSchema25.get$ref();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema25.name("");
        io.swagger.oas.models.media.Schema schema42 = schema40.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = schema40.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str46 = strComparableSchema45.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema47.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema45.not((io.swagger.oas.models.media.Schema) strComparableSchema47);
        strComparableSchema45.setDescription("hi!");
        strComparableSchema45.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema45.multipleOf(bigDecimal56);
        schema57.setExample((java.lang.Object) "hi!");
        schema57.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean62 = schema57.getReadOnly();
        java.lang.Boolean boolean63 = schema57.getNullable();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = schema57.getExtensions();
        schema40.setExtensions(strMap64);
        schema19.setExtensions(strMap64);
        schema19.setType("class Schema {\n    title: Optional.empty\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema19.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(strMap64);
    }

    @Test
    public void test03992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03992");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.title("");
        java.lang.Boolean boolean10 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator11 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator12 = strComparableSchema0.getDiscriminator();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema0.description("");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema0.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal17 = null;
        strComparableSchema0.setMaximum(bigDecimal17);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(discriminator11);
        org.junit.Assert.assertNull(discriminator12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test03993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03993");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema0.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        strComparableSchema0.setExternalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema0.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML20 = schema19.getXml();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(xML20);
    }

    @Test
    public void test03994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03994");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        java.math.BigDecimal bigDecimal8 = null;
        strComparableSchema0.setMaximum(bigDecimal8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str11 = strComparableSchema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema12.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema10.not((io.swagger.oas.models.media.Schema) strComparableSchema12);
        strComparableSchema10.setDescription("hi!");
        strComparableSchema10.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal21 = strComparableSchema10.getMultipleOf();
        java.lang.String str22 = strComparableSchema10.get$ref();
        java.lang.String[] strArray27 = new java.lang.String[] { ",", "*/*", "hi!", "Optional.empty" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        strComparableSchema10.setRequired((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema0.required((java.util.List<java.lang.String>) strList28);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema33.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema37.getNot();
        io.swagger.oas.models.media.Schema schema40 = schema38.type("no description");
        io.swagger.oas.models.media.Schema schema42 = schema38.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test03995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03995");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap1 = null;
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.properties(strMap1);
        java.lang.Boolean boolean3 = schema2.getNullable();
        java.lang.String str4 = schema2.getType();
        schema2.setTitle("#/components/schemas/");
        schema2.setFormat("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema2.addRequiredItem("*/*");
        java.lang.Object obj11 = schema2.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        schema2.setMaximum(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema2.xml(xML16);
        schema2.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema21.description("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str25 = strComparableSchema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema26.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema24.not((io.swagger.oas.models.media.Schema) strComparableSchema26);
        java.lang.Boolean boolean30 = strComparableSchema24.getReadOnly();
        strComparableSchema24.setType("");
        strComparableSchema24.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema24.minimum(bigDecimal35);
        java.util.List<java.lang.String> strList37 = strComparableSchema24.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str39 = strComparableSchema38.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema40.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema38.not((io.swagger.oas.models.media.Schema) strComparableSchema40);
        strComparableSchema38.setDescription("hi!");
        strComparableSchema38.addExtension("", (java.lang.Object) 0.0f);
        java.math.BigDecimal bigDecimal49 = strComparableSchema38.getMultipleOf();
        java.math.BigDecimal bigDecimal50 = strComparableSchema38.getMultipleOf();
        java.lang.Boolean boolean51 = strComparableSchema38.getNullable();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema38.properties(strMap52);
        java.util.List<java.lang.String> strList54 = strComparableSchema38.getRequired();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema38.getNot();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema24.additionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema38);
        schema23.setAdditionalProperties((io.swagger.oas.models.media.Schema) strComparableSchema24);
        io.swagger.oas.models.media.Schema schema58 = null;
        schema23.setNot(schema58);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test03996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03996");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation3 = null;
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.externalDocs(externalDocumentation3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema9 = schema7.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.maximum(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.externalDocs(externalDocumentation14);
        java.lang.Integer int16 = schema13.getMaxItems();
        schema13.setType("");
        schema13.setMaxItems((java.lang.Integer) 0);
        schema13.setName("*/*");
        io.swagger.oas.models.media.Discriminator discriminator23 = schema13.getDiscriminator();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList24 = schema13.getEnum();
        schema4.setAdditionalProperties(schema13);
        io.swagger.oas.models.media.Schema schema27 = schema13.uniqueItems((java.lang.Boolean) true);
        schema13.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNull(strComparableList24);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test03997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03997");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Comparable<java.lang.String> strComparable2 = strComparableSchema0.getDefault();
        java.lang.Integer int3 = strComparableSchema0.getMinProperties();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = null;
        strComparableSchema0.setExtensions(strMap6);
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean11 = schema10.getExclusiveMinimum();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(strComparable2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
    }

    @Test
    public void test03998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03998");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema2.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.not((io.swagger.oas.models.media.Schema) strComparableSchema2);
        strComparableSchema0.setDescription("hi!");
        strComparableSchema0.addExtension("", (java.lang.Object) 0.0f);
        strComparableSchema0.setNullable((java.lang.Boolean) false);
        java.lang.String str13 = strComparableSchema0.get$ref();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema0.name("");
        java.math.BigDecimal bigDecimal16 = null;
        strComparableSchema0.setMinimum(bigDecimal16);
        java.lang.Boolean boolean18 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.description("*/*");
        io.swagger.oas.models.media.Schema schema22 = schema20.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema20.$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema20.minLength((java.lang.Integer) 0);
        java.lang.Boolean boolean27 = schema20.getNullable();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
    }

    @Test
    public void test03999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test03999");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation1 = strComparableSchema0.getExternalDocs();
        java.lang.Integer int2 = strComparableSchema0.getMaxLength();
        java.math.BigDecimal bigDecimal3 = null;
        strComparableSchema0.setMaximum(bigDecimal3);
        strComparableSchema0.setMinItems((java.lang.Integer) 100);
        java.lang.String str7 = strComparableSchema0.getName();
        java.util.List<java.lang.String> strList8 = strComparableSchema0.getRequired();
        org.junit.Assert.assertNull(externalDocumentation1);
        org.junit.Assert.assertNull(int2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test04000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test04000");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.title("#/components/schemas/");
        schema6.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean9 = schema6.getReadOnly();
        schema6.setUniqueItems((java.lang.Boolean) false);
        java.lang.Integer int12 = schema6.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(int12);
    }
}

