/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Nov 05 12:43:12 GMT 2021
 */

package org.atmosphere.cpr;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class AtmosphereConfig_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 10000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.atmosphere.cpr.AtmosphereConfig"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/atmosphere/ffc0c6e274094c6423e29d1c45bab1593b8fac7d/evosuite_6"); 
    java.lang.System.setProperty("user.home", "/home/CIN/lmps2"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "lmps2"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
    java.lang.System.setProperty("org.evosuite.shaded.org.dom4j.dom.DOMDocumentFactory.singleton.strategy", "org.evosuite.shaded.org.dom4j.util.SimpleSingleton"); 
    java.lang.System.setProperty("strategy", "EvoSuite"); 
    java.lang.System.setProperty("sun.java.launcher", "SUN_STANDARD"); 
    java.lang.System.setProperty("sun.management.compiler", "HotSpot 64-Bit Tiered Compilers"); 
    java.lang.System.setProperty("sun.boot.class.path", "/usr/lib/jvm/jdk1.8.0_291/jre/lib/resources.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/rt.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/sunrsasign.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jsse.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jce.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/charsets.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jfr.jar:/usr/lib/jvm/jdk1.8.0_291/jre/classes"); 
    java.lang.System.setProperty("OUTPUT_DIR", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/atmosphere/ffc0c6e274094c6423e29d1c45bab1593b8fac7d/evosuite_6"); 
    java.lang.System.setProperty("reflection_start_percent", "0"); 
    java.lang.System.setProperty("process_communication_port", "5709"); 
    java.lang.System.setProperty("org.evosuite.shaded.org.dom4j.factory", "org.evosuite.shaded.org.dom4j.DocumentFactory"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
    java.lang.System.setProperty("sun.boot.library.path", "/usr/lib/jvm/jdk1.8.0_291/jre/lib/amd64"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
    java.lang.System.setProperty("sun.cpu.isalist", ""); 
    java.lang.System.setProperty("sun.jnu.encoding", "UTF-8"); 
    java.lang.System.setProperty("file.encoding.pkg", "sun.io"); 
    java.lang.System.setProperty("PROJECT_PREFIX", ""); 
    java.lang.System.setProperty("logback.configurationFile", "logback-evosuite.xml"); 
    java.lang.System.setProperty("p_functional_mocking", "0"); 
    java.lang.System.setProperty("org.evosuite.shaded.org.dom4j.DocumentFactory.singleton.strategy", "org.evosuite.shaded.org.dom4j.util.SimpleSingleton"); 
    java.lang.System.setProperty("sun.io.unicode.encoding", "UnicodeLittle"); 
    java.lang.System.setProperty("master_log_port", "44565"); 
    java.lang.System.setProperty("sun.java.command", "org.evosuite.ClientProcess"); 
    java.lang.System.setProperty("junit_check", "false"); 
    java.lang.System.setProperty("timeout", "10000"); 
    java.lang.System.setProperty("minimize", "false"); 
    java.lang.System.setProperty("sun.cpu.endian", "little"); 
    java.lang.System.setProperty("sun.os.patch.level", "unknown"); 
    java.lang.System.setProperty("assertion_strategy", "all"); 
    java.lang.System.setProperty("java.vendor.url.bug", "http://bugreport.sun.com/bugreport/"); 
    java.lang.System.setProperty("java.rmi.server.hostname", "127.0.0.1"); 
    java.lang.System.setProperty("CP_file_path", "/tmp/EvoSuite_classpathFile3823669117856361736.txt"); 
    java.lang.System.setProperty("inline", "false"); 
    java.lang.System.setProperty("TARGET_CLASS", "org.atmosphere.cpr.AtmosphereConfig"); 
    java.lang.System.setProperty("evosuite.log.appender", "CLIENT"); 
    java.lang.System.setProperty("search_budget", "300"); 
    java.lang.System.setProperty("p_reflection_on_private", "0"); 
    java.lang.System.setProperty("functional_mocking_percent", "0"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(AtmosphereConfig_ESTest_scaffolding.class.getClassLoader() ,
      "org.glassfish.grizzly.nio.transport.UDPNIOConnection",
      "org.atmosphere.lifecycle.BroadcasterLifecyclePolicyHandler",
      "org.atmosphere.websocket.WebSocket",
      "org.atmosphere.interceptor.HeartbeatInterceptor",
      "org.atmosphere.cpr.AtmosphereRequest$LazyComputation",
      "org.atmosphere.cpr.AtmosphereConfig",
      "org.atmosphere.cpr.BroadcasterListener",
      "org.atmosphere.cpr.BroadcastFilterTest$AR",
      "org.eclipse.jetty.util.MultiMap$1",
      "org.atmosphere.cpr.AtmosphereResourceEvent",
      "org.atmosphere.cpr.AtmosphereConfig$StartupHook",
      "org.glassfish.grizzly.nio.NIOChannelDistributor",
      "org.glassfish.grizzly.asyncqueue.AsyncQueueReader",
      "org.atmosphere.cpr.Broadcaster",
      "org.glassfish.grizzly.SocketConnectorHandler",
      "org.atmosphere.interceptor.AndroidAtmosphereInterceptor",
      "org.atmosphere.cpr.AtmosphereRequest$IS",
      "org.glassfish.grizzly.utils.StateHolder",
      "org.atmosphere.cpr.DefaultAtmosphereResourceFactory",
      "org.glassfish.grizzly.Connection",
      "org.atmosphere.cpr.AtmosphereResourceSessionFactory",
      "org.atmosphere.cpr.AtmosphereResourceHeartbeatEventListener",
      "org.glassfish.grizzly.AbstractTransport",
      "org.atmosphere.cpr.ExcludeSessionBroadcasterTest$AR",
      "org.glassfish.grizzly.WriteResult",
      "org.glassfish.grizzly.attributes.AttributeStorage",
      "org.glassfish.grizzly.nio.transport.UDPNIOTemporarySelectorWriter",
      "org.glassfish.grizzly.Copyable",
      "org.atmosphere.cpr.AtmosphereInterceptorWriter",
      "org.atmosphere.cpr.BroadcasterTest",
      "org.glassfish.grizzly.nio.SelectorHandler",
      "org.atmosphere.interceptor.SSEAtmosphereInterceptor",
      "org.glassfish.grizzly.threadpool.ThreadPoolProbe",
      "org.glassfish.grizzly.OutputSink",
      "org.glassfish.grizzly.monitoring.DefaultMonitoringConfig",
      "org.glassfish.grizzly.nio.transport.UDPNIOTemporarySelectorReader",
      "org.atmosphere.cpr.AtmosphereConfig$ShutdownHook",
      "org.glassfish.grizzly.nio.SelectionKeyHandler",
      "org.atmosphere.cpr.AsyncSupportListener",
      "org.glassfish.grizzly.GrizzlyFuture",
      "org.atmosphere.cpr.AtmosphereFramework$MetaServiceAction",
      "org.glassfish.grizzly.Reader",
      "org.glassfish.grizzly.monitoring.MonitoringConfig",
      "org.glassfish.grizzly.IOStrategy",
      "org.glassfish.grizzly.Writer",
      "org.atmosphere.config.AtmosphereHandlerProperty",
      "org.eclipse.jetty.util.MultiMap",
      "org.glassfish.grizzly.nio.transport.UDPNIOTransport$RegisterChannelCompletionHandler",
      "org.atmosphere.container.Tomcat7BIOSupportWithWebSocket",
      "org.glassfish.grizzly.Processor",
      "org.atmosphere.cpr.AtmosphereRequest",
      "org.atmosphere.util.UUIDProvider",
      "org.atmosphere.interceptor.CorsInterceptor",
      "org.atmosphere.websocket.WebSocketProtocol",
      "org.glassfish.grizzly.filterchain.BaseFilter",
      "org.glassfish.grizzly.attributes.AttributeHolder",
      "org.glassfish.grizzly.utils.NullaryFunction",
      "org.atmosphere.cpr.BroadcasterLifeCyclePolicy",
      "org.atmosphere.cpr.DefaultBroadcaster$WriteQueue",
      "org.atmosphere.cpr.AtmosphereResourceFactory$Async",
      "org.glassfish.grizzly.attributes.AttributeBuilderInitializer",
      "org.glassfish.grizzly.utils.conditions.Condition",
      "org.glassfish.grizzly.nio.tmpselectors.TemporarySelectorIO",
      "org.glassfish.grizzly.AbstractTransport$1",
      "org.glassfish.grizzly.asyncqueue.AsyncQueueRecord",
      "org.glassfish.grizzly.AbstractBindingHandler",
      "org.glassfish.grizzly.nio.NIOTransport",
      "org.atmosphere.config.service.BroadcasterService",
      "org.atmosphere.cpr.AtmosphereResource$TRANSPORT",
      "org.glassfish.grizzly.asyncqueue.AsyncReadQueueRecord",
      "org.glassfish.grizzly.nio.transport.UDPNIOServerConnection",
      "org.glassfish.grizzly.IOEventLifeCycleListener",
      "org.atmosphere.util.EndpointMapper",
      "org.glassfish.grizzly.nio.transport.UDPNIOAsyncQueueWriter",
      "org.mortbay.util.MultiMap",
      "org.glassfish.grizzly.nio.transport.UDPNIOTransport$TransportConnectorHandler",
      "org.glassfish.grizzly.filterchain.Filter",
      "org.glassfish.grizzly.Buffer",
      "org.glassfish.grizzly.nio.tmpselectors.TemporarySelectorWriter",
      "org.atmosphere.config.AtmosphereHandlerConfig",
      "org.atmosphere.cpr.ExcludeSessionBroadcasterTest",
      "org.atmosphere.cpr.AtmosphereResourceEventListener",
      "org.glassfish.grizzly.Readable",
      "org.atmosphere.cpr.AtmosphereResourceListener",
      "org.glassfish.grizzly.asyncqueue.AsyncWriteQueueRecord",
      "org.atmosphere.cpr.AtmosphereResource",
      "org.glassfish.grizzly.nio.NIOConnection",
      "org.atmosphere.cpr.BroadcasterFactory",
      "org.glassfish.grizzly.Transport",
      "org.atmosphere.cpr.BroadcasterLifecyclePolicyTest$B",
      "org.glassfish.grizzly.attributes.DefaultAttributeBuilder",
      "org.atmosphere.cpr.ServiceTest$C",
      "org.atmosphere.cpr.BroadcastFilter",
      "org.atmosphere.cpr.ServiceTest$B",
      "org.glassfish.grizzly.IOEvent",
      "org.atmosphere.cpr.AnnotationProcessor",
      "org.glassfish.grizzly.ProcessorSelector",
      "org.atmosphere.container.TomcatWebSocketUtil$Delegate",
      "org.glassfish.grizzly.ConnectionProbe",
      "org.glassfish.grizzly.ReadResult",
      "org.atmosphere.cpr.AsyncIOWriter",
      "org.atmosphere.cpr.AtmosphereFramework$5",
      "org.atmosphere.interceptor.IdleResourceInterceptor",
      "org.glassfish.grizzly.nio.AbstractNIOAsyncQueueWriter",
      "org.atmosphere.cpr.AtmosphereFramework$3",
      "org.atmosphere.interceptor.JSONPAtmosphereInterceptor",
      "org.glassfish.grizzly.Writeable",
      "org.atmosphere.cpr.AtmosphereFramework$1",
      "org.atmosphere.cpr.AtmosphereResponse",
      "org.glassfish.grizzly.nio.tmpselectors.TemporarySelectorsEnabledTransport",
      "org.glassfish.grizzly.nio.Selectors",
      "org.atmosphere.cpr.DefaultBroadcaster",
      "org.atmosphere.websocket.DefaultWebSocketProcessor",
      "org.glassfish.grizzly.AbstractWriter",
      "org.atmosphere.cpr.AtmosphereRequest$Body",
      "org.atmosphere.cpr.BroadcasterLifecyclePolicyTest",
      "org.atmosphere.cpr.AtmosphereInterceptorAdapter",
      "org.glassfish.grizzly.nio.transport.UDPNIOBindingHandler",
      "org.atmosphere.cpr.WriteTimeoutTest$AR",
      "org.atmosphere.util.SimpleBroadcaster",
      "org.glassfish.grizzly.Result",
      "org.glassfish.grizzly.memory.MemoryManager",
      "org.glassfish.grizzly.asyncqueue.AsyncQueueIO",
      "org.atmosphere.cpr.BroadcasterConfig",
      "org.atmosphere.cpr.AsyncIOWriterAdapter",
      "org.glassfish.grizzly.nio.transport.UDPNIOAsyncQueueReader",
      "org.atmosphere.cpr.AtmosphereFramework$AtmosphereHandlerWrapper",
      "org.atmosphere.cpr.AtmosphereHandler",
      "org.atmosphere.cpr.Action",
      "org.atmosphere.cpr.AsynchronousProcessor",
      "org.atmosphere.cpr.KeepOpenStreamAware",
      "org.glassfish.grizzly.nio.SelectorHandlerTask",
      "org.atmosphere.cpr.BroadcasterLifeCyclePolicy$Builder",
      "org.atmosphere.cpr.BroadcasterCacheListener",
      "org.atmosphere.cpr.DefaultBroadcasterFactory",
      "org.glassfish.grizzly.nio.transport.UDPNIOTransport",
      "org.glassfish.grizzly.asyncqueue.WritableMessage",
      "org.atmosphere.cpr.AtmosphereServletProcessor",
      "org.glassfish.grizzly.EmptyCompletionHandler",
      "org.atmosphere.websocket.WebSocketProcessor",
      "org.atmosphere.cpr.AtmosphereFrameworkListenerAdapter",
      "org.atmosphere.cpr.DefaultAtmosphereResourceFactory$2",
      "org.atmosphere.cpr.DefaultAtmosphereResourceFactory$3",
      "org.atmosphere.cpr.DefaultAtmosphereResourceFactory$1",
      "org.atmosphere.cpr.AtmosphereInterceptor",
      "org.atmosphere.cpr.Action$TYPE",
      "org.glassfish.grizzly.attributes.AttributeBuilder",
      "org.atmosphere.handler.ReflectorServletProcessor",
      "org.mortbay.util.LazyList",
      "org.atmosphere.cpr.ServiceTest",
      "org.glassfish.grizzly.filterchain.FilterChainEnabledTransport",
      "org.glassfish.grizzly.Transport$State",
      "org.atmosphere.interceptor.PaddingAtmosphereInterceptor",
      "org.atmosphere.cpr.BroadcasterConfig$FilterManipulator",
      "org.atmosphere.cpr.BroadcasterFactory$BroadcasterCreationException",
      "org.atmosphere.cpr.AtmosphereResourceEventImpl",
      "org.atmosphere.util.DefaultUUIDProvider",
      "org.atmosphere.cpr.BroadcastFilterTest$Filter",
      "org.glassfish.grizzly.ConnectorHandler",
      "org.glassfish.grizzly.asyncqueue.AsyncQueueIO$Factory",
      "org.atmosphere.cpr.BroadcastFilterTest",
      "org.atmosphere.cpr.MetaBroadcaster",
      "org.atmosphere.handler.AbstractReflectorAtmosphereHandler",
      "org.glassfish.grizzly.Grizzly",
      "org.glassfish.grizzly.nio.transport.UDPNIOConnectorHandler",
      "org.atmosphere.cpr.AtmosphereRequest$NoOpsRequest",
      "org.atmosphere.cpr.BroadcasterLifeCyclePolicy$ATMOSPHERE_RESOURCE_POLICY",
      "org.glassfish.grizzly.GracefulShutdownListener",
      "org.atmosphere.cpr.AtmosphereFrameworkListener",
      "org.atmosphere.interceptor.InvokationOrder",
      "org.atmosphere.cpr.Broadcaster$SCOPE",
      "org.glassfish.grizzly.asyncqueue.AsyncQueue",
      "org.atmosphere.cache.BroadcasterCacheInspector",
      "org.glassfish.grizzly.asyncqueue.AsyncQueueIO$ImmutableAsyncQueueIO",
      "org.atmosphere.cpr.WriteTimeoutTest",
      "org.atmosphere.cpr.Broadcaster$POLICY",
      "org.atmosphere.cpr.BroadcasterTest$AR",
      "org.glassfish.grizzly.strategies.WorkerThreadPoolConfigProducer",
      "org.atmosphere.inject.AtmosphereConfigAware",
      "org.atmosphere.interceptor.InvokationOrder$PRIORITY",
      "org.glassfish.grizzly.asyncqueue.AsyncQueueEnabledTransport",
      "org.glassfish.grizzly.TransportProbe",
      "org.atmosphere.cpr.DefaultBroadcaster$AsyncWriteToken",
      "org.atmosphere.cpr.AtmosphereRequest$Builder",
      "org.atmosphere.cpr.AtmosphereObjectFactory",
      "org.atmosphere.interceptor.OnDisconnectInterceptor",
      "org.glassfish.grizzly.AbstractSocketConnectorHandler",
      "org.glassfish.grizzly.SocketBinder",
      "org.atmosphere.interceptor.JavaScriptProtocol",
      "org.atmosphere.cpr.AsyncSupport",
      "org.atmosphere.websocket.protocol.SimpleHttpProtocol",
      "org.atmosphere.cpr.AtmosphereResourceImpl",
      "org.glassfish.grizzly.Closeable",
      "org.atmosphere.util.DefaultEndpointMapper",
      "org.atmosphere.cpr.AtmosphereResourceFactory",
      "org.atmosphere.cpr.AtmosphereFramework$DefaultAtmosphereObjectFactory",
      "org.glassfish.grizzly.nio.SelectorRunner",
      "org.atmosphere.cpr.BroadcasterLifeCyclePolicyListener",
      "org.atmosphere.cpr.Serializer",
      "org.glassfish.grizzly.impl.FutureImpl",
      "org.atmosphere.container.BlockingIOCometSupport",
      "org.atmosphere.util.ReaderInputStream",
      "org.glassfish.grizzly.AbstractReader",
      "org.atmosphere.lifecycle.LifecycleHandler",
      "org.glassfish.grizzly.threadpool.ThreadPoolConfig",
      "org.atmosphere.interceptor.CacheHeadersInterceptor",
      "org.atmosphere.cpr.Meteor",
      "org.glassfish.grizzly.monitoring.MonitoringAware",
      "org.glassfish.grizzly.nio.transport.UDPNIOTransportFilter",
      "org.glassfish.grizzly.nio.tmpselectors.TemporarySelectorReader",
      "org.atmosphere.cpr.BroadcasterListenerAdapter",
      "org.atmosphere.cpr.AsyncSupportResolver",
      "org.atmosphere.cpr.AtmosphereRequest$ByteInputStream",
      "org.atmosphere.cpr.AtmosphereFramework",
      "org.atmosphere.interceptor.WebSocketMessageSuspendInterceptor",
      "org.glassfish.grizzly.asyncqueue.AsyncQueueWriter",
      "org.glassfish.grizzly.PortRange",
      "org.glassfish.grizzly.nio.AbstractNIOAsyncQueueReader",
      "org.glassfish.grizzly.Cacheable",
      "org.glassfish.grizzly.utils.ArraySet",
      "org.atmosphere.websocket.WebSocketHandler",
      "org.glassfish.grizzly.CompletionHandler"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.atmosphere.cpr.AtmosphereConfig$ShutdownHook", false, AtmosphereConfig_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.atmosphere.cpr.AtmosphereConfig$StartupHook", false, AtmosphereConfig_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(AtmosphereConfig_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.atmosphere.cpr.AtmosphereConfig",
      "org.atmosphere.cpr.AtmosphereResourceImpl",
      "org.atmosphere.cpr.Action",
      "org.atmosphere.cpr.BroadcasterListenerTest$AR",
      "org.atmosphere.cpr.WebSocketStreamingHandlerTest",
      "org.mortbay.component.AbstractLifeCycle",
      "org.mortbay.thread.BoundedThreadPool",
      "org.mortbay.util.IO$NullOS",
      "org.mortbay.util.IO$ClosedIS",
      "org.mortbay.util.IO$NullWrite",
      "org.mortbay.util.IO",
      "org.atmosphere.cpr.AsyncIOWriterAdapter",
      "org.atmosphere.cpr.AtmosphereInterceptorWriter",
      "org.atmosphere.websocket.WebSocket",
      "org.atmosphere.cpr.WebSocketStreamingHandlerTest$ArrayBaseWebSocket",
      "org.atmosphere.handler.AbstractReflectorAtmosphereHandler",
      "org.atmosphere.cpr.AtmosphereFramework$1",
      "org.atmosphere.cpr.AtmosphereFramework",
      "org.atmosphere.util.DefaultEndpointMapper",
      "org.atmosphere.cpr.AtmosphereFramework$DefaultAtmosphereObjectFactory",
      "org.atmosphere.util.DefaultUUIDProvider",
      "org.apache.juli.logging.LogFactory",
      "org.apache.juli.logging.DirectJDKLog",
      "org.apache.tomcat.util.res.StringManager",
      "org.apache.catalina.util.LifecycleBase",
      "org.apache.catalina.util.LifecycleMBeanBase",
      "org.apache.catalina.core.ContainerBase",
      "org.apache.catalina.core.StandardWrapper",
      "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper",
      "org.apache.catalina.util.LifecycleSupport",
      "org.apache.catalina.LifecycleState",
      "org.apache.catalina.core.StandardPipeline",
      "org.apache.catalina.core.StandardWrapperFacade",
      "org.apache.catalina.util.InstanceSupport",
      "org.apache.catalina.valves.ValveBase",
      "org.apache.catalina.core.StandardWrapperValve",
      "org.mortbay.jetty.servlet.DefaultServlet",
      "org.atmosphere.cpr.DefaultBroadcaster",
      "org.atmosphere.util.SimpleBroadcaster",
      "org.atmosphere.cpr.BroadcasterLifecyclePolicyTest$B",
      "org.atmosphere.cpr.DefaultBroadcaster$WriteQueue",
      "org.atmosphere.cpr.BroadcasterLifeCyclePolicy$Builder",
      "org.atmosphere.cpr.BroadcasterLifeCyclePolicy$ATMOSPHERE_RESOURCE_POLICY",
      "org.atmosphere.cpr.BroadcasterLifeCyclePolicy",
      "org.atmosphere.cpr.BroadcastFilterTest$AR",
      "org.atmosphere.cpr.AtmosphereResourceEventImpl",
      "org.atmosphere.cpr.DefaultAtmosphereResourceSessionFactory",
      "org.atmosphere.cpr.AtmosphereResourceEventListenerAdapter",
      "org.atmosphere.cpr.DefaultAtmosphereResourceSessionFactory$1",
      "org.atmosphere.cpr.Deliver$TYPE",
      "org.atmosphere.cpr.DefaultBroadcaster$6",
      "org.atmosphere.annotation.PathTest",
      "org.atmosphere.handler.ReflectorServletProcessor",
      "org.atmosphere.handler.ReflectorServletProcessor$FilterChainServletWrapper",
      "org.atmosphere.util.AtmosphereFilterChain",
      "org.atmosphere.cpr.DefaultBroadcasterFactory",
      "org.atmosphere.cpr.BroadcasterListenerAdapter",
      "org.atmosphere.lifecycle.BroadcasterLifecyclePolicyHandler",
      "org.atmosphere.lifecycle.LifecycleHandler",
      "org.mortbay.util.MultiMap",
      "org.atmosphere.config.AtmosphereHandlerConfig",
      "org.mortbay.util.LazyList",
      "org.mortbay.jetty.servlet.AbstractSessionManager$NullSessionContext",
      "org.mortbay.jetty.servlet.AbstractSessionManager",
      "org.mortbay.jetty.servlet.HashSessionManager",
      "org.atmosphere.annotation.PathTest$ArrayBaseWebSocket",
      "org.atmosphere.cpr.BroadcasterFuture",
      "org.atmosphere.cpr.Deliver",
      "org.atmosphere.websocket.WebSocketHandlerAdapter",
      "org.atmosphere.websocket.WebSocketProcessor$WebSocketHandlerProxy",
      "org.atmosphere.cpr.BroadcasterFactory$BroadcasterCreationException",
      "org.atmosphere.cpr.AtmosphereInterceptorAdapter",
      "org.atmosphere.interceptor.WebSocketMessageSuspendInterceptor",
      "org.atmosphere.cpr.DefaultAtmosphereResourceFactory$1",
      "org.atmosphere.cpr.BroadcasterConfig",
      "org.atmosphere.cpr.DefaultAtmosphereResourceFactory$2",
      "org.atmosphere.cpr.DefaultAtmosphereResourceFactory$3",
      "org.atmosphere.cpr.DefaultAtmosphereResourceFactory",
      "org.atmosphere.cache.UUIDBroadcasterCache",
      "org.atmosphere.cache.BroadcastMessage",
      "org.mortbay.resource.Resource",
      "org.mortbay.resource.URLResource",
      "org.mortbay.log.Log$1",
      "org.mortbay.util.Loader",
      "org.mortbay.log.Slf4jLog",
      "org.mortbay.log.Log",
      "org.mortbay.resource.FileResource",
      "org.atmosphere.cpr.UrlMappingTest$AH",
      "org.atmosphere.cpr.BroadcasterLifecyclePolicyTest$AR",
      "org.atmosphere.util.Utils",
      "org.atmosphere.util.Utils$1",
      "org.atmosphere.cpr.AtmosphereRequest",
      "org.atmosphere.cpr.AtmosphereRequest$Body",
      "org.atmosphere.cpr.AtmosphereRequest$Builder",
      "org.atmosphere.cpr.AtmosphereRequest$NoOpsRequest",
      "org.atmosphere.cpr.AtmosphereRequest$IS",
      "org.apache.coyote.Response",
      "org.apache.tomcat.util.http.MimeHeaders",
      "org.apache.coyote.NotesManagerImpl",
      "org.apache.coyote.http11.InternalOutputBuffer",
      "org.apache.coyote.http11.InternalOutputBuffer$OutputStreamOutputBuffer",
      "org.apache.tomcat.util.buf.ByteChunk",
      "org.atmosphere.cpr.DefaultBroadcasterFactoryTest$TestBroadcaster",
      "org.mortbay.util.URIUtil",
      "org.atmosphere.cpr.AsynchronousProcessor",
      "org.atmosphere.container.BlockingIOCometSupport",
      "org.apache.catalina.Globals",
      "org.apache.catalina.session.StandardSession",
      "org.atmosphere.cpr.BroadcasterListenerTest$L",
      "org.atmosphere.cpr.BroadcasterListenerTest",
      "org.mortbay.jetty.AbstractBuffers",
      "org.mortbay.jetty.AbstractConnector",
      "org.mortbay.jetty.LocalConnector",
      "org.mortbay.jetty.AbstractBuffers$1",
      "org.mortbay.io.ByteArrayEndPoint",
      "org.mortbay.jetty.handler.AbstractHandler",
      "org.mortbay.jetty.handler.AbstractHandlerContainer",
      "org.mortbay.jetty.handler.HandlerWrapper",
      "org.mortbay.jetty.Server$ShutdownHookThread",
      "org.mortbay.jetty.Server",
      "org.mortbay.component.Container",
      "org.mortbay.util.AttributesMap",
      "org.mortbay.jetty.bio.SocketConnector",
      "org.mortbay.io.BufferCache",
      "org.mortbay.util.StringMap",
      "org.mortbay.util.StringMap$Node",
      "org.mortbay.io.AbstractBuffer",
      "org.mortbay.io.ByteArrayBuffer",
      "org.mortbay.io.ByteArrayBuffer$CaseInsensitive",
      "org.mortbay.io.BufferCache$CachedBuffer",
      "org.mortbay.io.Portable",
      "org.mortbay.util.StringUtil",
      "org.mortbay.jetty.MimeTypes",
      "org.atmosphere.cpr.AtmosphereFrameworkTest$MyBroadcasterFactory",
      "org.atmosphere.cpr.ExcludeSessionBroadcasterTest$AR",
      "org.atmosphere.cpr.AtmosphereFramework$AtmosphereHandlerWrapper",
      "org.mortbay.jetty.HttpConnection",
      "org.mortbay.resource.ResourceCollection",
      "org.glassfish.grizzly.http.server.TagLocaleParser",
      "org.glassfish.grizzly.http.server.Request$1",
      "org.glassfish.grizzly.http.server.Request$2",
      "org.glassfish.grizzly.http.server.Request",
      "org.glassfish.grizzly.http.server.Response",
      "org.glassfish.grizzly.http.io.OutputBuffer",
      "org.glassfish.grizzly.http.server.io.ServerOutputBuffer",
      "org.glassfish.grizzly.memory.HeapBuffer",
      "org.glassfish.grizzly.http.io.TemporaryHeapBuffer",
      "org.glassfish.grizzly.http.io.OutputBuffer$ByteArrayCloner",
      "org.glassfish.grizzly.http.io.NIOOutputStream",
      "org.glassfish.grizzly.http.server.NIOOutputStreamImpl",
      "org.glassfish.grizzly.http.io.NIOWriter",
      "org.glassfish.grizzly.http.server.NIOWriterImpl",
      "org.glassfish.grizzly.http.util.UEncoder",
      "org.glassfish.grizzly.http.util.B2CConverter",
      "org.glassfish.grizzly.http.util.UTF8Decoder",
      "org.glassfish.grizzly.http.util.Constants",
      "org.glassfish.grizzly.http.util.CharChunk",
      "org.glassfish.grizzly.http.server.Response$SuspendState",
      "org.glassfish.grizzly.http.server.Response$SuspendedContextImpl",
      "org.glassfish.grizzly.http.server.Request$PathData",
      "org.glassfish.grizzly.http.io.InputBuffer",
      "org.glassfish.grizzly.http.server.io.ServerInputBuffer",
      "org.glassfish.grizzly.http.io.NIOInputStream",
      "org.glassfish.grizzly.http.server.NIOInputStreamImpl",
      "org.glassfish.grizzly.http.io.NIOReader",
      "org.glassfish.grizzly.http.server.NIOReaderImpl",
      "org.glassfish.grizzly.http.server.util.ParameterMap",
      "org.glassfish.grizzly.http.util.Parameters",
      "org.glassfish.grizzly.http.util.DataChunk",
      "org.glassfish.grizzly.http.util.ByteChunk",
      "org.glassfish.grizzly.http.util.BufferChunk",
      "org.glassfish.grizzly.http.util.DataChunk$Type",
      "org.apache.catalina.connector.Connector",
      "org.apache.tomcat.util.http.mapper.Mapper",
      "org.apache.tomcat.util.http.mapper.Mapper$MapElement",
      "org.apache.tomcat.util.http.mapper.Mapper$Context",
      "org.apache.catalina.connector.MapperListener",
      "org.apache.catalina.core.AprLifecycleListener",
      "org.apache.coyote.http11.Http11Protocol",
      "org.apache.tomcat.util.threads.ThreadPool",
      "org.apache.tomcat.util.net.PoolTcpEndpoint",
      "org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler",
      "org.apache.coyote.RequestGroupInfo",
      "org.apache.tomcat.util.http.parser.MediaTypeCache",
      "org.apache.tomcat.util.collections.ConcurrentCache",
      "org.apache.catalina.connector.Response",
      "org.atmosphere.cpr.AtmosphereResponse$1",
      "org.atmosphere.cpr.AtmosphereResponse",
      "org.atmosphere.cpr.AtmosphereResponse$Builder",
      "org.atmosphere.util.ServletProxyFactory$EchoMethodHandler",
      "org.atmosphere.util.ServletProxyFactory",
      "org.atmosphere.util.ServletProxyFactory$UTF8Handler",
      "org.atmosphere.util.ServletProxyFactory$2",
      "org.atmosphere.util.ServletProxyFactory$1",
      "org.atmosphere.cpr.AtmosphereResponse$3",
      "org.atmosphere.cpr.BroadcasterTest$AR",
      "org.jboss.vfs.protocol.AbstractLocalURLStreamHandler",
      "org.jboss.vfs.protocol.FileURLStreamHandler",
      "org.atmosphere.cpr.DefaultBroadcasterTest$B",
      "org.atmosphere.cpr.ServiceTest$B",
      "org.atmosphere.cpr.ConcurrentBroadcasterTest$AR2",
      "org.eclipse.jetty.util.log.Log$1",
      "org.eclipse.jetty.util.Loader",
      "org.eclipse.jetty.util.log.Log",
      "org.eclipse.jetty.util.log.AbstractLogger",
      "org.eclipse.jetty.util.log.Slf4jLog",
      "org.eclipse.jetty.util.log.JettyAwareLogger",
      "org.eclipse.jetty.server.HttpInput$State",
      "org.eclipse.jetty.server.HttpInput$1",
      "org.eclipse.jetty.server.HttpInput$2",
      "org.eclipse.jetty.server.HttpInput$3",
      "org.eclipse.jetty.server.HttpInput$4",
      "org.eclipse.jetty.server.HttpInput",
      "org.eclipse.jetty.server.Request",
      "org.eclipse.jetty.util.AbstractTrie",
      "org.eclipse.jetty.util.ArrayTernaryTrie",
      "org.eclipse.jetty.util.ArrayTrie",
      "org.eclipse.jetty.util.StringUtil",
      "org.eclipse.jetty.http.HttpFields",
      "org.eclipse.jetty.http.HttpVersion",
      "org.atmosphere.cpr.BroadcasterListenerTest$BAR",
      "org.atmosphere.cpr.AtmosphereHandlerTest$AR",
      "org.apache.catalina.session.ManagerBase",
      "org.apache.catalina.session.StandardManager",
      "org.atmosphere.interceptor.PaddingAtmosphereInterceptor",
      "org.atmosphere.interceptor.AtmosphereResourceStateRecovery",
      "org.eclipse.jetty.util.MultiMap",
      "org.glassfish.grizzly.AbstractTransport",
      "org.glassfish.grizzly.nio.NIOTransport",
      "org.glassfish.grizzly.nio.transport.UDPNIOTransport",
      "org.glassfish.grizzly.monitoring.DefaultMonitoringConfig",
      "org.glassfish.grizzly.AbstractTransport$1",
      "org.glassfish.grizzly.utils.ArraySet",
      "org.glassfish.grizzly.utils.StateHolder",
      "org.glassfish.grizzly.Transport$State",
      "org.glassfish.grizzly.nio.tmpselectors.TemporarySelectorIO",
      "org.glassfish.grizzly.AbstractReader",
      "org.glassfish.grizzly.nio.tmpselectors.TemporarySelectorReader",
      "org.glassfish.grizzly.nio.transport.UDPNIOTemporarySelectorReader",
      "org.glassfish.grizzly.AbstractWriter",
      "org.glassfish.grizzly.nio.tmpselectors.TemporarySelectorWriter",
      "org.glassfish.grizzly.nio.transport.UDPNIOTemporarySelectorWriter",
      "org.glassfish.grizzly.AbstractSocketConnectorHandler",
      "org.glassfish.grizzly.nio.transport.UDPNIOConnectorHandler",
      "org.glassfish.grizzly.nio.transport.UDPNIOTransport$TransportConnectorHandler",
      "org.glassfish.grizzly.AbstractBindingHandler",
      "org.glassfish.grizzly.nio.transport.UDPNIOBindingHandler",
      "org.glassfish.grizzly.EmptyCompletionHandler",
      "org.glassfish.grizzly.nio.transport.UDPNIOTransport$RegisterChannelCompletionHandler",
      "org.glassfish.grizzly.nio.AbstractNIOAsyncQueueReader",
      "org.glassfish.grizzly.nio.transport.UDPNIOAsyncQueueReader",
      "org.glassfish.grizzly.nio.AbstractNIOAsyncQueueWriter",
      "org.glassfish.grizzly.nio.transport.UDPNIOAsyncQueueWriter",
      "org.glassfish.grizzly.asyncqueue.AsyncQueueIO$Factory",
      "org.glassfish.grizzly.asyncqueue.AsyncQueueIO$ImmutableAsyncQueueIO",
      "org.glassfish.grizzly.filterchain.BaseFilter",
      "org.glassfish.grizzly.nio.transport.UDPNIOTransportFilter",
      "org.glassfish.grizzly.nio.SelectorRunner",
      "org.glassfish.grizzly.nio.Selectors",
      "org.atmosphere.cpr.BroadcastFilterAdapter",
      "org.atmosphere.interceptor.HeartbeatInterceptor",
      "org.atmosphere.interceptor.OldBrowserPaddingInterceptor",
      "org.atmosphere.cpr.DefaultBroadcaster$1",
      "org.mortbay.jetty.Response$NullOutput",
      "org.mortbay.jetty.Response",
      "org.atmosphere.cpr.ConcurrentBroadcasterTest$AR",
      "org.atmosphere.client.TrackMessageSizeInterceptor",
      "org.atmosphere.cpr.AsyncIOInterceptorAdapter",
      "org.atmosphere.client.TrackMessageSizeInterceptor$Interceptor",
      "org.mortbay.jetty.HttpURI",
      "org.mortbay.util.Utf8StringBuffer",
      "org.mortbay.jetty.HttpParser",
      "org.mortbay.jetty.HttpParser$EventHandler",
      "org.mortbay.jetty.HttpConnection$RequestHandler",
      "org.mortbay.io.View",
      "org.mortbay.util.DateCache",
      "org.mortbay.io.BufferDateCache",
      "org.mortbay.util.StringMap$NullEntry",
      "org.mortbay.jetty.HttpFields",
      "org.mortbay.jetty.Request",
      "org.mortbay.jetty.AbstractGenerator",
      "org.mortbay.jetty.HttpGenerator",
      "org.mortbay.jetty.AbstractGenerator$Output",
      "org.mortbay.jetty.HttpConnection$Output",
      "org.mortbay.resource.JarResource",
      "org.mortbay.resource.JarFileResource",
      "org.atmosphere.config.FrameworkConfiguration",
      "org.atmosphere.cpr.WebSocketProcessorTest",
      "org.atmosphere.cpr.WebSocketProcessorTest$ArrayBaseWebSocket",
      "org.atmosphere.websocket.WebSocketStreamingHandlerAdapter",
      "org.atmosphere.interceptor.JavaScriptProtocol",
      "org.atmosphere.client.TrackMessageSizeFilter",
      "org.atmosphere.cpr.AtmosphereFrameworkListenerAdapter",
      "org.atmosphere.cpr.ServiceTest$C",
      "org.glassfish.grizzly.servlet.WebappContext",
      "org.glassfish.grizzly.servlet.WebappContext$1",
      "org.atmosphere.cpr.BroadcasterListenerTest$CachedAR",
      "org.atmosphere.cpr.BroadcastFilterTest$Filter",
      "org.atmosphere.cpr.UUIDBroadcasterCacheTest$AR",
      "org.apache.catalina.session.PersistentManagerBase",
      "org.apache.catalina.session.PersistentManager",
      "org.apache.tomcat.util.modeler.Registry",
      "org.apache.tomcat.util.modeler.modules.ModelerSource",
      "org.apache.tomcat.util.modeler.modules.MbeansDescriptorsDigesterSource",
      "org.apache.tomcat.util.digester.Digester$SystemPropertySource",
      "org.apache.tomcat.util.digester.Digester",
      "org.apache.tomcat.util.digester.ArrayStack",
      "org.apache.tomcat.util.digester.Rule",
      "org.apache.tomcat.util.digester.ObjectCreateRule",
      "org.apache.tomcat.util.digester.RulesBase",
      "org.apache.tomcat.util.digester.SetPropertiesRule",
      "org.apache.tomcat.util.digester.SetNextRule",
      "org.apache.tomcat.util.digester.CallMethodRule",
      "org.apache.tomcat.util.IntrospectionUtils",
      "org.apache.tomcat.util.modeler.ManagedBean",
      "org.apache.tomcat.util.modeler.FeatureInfo",
      "org.apache.tomcat.util.modeler.AttributeInfo",
      "org.apache.catalina.mbeans.MBeanUtils",
      "org.atmosphere.cpr.BroadcasterCacheTest$AR",
      "org.atmosphere.cpr.WebSocketHandlerTest",
      "org.atmosphere.config.AtmosphereHandlerProperty",
      "org.eclipse.jetty.util.component.AbstractLifeCycle",
      "org.eclipse.jetty.servlet.BaseHolder",
      "org.eclipse.jetty.servlet.Holder",
      "org.eclipse.jetty.servlet.ServletHolder",
      "org.atmosphere.cpr.WriteTimeoutTest$AR",
      "org.atmosphere.cpr.WebSocketHandlerTest$ArrayBaseWebSocket",
      "org.apache.catalina.connector.Request$1",
      "org.apache.catalina.connector.Request$2",
      "org.apache.catalina.connector.Request$3",
      "org.apache.catalina.connector.Request$4",
      "org.apache.catalina.connector.Request$5",
      "org.apache.catalina.connector.Request",
      "org.apache.catalina.connector.InputBuffer",
      "org.apache.tomcat.util.buf.CharChunk",
      "org.apache.catalina.connector.CoyoteInputStream",
      "org.apache.catalina.connector.CoyoteReader",
      "org.apache.catalina.util.ParameterMap",
      "org.apache.catalina.util.StringParser",
      "org.apache.tomcat.util.http.mapper.MappingData",
      "org.apache.tomcat.util.buf.MessageBytes$MessageBytesFactory",
      "org.apache.tomcat.util.buf.MessageBytes",
      "org.atmosphere.container.Servlet30CometSupport",
      "org.atmosphere.container.GlassFishServ30WebSocketSupport",
      "org.atmosphere.util.FakeHttpSession",
      "org.apache.tomcat.util.ExceptionUtils",
      "org.atmosphere.cpr.FrameworkConfig",
      "org.atmosphere.cpr.AtmosphereRequest$NoOpsRequest$1",
      "org.glassfish.grizzly.servlet.FilterChainFactory",
      "org.glassfish.grizzly.http.server.util.Mapper",
      "org.atmosphere.cpr.BroadcasterLifeCyclePolicyListenerAdapter",
      "org.atmosphere.cpr.HeartbeatAtmosphereResourceEvent",
      "org.atmosphere.interceptor.ShiroInterceptor",
      "org.atmosphere.util.IOUtils$1",
      "org.atmosphere.util.IOUtils",
      "org.atmosphere.cpr.DefaultMetaBroadcaster$MetaBroadcasterFuture",
      "org.atmosphere.cpr.DefaultMetaBroadcaster",
      "org.atmosphere.cpr.MetaBroadcaster$NoCache",
      "org.atmosphere.cpr.DefaultBroadcaster$AsyncWriteToken",
      "org.testng.internal.thread.ThreadUtil$ThreadFactoryImpl",
      "org.testng.internal.thread.TestNGThread",
      "org.atmosphere.cpr.AtmosphereResponse$2",
      "org.mortbay.jetty.handler.ContextHandler",
      "org.atmosphere.interceptor.NginxInterceptor",
      "org.atmosphere.interceptor.CorsInterceptor",
      "org.atmosphere.cpr.AsyncSupportListenerAdapter",
      "org.atmosphere.cpr.AtmosphereFilter",
      "org.atmosphere.cpr.AtmosphereServlet",
      "org.atmosphere.cpr.AtmosphereFrameworkInitializer",
      "org.atmosphere.cpr.AtmosphereFilter$1",
      "org.atmosphere.cpr.Broadcaster$SCOPE",
      "org.atmosphere.cpr.Broadcaster$POLICY",
      "org.glassfish.grizzly.attributes.AttributeBuilderInitializer",
      "org.glassfish.grizzly.attributes.DefaultAttributeBuilder",
      "org.glassfish.grizzly.attributes.AttributeBuilder",
      "org.glassfish.grizzly.Grizzly",
      "org.atmosphere.cpr.Action$TYPE"
    );
  }
}
